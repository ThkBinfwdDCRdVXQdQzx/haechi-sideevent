{
	"id": "2065631448ab8af62c3b5a2e37962e51",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/4_Game.sol": {
				"content": "pragma solidity >=0.7.0 <0.9.0;\r\n\r\n// import {Context} from \"./context.sol\";\r\n// import {IERC20} from \"./IERC20.sol\";\r\n// import {Ownable} from \"./ownable.sol\";\r\nimport {IERC20} from \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/interfaces/IERC20.sol\";\r\nimport {Context} from \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\";\r\nimport {Ownable} from \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol\";\r\n\r\n// import \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\";\r\nimport {AccessControl } from \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\";\r\n// import \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.2/contracts/access/AccessControl.sol\";\r\n// https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol\r\n\r\ncontract GameContract is Context, AccessControl {\r\n    struct Game {\r\n        bool initialized;\r\n        mapping(address => uint) bettings;\r\n        uint totalBettings;\r\n        address[] users;\r\n        address winner;\r\n    }\r\n\r\n    event GameStart(uint gameId);\r\n    event Bat(address batter, uint amount);\r\n    event GameFinish(address winner, uint reward, uint fee);\r\n    event Withdraw(address withdrawer, uint amount);\r\n\r\n    mapping(uint => Game) public games;\r\n    uint[] public gameIds;\r\n    address public tokenContract;\r\n    uint public feePercent = 20;\r\n    uint public feeTotal = 0;\r\n\r\n    constructor() {\r\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n    }\r\n\r\n\r\n    function setErc20(address newContract) public onlyRole(DEFAULT_ADMIN_ROLE) returns (bool) {\r\n        tokenContract = newContract;\r\n        return true;\r\n    }\r\n\r\n    function startGame(uint newId) public returns (bool) {\r\n        require(games[newId].initialized == false, \"Game exists\");\r\n        games[newId].initialized = true;\r\n        gameIds.push(newId);\r\n        emit GameStart(newId);\r\n        return true;\r\n    }\r\n\r\n    function listGameIds() public view returns (uint[] memory) {\r\n        return gameIds;\r\n    }\r\n\r\n    function bet(uint gameId, uint amount) public returns (bool) {\r\n        require(games[gameId].initialized, \"Game Initialized\");\r\n        require(games[gameId].winner == address(0), \"Finished\");\r\n        require(IERC20(tokenContract).balanceOf(msg.sender) >= amount, \"Enough balance\");\r\n\r\n        require(IERC20(tokenContract).transferFrom(msg.sender, address(this), amount), \"Transfer should success\");\r\n        if (games[gameId].bettings[msg.sender] == 0) {\r\n            games[gameId].users.push(msg.sender);\r\n        }\r\n        games[gameId].bettings[msg.sender] += amount;\r\n        games[gameId].totalBettings += amount;\r\n        emit Bat(msg.sender, amount);\r\n        return true;\r\n    }\r\n\r\n    function finish(uint gameId, address winner) public onlyRole(DEFAULT_ADMIN_ROLE) returns (uint) {\r\n        require(games[gameId].initialized, \"Game Initialized\");\r\n        require(games[gameId].winner == address(0), \"Finished\");\r\n        games[gameId].winner = winner;\r\n        uint reward = ((100 - feePercent) * games[gameId].totalBettings) / 100;\r\n        uint fee = games[gameId].totalBettings - reward;\r\n        require(fee + reward == games[gameId].totalBettings, \"reward + fee = total\");\r\n        require(reward >= 0 && fee >= 0 && games[gameId].totalBettings >= 0, \"all positive\");\r\n\r\n        require(IERC20(tokenContract).transfer(winner, reward), \"Reward should success\");\r\n        feeTotal += fee;\r\n        emit GameFinish(winner, reward, fee);\r\n        return reward;\r\n    }\r\n\r\n    function gameUsers(uint gameId) public view returns (address[] memory) {\r\n        require(games[gameId].initialized, \"Game Initialized\");\r\n        return games[gameId].users;\r\n    }\r\n\r\n    function getBetting(uint gameId, address better) public view returns (uint) {\r\n        require(games[gameId].initialized, \"Game Initialized\");\r\n        return games[gameId].bettings[better];\r\n    }\r\n\r\n    function myBetting(uint gameId) public view returns (uint) {\r\n        require(games[gameId].initialized, \"Game Initialized\");\r\n        return games[gameId].bettings[msg.sender];\r\n    }\r\n\r\n    function withdrawAll() public onlyRole(DEFAULT_ADMIN_ROLE) returns (uint amount) {\r\n        require(feeTotal > 0, \"No fee\");\r\n        require(IERC20(tokenContract).transfer(msg.sender, feeTotal), \"transfer fee\");\r\n        amount = feeTotal;\r\n        feeTotal = 0;\r\n        emit Withdraw(msg.sender, amount);\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC20/IERC20.sol\";\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/4_Game.sol": {
				"GameContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "batter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Bat",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "GameFinish",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gameId",
									"type": "uint256"
								}
							],
							"name": "GameStart",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "withdrawer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "bet",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feePercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "winner",
									"type": "address"
								}
							],
							"name": "finish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "gameIds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameId",
									"type": "uint256"
								}
							],
							"name": "gameUsers",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "games",
							"outputs": [
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "totalBettings",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "winner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "better",
									"type": "address"
								}
							],
							"name": "getBetting",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "listGameIds",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameId",
									"type": "uint256"
								}
							],
							"name": "myBetting",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newContract",
									"type": "address"
								}
							],
							"name": "setErc20",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newId",
									"type": "uint256"
								}
							],
							"name": "startGame",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAll",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/4_Game.sol\":1006:4619  contract GameContract is Context, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/4_Game.sol\":1567:1569  20 */\n  0x14\n    /* \"contracts/4_Game.sol\":1542:1569  uint public feePercent = 20 */\n  0x04\n  sstore\n    /* \"contracts/4_Game.sol\":1599:1600  0 */\n  0x00\n    /* \"contracts/4_Game.sol\":1576:1600  uint public feeTotal = 0 */\n  0x05\n  sstore\n    /* \"contracts/4_Game.sol\":1609:1684  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/4_Game.sol\":1634:1676  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2198:2202  0x00 */\n  0x00\n    /* \"contracts/4_Game.sol\":1645:1663  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/4_Game.sol\":1665:1675  msg.sender */\n  caller\n    /* \"contracts/4_Game.sol\":1634:1644  _setupRole */\n  shl(0x20, tag_5)\n    /* \"contracts/4_Game.sol\":1634:1676  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/4_Game.sol\":1006:4619  contract GameContract is Context, AccessControl {... */\n  jump(tag_6)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6937:7047  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7015:7040  _grantRole(role, account) */\n  tag_8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7026:7030  role */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7032:7039  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7015:7025  _grantRole */\n  shl(0x20, tag_9)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7015:7040  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6937:7047  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_9:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n  tag_11\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7678:7682  role */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7684:7691  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7670:7677  hasRole */\n  shl(0x20, tag_12)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n  tag_13\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7740:7744  true */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7708:7714  _roles */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7715:7719  role */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7708:7728  _roles[role].members */\n  0x00\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7729:7736  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7708:7744  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n  tag_14\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7790:7800  _msgSender */\n  shl(0x20, tag_15)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7781:7788  account */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7775:7779  role */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\ntag_13:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_12:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3107:3111  bool */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3130:3136  _roles */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3137:3141  role */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3130:3150  _roles[role].members */\n  0x00\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3151:3158  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3123:3159  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/4_Game.sol\":1006:4619  contract GameContract is Context, AccessControl {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/4_Game.sol\":1006:4619  contract GameContract is Context, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6ffcc719\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xce33bd74\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd82c13f0\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe5ed1d59\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xee9b80a4\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x6ffcc719\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7fd6f15c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x853828b6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9bc01b36\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x34fcc3e7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x37bfc1ef\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x55a373d6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x117a5b90\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x16b169c4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2c32b187\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/4_Game.sol\":1438:1472  mapping(uint => Game) public games */\n    tag_4:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/4_Game.sol\":3716:3897  function gameUsers(uint gameId) public view returns (address[] memory) {... */\n    tag_5:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_6:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/4_Game.sol\":2922:3708  function finish(uint gameId, address winner) public onlyRole(DEFAULT_ADMIN_ROLE) returns (uint) {... */\n    tag_7:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_8:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/4_Game.sol\":3905:4102  function getBetting(uint gameId, address better) public view returns (uint) {... */\n    tag_9:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_10:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/4_Game.sol\":1576:1600  uint public feeTotal = 0 */\n    tag_11:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/4_Game.sol\":1507:1535  address public tokenContract */\n    tag_12:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/4_Game.sol\":2223:2914  function bet(uint gameId, uint amount) public returns (bool) {... */\n    tag_13:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/4_Game.sol\":1542:1569  uint public feePercent = 20 */\n    tag_14:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/4_Game.sol\":4302:4616  function withdrawAll() public onlyRole(DEFAULT_ADMIN_ROLE) returns (uint amount) {... */\n    tag_15:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/4_Game.sol\":2123:2215  function listGameIds() public view returns (uint[] memory) {... */\n    tag_17:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_18:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/4_Game.sol\":4110:4294  function myBetting(uint gameId) public view returns (uint) {... */\n    tag_19:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_20:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"contracts/4_Game.sol\":1479:1500  uint[] public gameIds */\n    tag_21:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/4_Game.sol\":1860:2115  function startGame(uint newId) public returns (bool) {... */\n    tag_22:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/4_Game.sol\":1694:1852  function setErc20(address newContract) public onlyRole(DEFAULT_ADMIN_ROLE) returns (bool) {... */\n    tag_23:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2817:2821  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2855:2887  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2840:2887  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2840:2851  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2840:2887  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2840:2927  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_117\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2891:2927  super.supportsInterface(interfaceId) */\n      tag_118\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2915:2926  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2891:2914  super.supportsInterface */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2891:2927  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2840:2927  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2833:2927  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/4_Game.sol\":1438:1472  mapping(uint => Game) public games */\n    tag_36:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/4_Game.sol\":3716:3897  function gameUsers(uint gameId) public view returns (address[] memory) {... */\n    tag_41:\n        /* \"contracts/4_Game.sol\":3769:3785  address[] memory */\n      0x60\n        /* \"contracts/4_Game.sol\":3806:3811  games */\n      0x01\n        /* \"contracts/4_Game.sol\":3806:3819  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":3812:3818  gameId */\n      dup4\n        /* \"contracts/4_Game.sol\":3806:3819  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":3806:3831  games[gameId].initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_Game.sol\":3798:3852  require(games[gameId].initialized, \"Game Initialized\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/4_Game.sol\":3870:3875  games */\n      0x01\n        /* \"contracts/4_Game.sol\":3870:3883  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":3876:3882  gameId */\n      dup4\n        /* \"contracts/4_Game.sol\":3870:3883  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":3870:3889  games[gameId].users */\n      0x03\n      add\n        /* \"contracts/4_Game.sol\":3863:3889  return games[gameId].users */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_125:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_125\n      jumpi\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/4_Game.sol\":3716:3897  function gameUsers(uint gameId) public view returns (address[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4578:4585  bytes32 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4604:4610  _roles */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4604:4616  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4611:4615  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4604:4616  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4604:4626  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4597:4626  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/4_Game.sol\":2922:3708  function finish(uint gameId, address winner) public onlyRole(DEFAULT_ADMIN_ROLE) returns (uint) {... */\n    tag_53:\n        /* \"contracts/4_Game.sol\":3012:3016  uint */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2198:2202  0x00 */\n      dup1\n        /* \"contracts/4_Game.sol\":2983:3001  DEFAULT_ADMIN_ROLE */\n      0x00\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_129\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/4_Game.sol\":3037:3042  games */\n      0x01\n        /* \"contracts/4_Game.sol\":3037:3050  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":3043:3049  gameId */\n      dup6\n        /* \"contracts/4_Game.sol\":3037:3050  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":3037:3062  games[gameId].initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_Game.sol\":3029:3083  require(games[gameId].initialized, \"Game Initialized\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_123\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"contracts/4_Game.sol\":3134:3135  0 */\n      0x00\n        /* \"contracts/4_Game.sol\":3102:3136  games[gameId].winner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/4_Game.sol\":3102:3107  games */\n      0x01\n        /* \"contracts/4_Game.sol\":3102:3115  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":3108:3114  gameId */\n      dup7\n        /* \"contracts/4_Game.sol\":3102:3115  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":3102:3122  games[gameId].winner */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/4_Game.sol\":3102:3136  games[gameId].winner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/4_Game.sol\":3094:3149  require(games[gameId].winner == address(0), \"Finished\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/4_Game.sol\":3183:3189  winner */\n      dup3\n        /* \"contracts/4_Game.sol\":3160:3165  games */\n      0x01\n        /* \"contracts/4_Game.sol\":3160:3173  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":3166:3172  gameId */\n      dup7\n        /* \"contracts/4_Game.sol\":3160:3173  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":3160:3180  games[gameId].winner */\n      0x04\n      add\n      0x00\n        /* \"contracts/4_Game.sol\":3160:3189  games[gameId].winner = winner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/4_Game.sol\":3200:3211  uint reward */\n      0x00\n        /* \"contracts/4_Game.sol\":3267:3270  100 */\n      0x64\n        /* \"contracts/4_Game.sol\":3236:3241  games */\n      0x01\n        /* \"contracts/4_Game.sol\":3236:3249  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":3242:3248  gameId */\n      dup8\n        /* \"contracts/4_Game.sol\":3236:3249  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":3236:3263  games[gameId].totalBettings */\n      0x02\n      add\n      sload\n        /* \"contracts/4_Game.sol\":3222:3232  feePercent */\n      sload(0x04)\n        /* \"contracts/4_Game.sol\":3216:3219  100 */\n      0x64\n        /* \"contracts/4_Game.sol\":3216:3232  100 - feePercent */\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"contracts/4_Game.sol\":3215:3263  (100 - feePercent) * games[gameId].totalBettings */\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"contracts/4_Game.sol\":3214:3270  ((100 - feePercent) * games[gameId].totalBettings) / 100 */\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"contracts/4_Game.sol\":3200:3270  uint reward = ((100 - feePercent) * games[gameId].totalBettings) / 100 */\n      swap1\n      pop\n        /* \"contracts/4_Game.sol\":3281:3289  uint fee */\n      0x00\n        /* \"contracts/4_Game.sol\":3322:3328  reward */\n      dup2\n        /* \"contracts/4_Game.sol\":3292:3297  games */\n      0x01\n        /* \"contracts/4_Game.sol\":3292:3305  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":3298:3304  gameId */\n      dup9\n        /* \"contracts/4_Game.sol\":3292:3305  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":3292:3319  games[gameId].totalBettings */\n      0x02\n      add\n      sload\n        /* \"contracts/4_Game.sol\":3292:3328  games[gameId].totalBettings - reward */\n      tag_142\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_142:\n        /* \"contracts/4_Game.sol\":3281:3328  uint fee = games[gameId].totalBettings - reward */\n      swap1\n      pop\n        /* \"contracts/4_Game.sol\":3363:3368  games */\n      0x01\n        /* \"contracts/4_Game.sol\":3363:3376  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":3369:3375  gameId */\n      dup8\n        /* \"contracts/4_Game.sol\":3363:3376  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":3363:3390  games[gameId].totalBettings */\n      0x02\n      add\n      sload\n        /* \"contracts/4_Game.sol\":3353:3359  reward */\n      dup3\n        /* \"contracts/4_Game.sol\":3347:3350  fee */\n      dup3\n        /* \"contracts/4_Game.sol\":3347:3359  fee + reward */\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"contracts/4_Game.sol\":3347:3390  fee + reward == games[gameId].totalBettings */\n      eq\n        /* \"contracts/4_Game.sol\":3339:3415  require(fee + reward == games[gameId].totalBettings, \"reward + fee = total\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"contracts/4_Game.sol\":3444:3445  0 */\n      0x00\n        /* \"contracts/4_Game.sol\":3434:3440  reward */\n      dup3\n        /* \"contracts/4_Game.sol\":3434:3445  reward >= 0 */\n      lt\n      iszero\n        /* \"contracts/4_Game.sol\":3434:3457  reward >= 0 && fee >= 0 */\n      dup1\n      iszero\n      tag_148\n      jumpi\n      pop\n        /* \"contracts/4_Game.sol\":3456:3457  0 */\n      0x00\n        /* \"contracts/4_Game.sol\":3449:3452  fee */\n      dup2\n        /* \"contracts/4_Game.sol\":3449:3457  fee >= 0 */\n      lt\n      iszero\n        /* \"contracts/4_Game.sol\":3434:3457  reward >= 0 && fee >= 0 */\n    tag_148:\n        /* \"contracts/4_Game.sol\":3434:3493  reward >= 0 && fee >= 0 && games[gameId].totalBettings >= 0 */\n      dup1\n      iszero\n      tag_149\n      jumpi\n      pop\n        /* \"contracts/4_Game.sol\":3492:3493  0 */\n      0x00\n        /* \"contracts/4_Game.sol\":3461:3466  games */\n      0x01\n        /* \"contracts/4_Game.sol\":3461:3474  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":3467:3473  gameId */\n      dup9\n        /* \"contracts/4_Game.sol\":3461:3474  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":3461:3488  games[gameId].totalBettings */\n      0x02\n      add\n      sload\n        /* \"contracts/4_Game.sol\":3461:3493  games[gameId].totalBettings >= 0 */\n      lt\n      iszero\n        /* \"contracts/4_Game.sol\":3434:3493  reward >= 0 && fee >= 0 && games[gameId].totalBettings >= 0 */\n    tag_149:\n        /* \"contracts/4_Game.sol\":3426:3510  require(reward >= 0 && fee >= 0 && games[gameId].totalBettings >= 0, \"all positive\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"contracts/4_Game.sol\":3538:3551  tokenContract */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/4_Game.sol\":3531:3561  IERC20(tokenContract).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/4_Game.sol\":3562:3568  winner */\n      dup7\n        /* \"contracts/4_Game.sol\":3570:3576  reward */\n      dup5\n        /* \"contracts/4_Game.sol\":3531:3577  IERC20(tokenContract).transfer(winner, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/4_Game.sol\":3523:3603  require(IERC20(tokenContract).transfer(winner, reward), \"Reward should success\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"contracts/4_Game.sol\":3626:3629  fee */\n      dup1\n        /* \"contracts/4_Game.sol\":3614:3622  feeTotal */\n      0x05\n      0x00\n        /* \"contracts/4_Game.sol\":3614:3629  feeTotal += fee */\n      dup3\n      dup3\n      sload\n      tag_162\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_162:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/4_Game.sol\":3645:3676  GameFinish(winner, reward, fee) */\n      0x3b6f6a175407b0e278b9798f8be45bcc2cdba01a995bf768f528b457d7e27e85\n        /* \"contracts/4_Game.sol\":3656:3662  winner */\n      dup6\n        /* \"contracts/4_Game.sol\":3664:3670  reward */\n      dup4\n        /* \"contracts/4_Game.sol\":3672:3675  fee */\n      dup4\n        /* \"contracts/4_Game.sol\":3645:3676  GameFinish(winner, reward, fee) */\n      mload(0x40)\n      tag_163\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/4_Game.sol\":3694:3700  reward */\n      dup2\n        /* \"contracts/4_Game.sol\":3687:3700  return reward */\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/4_Game.sol\":2922:3708  function finish(uint gameId, address winner) public onlyRole(DEFAULT_ADMIN_ROLE) returns (uint) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5012:5030  getRoleAdmin(role) */\n      tag_165\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5025:5029  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5012:5024  getRoleAdmin */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5012:5030  getRoleAdmin(role) */\n      jump\t// in\n    tag_165:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_167\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_129\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_167:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5042:5067  _grantRole(role, account) */\n      tag_169\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5053:5057  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5059:5066  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5042:5052  _grantRole */\n      tag_170\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5042:5067  _grantRole(role, account) */\n      jump\t// in\n    tag_169:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_Game.sol\":3905:4102  function getBetting(uint gameId, address better) public view returns (uint) {... */\n    tag_62:\n        /* \"contracts/4_Game.sol\":3975:3979  uint */\n      0x00\n        /* \"contracts/4_Game.sol\":4000:4005  games */\n      0x01\n        /* \"contracts/4_Game.sol\":4000:4013  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":4006:4012  gameId */\n      dup5\n        /* \"contracts/4_Game.sol\":4000:4013  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":4000:4025  games[gameId].initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_Game.sol\":3992:4046  require(games[gameId].initialized, \"Game Initialized\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_123\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/4_Game.sol\":4064:4069  games */\n      0x01\n        /* \"contracts/4_Game.sol\":4064:4077  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":4070:4076  gameId */\n      dup5\n        /* \"contracts/4_Game.sol\":4064:4077  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":4064:4086  games[gameId].bettings */\n      0x01\n      add\n        /* \"contracts/4_Game.sol\":4064:4094  games[gameId].bettings[better] */\n      0x00\n        /* \"contracts/4_Game.sol\":4087:4093  better */\n      dup4\n        /* \"contracts/4_Game.sol\":4064:4094  games[gameId].bettings[better] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/4_Game.sol\":4057:4094  return games[gameId].bettings[better] */\n      swap1\n      pop\n        /* \"contracts/4_Game.sol\":3905:4102  function getBetting(uint gameId, address better) public view returns (uint) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6144:6156  _msgSender() */\n      tag_175\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6144:6154  _msgSender */\n      tag_176\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6144:6156  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6133:6156  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6133:6140  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6133:6156  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6125:6208  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6219:6245  _revokeRole(role, account) */\n      tag_180\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6231:6235  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6237:6244  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6219:6230  _revokeRole */\n      tag_181\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6219:6245  _revokeRole(role, account) */\n      jump\t// in\n    tag_180:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_Game.sol\":1576:1600  uint public feeTotal = 0 */\n    tag_68:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/4_Game.sol\":1507:1535  address public tokenContract */\n    tag_71:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/4_Game.sol\":2223:2914  function bet(uint gameId, uint amount) public returns (bool) {... */\n    tag_77:\n        /* \"contracts/4_Game.sol\":2278:2282  bool */\n      0x00\n        /* \"contracts/4_Game.sol\":2303:2308  games */\n      0x01\n        /* \"contracts/4_Game.sol\":2303:2316  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":2309:2315  gameId */\n      dup5\n        /* \"contracts/4_Game.sol\":2303:2316  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":2303:2328  games[gameId].initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_Game.sol\":2295:2349  require(games[gameId].initialized, \"Game Initialized\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_123\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"contracts/4_Game.sol\":2400:2401  0 */\n      0x00\n        /* \"contracts/4_Game.sol\":2368:2402  games[gameId].winner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/4_Game.sol\":2368:2373  games */\n      0x01\n        /* \"contracts/4_Game.sol\":2368:2381  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":2374:2380  gameId */\n      dup6\n        /* \"contracts/4_Game.sol\":2368:2381  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":2368:2388  games[gameId].winner */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/4_Game.sol\":2368:2402  games[gameId].winner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/4_Game.sol\":2360:2415  require(games[gameId].winner == address(0), \"Finished\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_135\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"contracts/4_Game.sol\":2481:2487  amount */\n      dup2\n        /* \"contracts/4_Game.sol\":2441:2454  tokenContract */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/4_Game.sol\":2434:2465  IERC20(tokenContract).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/4_Game.sol\":2466:2476  msg.sender */\n      caller\n        /* \"contracts/4_Game.sol\":2434:2477  IERC20(tokenContract).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_187:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"contracts/4_Game.sol\":2434:2487  IERC20(tokenContract).balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/4_Game.sol\":2426:2506  require(IERC20(tokenContract).balanceOf(msg.sender) >= amount, \"Enough balance\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/4_Game.sol\":2534:2547  tokenContract */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/4_Game.sol\":2527:2561  IERC20(tokenContract).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/4_Game.sol\":2562:2572  msg.sender */\n      caller\n        /* \"contracts/4_Game.sol\":2582:2586  this */\n      address\n        /* \"contracts/4_Game.sol\":2589:2595  amount */\n      dup6\n        /* \"contracts/4_Game.sol\":2527:2596  IERC20(tokenContract).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_199:\n        /* \"contracts/4_Game.sol\":2519:2624  require(IERC20(tokenContract).transferFrom(msg.sender, address(this), amount), \"Transfer should success\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/4_Game.sol\":2677:2678  0 */\n      0x00\n        /* \"contracts/4_Game.sol\":2639:2644  games */\n      0x01\n        /* \"contracts/4_Game.sol\":2639:2652  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":2645:2651  gameId */\n      dup6\n        /* \"contracts/4_Game.sol\":2639:2652  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":2639:2661  games[gameId].bettings */\n      0x01\n      add\n        /* \"contracts/4_Game.sol\":2639:2673  games[gameId].bettings[msg.sender] */\n      0x00\n        /* \"contracts/4_Game.sol\":2662:2672  msg.sender */\n      caller\n        /* \"contracts/4_Game.sol\":2639:2673  games[gameId].bettings[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/4_Game.sol\":2639:2678  games[gameId].bettings[msg.sender] == 0 */\n      sub\n        /* \"contracts/4_Game.sol\":2635:2743  if (games[gameId].bettings[msg.sender] == 0) {... */\n      tag_203\n      jumpi\n        /* \"contracts/4_Game.sol\":2695:2700  games */\n      0x01\n        /* \"contracts/4_Game.sol\":2695:2708  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":2701:2707  gameId */\n      dup5\n        /* \"contracts/4_Game.sol\":2695:2708  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":2695:2714  games[gameId].users */\n      0x03\n      add\n        /* \"contracts/4_Game.sol\":2720:2730  msg.sender */\n      caller\n        /* \"contracts/4_Game.sol\":2695:2731  games[gameId].users.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/4_Game.sol\":2635:2743  if (games[gameId].bettings[msg.sender] == 0) {... */\n    tag_203:\n        /* \"contracts/4_Game.sol\":2791:2797  amount */\n      dup2\n        /* \"contracts/4_Game.sol\":2753:2758  games */\n      0x01\n        /* \"contracts/4_Game.sol\":2753:2766  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":2759:2765  gameId */\n      dup6\n        /* \"contracts/4_Game.sol\":2753:2766  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":2753:2775  games[gameId].bettings */\n      0x01\n      add\n        /* \"contracts/4_Game.sol\":2753:2787  games[gameId].bettings[msg.sender] */\n      0x00\n        /* \"contracts/4_Game.sol\":2776:2786  msg.sender */\n      caller\n        /* \"contracts/4_Game.sol\":2753:2787  games[gameId].bettings[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/4_Game.sol\":2753:2797  games[gameId].bettings[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_205\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_205:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/4_Game.sol\":2839:2845  amount */\n      dup2\n        /* \"contracts/4_Game.sol\":2808:2813  games */\n      0x01\n        /* \"contracts/4_Game.sol\":2808:2821  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":2814:2820  gameId */\n      dup6\n        /* \"contracts/4_Game.sol\":2808:2821  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":2808:2835  games[gameId].totalBettings */\n      0x02\n      add\n      0x00\n        /* \"contracts/4_Game.sol\":2808:2845  games[gameId].totalBettings += amount */\n      dup3\n      dup3\n      sload\n      tag_206\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_206:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/4_Game.sol\":2861:2884  Bat(msg.sender, amount) */\n      0xfb4c42ca2d93f0a673c2125aaa3c7b3fbeee9533e34b1f2c0f8f5c4d4d8bf106\n        /* \"contracts/4_Game.sol\":2865:2875  msg.sender */\n      caller\n        /* \"contracts/4_Game.sol\":2877:2883  amount */\n      dup4\n        /* \"contracts/4_Game.sol\":2861:2884  Bat(msg.sender, amount) */\n      mload(0x40)\n      tag_207\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/4_Game.sol\":2902:2906  true */\n      0x01\n        /* \"contracts/4_Game.sol\":2895:2906  return true */\n      swap1\n      pop\n        /* \"contracts/4_Game.sol\":2223:2914  function bet(uint gameId, uint amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_Game.sol\":1542:1569  uint public feePercent = 20 */\n    tag_80:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/4_Game.sol\":4302:4616  function withdrawAll() public onlyRole(DEFAULT_ADMIN_ROLE) returns (uint amount) {... */\n    tag_83:\n        /* \"contracts/4_Game.sol\":4370:4381  uint amount */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2198:2202  0x00 */\n      dup1\n        /* \"contracts/4_Game.sol\":4341:4359  DEFAULT_ADMIN_ROLE */\n      0x00\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_209\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_129\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/4_Game.sol\":4413:4414  0 */\n      0x00\n        /* \"contracts/4_Game.sol\":4402:4410  feeTotal */\n      sload(0x05)\n        /* \"contracts/4_Game.sol\":4402:4414  feeTotal > 0 */\n      gt\n        /* \"contracts/4_Game.sol\":4394:4425  require(feeTotal > 0, \"No fee\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"contracts/4_Game.sol\":4451:4464  tokenContract */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/4_Game.sol\":4444:4474  IERC20(tokenContract).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/4_Game.sol\":4475:4485  msg.sender */\n      caller\n        /* \"contracts/4_Game.sol\":4487:4495  feeTotal */\n      sload(0x05)\n        /* \"contracts/4_Game.sol\":4444:4496  IERC20(tokenContract).transfer(msg.sender, feeTotal) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_214:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_216:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_217:\n        /* \"contracts/4_Game.sol\":4436:4513  require(IERC20(tokenContract).transfer(msg.sender, feeTotal), \"transfer fee\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"contracts/4_Game.sol\":4533:4541  feeTotal */\n      sload(0x05)\n        /* \"contracts/4_Game.sol\":4524:4541  amount = feeTotal */\n      swap2\n      pop\n        /* \"contracts/4_Game.sol\":4563:4564  0 */\n      0x00\n        /* \"contracts/4_Game.sol\":4552:4560  feeTotal */\n      0x05\n        /* \"contracts/4_Game.sol\":4552:4564  feeTotal = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/4_Game.sol\":4580:4608  Withdraw(msg.sender, amount) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"contracts/4_Game.sol\":4589:4599  msg.sender */\n      caller\n        /* \"contracts/4_Game.sol\":4601:4607  amount */\n      dup4\n        /* \"contracts/4_Game.sol\":4580:4608  Withdraw(msg.sender, amount) */\n      mload(0x40)\n      tag_221\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/4_Game.sol\":4302:4616  function withdrawAll() public onlyRole(DEFAULT_ADMIN_ROLE) returns (uint amount) {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3107:3111  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3130:3136  _roles */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3137:3141  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3130:3150  _roles[role].members */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3151:3158  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3123:3159  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_Game.sol\":2123:2215  function listGameIds() public view returns (uint[] memory) {... */\n    tag_90:\n        /* \"contracts/4_Game.sol\":2167:2180  uint[] memory */\n      0x60\n        /* \"contracts/4_Game.sol\":2200:2207  gameIds */\n      0x02\n        /* \"contracts/4_Game.sol\":2193:2207  return gameIds */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_224\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_225:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_225\n      jumpi\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/4_Game.sol\":2123:2215  function listGameIds() public view returns (uint[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2198:2202  0x00 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/4_Game.sol\":4110:4294  function myBetting(uint gameId) public view returns (uint) {... */\n    tag_98:\n        /* \"contracts/4_Game.sol\":4163:4167  uint */\n      0x00\n        /* \"contracts/4_Game.sol\":4188:4193  games */\n      0x01\n        /* \"contracts/4_Game.sol\":4188:4201  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":4194:4200  gameId */\n      dup4\n        /* \"contracts/4_Game.sol\":4188:4201  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":4188:4213  games[gameId].initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_Game.sol\":4180:4234  require(games[gameId].initialized, \"Game Initialized\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_123\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"contracts/4_Game.sol\":4252:4257  games */\n      0x01\n        /* \"contracts/4_Game.sol\":4252:4265  games[gameId] */\n      0x00\n        /* \"contracts/4_Game.sol\":4258:4264  gameId */\n      dup4\n        /* \"contracts/4_Game.sol\":4252:4265  games[gameId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":4252:4274  games[gameId].bettings */\n      0x01\n      add\n        /* \"contracts/4_Game.sol\":4252:4286  games[gameId].bettings[msg.sender] */\n      0x00\n        /* \"contracts/4_Game.sol\":4275:4285  msg.sender */\n      caller\n        /* \"contracts/4_Game.sol\":4252:4286  games[gameId].bettings[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/4_Game.sol\":4245:4286  return games[gameId].bettings[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/4_Game.sol\":4110:4294  function myBetting(uint gameId) public view returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_102:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5438:5456  getRoleAdmin(role) */\n      tag_229\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5451:5455  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5438:5450  getRoleAdmin */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5438:5456  getRoleAdmin(role) */\n      jump\t// in\n    tag_229:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_231\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_129\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_231:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5468:5494  _revokeRole(role, account) */\n      tag_233\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5480:5484  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5486:5493  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5468:5479  _revokeRole */\n      tag_181\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5468:5494  _revokeRole(role, account) */\n      jump\t// in\n    tag_233:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/4_Game.sol\":1479:1500  uint[] public gameIds */\n    tag_105:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/4_Game.sol\":1860:2115  function startGame(uint newId) public returns (bool) {... */\n    tag_109:\n        /* \"contracts/4_Game.sol\":1907:1911  bool */\n      0x00\n        /* \"contracts/4_Game.sol\":1960:1965  false */\n      dup1\n        /* \"contracts/4_Game.sol\":1932:1965  games[newId].initialized == false */\n      iszero\n      iszero\n        /* \"contracts/4_Game.sol\":1932:1937  games */\n      0x01\n        /* \"contracts/4_Game.sol\":1932:1944  games[newId] */\n      0x00\n        /* \"contracts/4_Game.sol\":1938:1943  newId */\n      dup5\n        /* \"contracts/4_Game.sol\":1932:1944  games[newId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":1932:1956  games[newId].initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/4_Game.sol\":1932:1965  games[newId].initialized == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/4_Game.sol\":1924:1981  require(games[newId].initialized == false, \"Game exists\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"contracts/4_Game.sol\":2019:2023  true */\n      0x01\n        /* \"contracts/4_Game.sol\":1992:1997  games */\n      dup1\n        /* \"contracts/4_Game.sol\":1992:2004  games[newId] */\n      0x00\n        /* \"contracts/4_Game.sol\":1998:2003  newId */\n      dup5\n        /* \"contracts/4_Game.sol\":1992:2004  games[newId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/4_Game.sol\":1992:2016  games[newId].initialized */\n      0x00\n      add\n      0x00\n        /* \"contracts/4_Game.sol\":1992:2023  games[newId].initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/4_Game.sol\":2034:2041  gameIds */\n      0x02\n        /* \"contracts/4_Game.sol\":2047:2052  newId */\n      dup3\n        /* \"contracts/4_Game.sol\":2034:2053  gameIds.push(newId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/4_Game.sol\":2069:2085  GameStart(newId) */\n      0xb5e8a4470f7bcac7f2c0f3e23471bd7016a9f6f049884cd27dfa8960f361287b\n        /* \"contracts/4_Game.sol\":2079:2084  newId */\n      dup3\n        /* \"contracts/4_Game.sol\":2069:2085  GameStart(newId) */\n      mload(0x40)\n      tag_241\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/4_Game.sol\":2103:2107  true */\n      0x01\n        /* \"contracts/4_Game.sol\":2096:2107  return true */\n      swap1\n      pop\n        /* \"contracts/4_Game.sol\":1860:2115  function startGame(uint newId) public returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/4_Game.sol\":1694:1852  function setErc20(address newContract) public onlyRole(DEFAULT_ADMIN_ROLE) returns (bool) {... */\n    tag_114:\n        /* \"contracts/4_Game.sol\":1778:1782  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2198:2202  0x00 */\n      dup1\n        /* \"contracts/4_Game.sol\":1749:1767  DEFAULT_ADMIN_ROLE */\n      0x00\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_243\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_129\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_243:\n        /* \"contracts/4_Game.sol\":1811:1822  newContract */\n      dup3\n        /* \"contracts/4_Game.sol\":1795:1808  tokenContract */\n      0x03\n      0x00\n        /* \"contracts/4_Game.sol\":1795:1822  tokenContract = newContract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/4_Game.sol\":1840:1844  true */\n      0x01\n        /* \"contracts/4_Game.sol\":1833:1844  return true */\n      swap2\n      pop\n        /* \"contracts/4_Game.sol\":1694:1852  function setErc20(address newContract) public onlyRole(DEFAULT_ADMIN_ROLE) returns (bool) {... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_119:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3460:3563  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_129:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3526:3556  _checkRole(role, _msgSender()) */\n      tag_247\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3537:3541  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3543:3555  _msgSender() */\n      tag_248\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3543:3553  _msgSender */\n      tag_176\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3543:3555  _msgSender() */\n      jump\t// in\n    tag_248:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3526:3536  _checkRole */\n      tag_249\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3526:3556  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_247:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3460:3563  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_170:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n      tag_251\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7678:7682  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7684:7691  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7670:7677  hasRole */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n      jump\t// in\n    tag_251:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n      tag_252\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7740:7744  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7708:7714  _roles */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7715:7719  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7708:7728  _roles[role].members */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7729:7736  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7708:7744  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n      tag_253\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7790:7800  _msgSender */\n      tag_176\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n      jump\t// in\n    tag_253:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7781:7788  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7775:7779  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n    tag_252:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_176:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7991:8225  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_181:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8074:8096  hasRole(role, account) */\n      tag_256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8082:8086  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8088:8095  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8074:8081  hasRole */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8074:8096  hasRole(role, account) */\n      jump\t// in\n    tag_256:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8070:8219  if (hasRole(role, account)) {... */\n      iszero\n      tag_257\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8144:8149  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8112:8118  _roles */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8112:8124  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8119:8123  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8112:8124  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8112:8132  _roles[role].members */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8112:8141  _roles[role].members[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8133:8140  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8112:8141  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8112:8149  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8195:8207  _msgSender() */\n      tag_258\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8195:8205  _msgSender */\n      tag_176\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8195:8207  _msgSender() */\n      jump\t// in\n    tag_258:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8186:8193  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8180:8184  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":8070:8219  if (hasRole(role, account)) {... */\n    tag_257:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":7991:8225  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3844:4323  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_249:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3932:3954  hasRole(role, account) */\n      tag_260\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3940:3944  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3946:3953  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3932:3939  hasRole */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3932:3954  hasRole(role, account) */\n      jump\t// in\n    tag_260:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3927:4317  if (!hasRole(role, account)) {... */\n      tag_261\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4115:4143  Strings.toHexString(account) */\n      tag_262\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4135:4142  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4115:4134  Strings.toHexString */\n      tag_263\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4115:4143  Strings.toHexString(account) */\n      jump\t// in\n    tag_262:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4214:4252  Strings.toHexString(uint256(role), 32) */\n      tag_264\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4242:4246  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4234:4247  uint256(role) */\n      0x00\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4249:4251  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4214:4233  Strings.toHexString */\n      tag_265\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4214:4252  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_264:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":4022:4274  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_266\n      swap3\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3970:4306  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3927:4317  if (!hasRole(role, account)) {... */\n    tag_261:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":3844:4323  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_263:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2465:2478  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_271\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2525:2529  addr */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2509:2531  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":343:345  20 */\n      0x14\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2497:2508  toHexString */\n      tag_265\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_271:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2490:2549  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_265:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1893:1906  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1918:1937  bytes memory buffer */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1963:1964  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1954:1960  length */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1950:1951  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1950:1960  2 * length */\n      tag_273\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_273:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1950:1964  2 * length + 2 */\n      tag_274\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_274:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1940:1965  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_275\n      jumpi\n      tag_276\n      tag_277\n      jump\t// in\n    tag_276:\n    tag_275:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_278\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_278:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1918:1965  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1975:1981  buffer */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1982:1983  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1975:1984  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_279\n      jumpi\n      tag_280\n      tag_281\n      jump\t// in\n    tag_280:\n    tag_279:\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2000:2006  buffer */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2007:2008  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2000:2009  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_282\n      jumpi\n      tag_283\n      tag_281\n      jump\t// in\n    tag_283:\n    tag_282:\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2030:2039  uint256 i */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2055:2056  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2046:2052  length */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2042:2043  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2042:2052  2 * length */\n      tag_287\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_287:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2042:2056  2 * length + 1 */\n      tag_288\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_288:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2030:2056  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_284:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2062:2063  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2058:2059  i */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2058:2063  i > 1 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2096:2104  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2113:2116  0xf */\n      0x0f\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2105:2110  value */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2105:2116  value & 0xf */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2096:2117  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_289\n      jumpi\n      tag_290\n      tag_281\n      jump\t// in\n    tag_290:\n    tag_289:\n      byte\n      0xf8\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2084:2090  buffer */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2091:2092  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2084:2093  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_291\n      jumpi\n      tag_292\n      tag_281\n      jump\t// in\n    tag_292:\n    tag_291:\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2084:2117  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2141:2142  4 */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2131:2142  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2065:2068  --i */\n      dup1\n      tag_293\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_284)\n    tag_285:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2179:2180  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2170:2175  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2170:2180  value == 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2241:2247  buffer */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":2227:2248  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_299:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_301:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_302:\n        /* \"#utility.yul\":561:584   */\n      tag_379\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_301\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_380:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_303:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_382\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_302\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_29:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_385\n      tag_299\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":833:952   */\n    tag_384:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_386\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_303\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_304:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_305:\n        /* \"#utility.yul\":1268:1289   */\n      tag_389\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_304\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_32:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_391\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_305\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_306:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_307:\n        /* \"#utility.yul\":1674:1698   */\n      tag_394\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_306\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_395:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_308:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_397\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_307\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_35:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_400\n      tag_299\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":1950:2069   */\n    tag_399:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_401\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_308\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_309:\n        /* \"#utility.yul\":2296:2320   */\n      tag_403\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_306\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2459   */\n    tag_310:\n        /* \"#utility.yul\":2370:2377   */\n      0x00\n        /* \"#utility.yul\":2410:2452   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2403:2408   */\n      dup3\n        /* \"#utility.yul\":2399:2453   */\n      and\n        /* \"#utility.yul\":2388:2453   */\n      swap1\n      pop\n        /* \"#utility.yul\":2333:2459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2465:2561   */\n    tag_311:\n        /* \"#utility.yul\":2502:2509   */\n      0x00\n        /* \"#utility.yul\":2531:2555   */\n      tag_406\n        /* \"#utility.yul\":2549:2554   */\n      dup3\n        /* \"#utility.yul\":2531:2555   */\n      tag_310\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":2520:2555   */\n      swap1\n      pop\n        /* \"#utility.yul\":2465:2561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2685   */\n    tag_312:\n        /* \"#utility.yul\":2654:2678   */\n      tag_408\n        /* \"#utility.yul\":2672:2677   */\n      dup2\n        /* \"#utility.yul\":2654:2678   */\n      tag_311\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":2649:2652   */\n      dup3\n        /* \"#utility.yul\":2642:2679   */\n      mstore\n        /* \"#utility.yul\":2567:2685   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2691:3121   */\n    tag_38:\n        /* \"#utility.yul\":2834:2838   */\n      0x00\n        /* \"#utility.yul\":2872:2874   */\n      0x60\n        /* \"#utility.yul\":2861:2870   */\n      dup3\n        /* \"#utility.yul\":2857:2875   */\n      add\n        /* \"#utility.yul\":2849:2875   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2950   */\n      tag_410\n        /* \"#utility.yul\":2947:2948   */\n      0x00\n        /* \"#utility.yul\":2936:2945   */\n      dup4\n        /* \"#utility.yul\":2932:2949   */\n      add\n        /* \"#utility.yul\":2923:2929   */\n      dup7\n        /* \"#utility.yul\":2885:2950   */\n      tag_305\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2960:3032   */\n      tag_411\n        /* \"#utility.yul\":3028:3030   */\n      0x20\n        /* \"#utility.yul\":3017:3026   */\n      dup4\n        /* \"#utility.yul\":3013:3031   */\n      add\n        /* \"#utility.yul\":3004:3010   */\n      dup6\n        /* \"#utility.yul\":2960:3032   */\n      tag_309\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":3042:3114   */\n      tag_412\n        /* \"#utility.yul\":3110:3112   */\n      0x40\n        /* \"#utility.yul\":3099:3108   */\n      dup4\n        /* \"#utility.yul\":3095:3113   */\n      add\n        /* \"#utility.yul\":3086:3092   */\n      dup5\n        /* \"#utility.yul\":3042:3114   */\n      tag_312\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":2691:3121   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3127:3241   */\n    tag_313:\n        /* \"#utility.yul\":3194:3200   */\n      0x00\n        /* \"#utility.yul\":3228:3233   */\n      dup2\n        /* \"#utility.yul\":3222:3234   */\n      mload\n        /* \"#utility.yul\":3212:3234   */\n      swap1\n      pop\n        /* \"#utility.yul\":3127:3241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3247:3431   */\n    tag_314:\n        /* \"#utility.yul\":3346:3357   */\n      0x00\n        /* \"#utility.yul\":3380:3386   */\n      dup3\n        /* \"#utility.yul\":3375:3378   */\n      dup3\n        /* \"#utility.yul\":3368:3387   */\n      mstore\n        /* \"#utility.yul\":3420:3424   */\n      0x20\n        /* \"#utility.yul\":3415:3418   */\n      dup3\n        /* \"#utility.yul\":3411:3425   */\n      add\n        /* \"#utility.yul\":3396:3425   */\n      swap1\n      pop\n        /* \"#utility.yul\":3247:3431   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3437:3569   */\n    tag_315:\n        /* \"#utility.yul\":3504:3508   */\n      0x00\n        /* \"#utility.yul\":3527:3530   */\n      dup2\n        /* \"#utility.yul\":3519:3530   */\n      swap1\n      pop\n        /* \"#utility.yul\":3557:3561   */\n      0x20\n        /* \"#utility.yul\":3552:3555   */\n      dup3\n        /* \"#utility.yul\":3548:3562   */\n      add\n        /* \"#utility.yul\":3540:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3437:3569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3575:3683   */\n    tag_316:\n        /* \"#utility.yul\":3652:3676   */\n      tag_417\n        /* \"#utility.yul\":3670:3675   */\n      dup2\n        /* \"#utility.yul\":3652:3676   */\n      tag_311\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":3647:3650   */\n      dup3\n        /* \"#utility.yul\":3640:3677   */\n      mstore\n        /* \"#utility.yul\":3575:3683   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3689:3868   */\n    tag_317:\n        /* \"#utility.yul\":3758:3768   */\n      0x00\n        /* \"#utility.yul\":3779:3825   */\n      tag_419\n        /* \"#utility.yul\":3821:3824   */\n      dup4\n        /* \"#utility.yul\":3813:3819   */\n      dup4\n        /* \"#utility.yul\":3779:3825   */\n      tag_316\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":3857:3861   */\n      0x20\n        /* \"#utility.yul\":3852:3855   */\n      dup4\n        /* \"#utility.yul\":3848:3862   */\n      add\n        /* \"#utility.yul\":3834:3862   */\n      swap1\n      pop\n        /* \"#utility.yul\":3689:3868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3874:3987   */\n    tag_318:\n        /* \"#utility.yul\":3944:3948   */\n      0x00\n        /* \"#utility.yul\":3976:3980   */\n      0x20\n        /* \"#utility.yul\":3971:3974   */\n      dup3\n        /* \"#utility.yul\":3967:3981   */\n      add\n        /* \"#utility.yul\":3959:3981   */\n      swap1\n      pop\n        /* \"#utility.yul\":3874:3987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4023:4755   */\n    tag_319:\n        /* \"#utility.yul\":4142:4145   */\n      0x00\n        /* \"#utility.yul\":4171:4225   */\n      tag_422\n        /* \"#utility.yul\":4219:4224   */\n      dup3\n        /* \"#utility.yul\":4171:4225   */\n      tag_313\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":4241:4327   */\n      tag_423\n        /* \"#utility.yul\":4320:4326   */\n      dup2\n        /* \"#utility.yul\":4315:4318   */\n      dup6\n        /* \"#utility.yul\":4241:4327   */\n      tag_314\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":4234:4327   */\n      swap4\n      pop\n        /* \"#utility.yul\":4351:4407   */\n      tag_424\n        /* \"#utility.yul\":4401:4406   */\n      dup4\n        /* \"#utility.yul\":4351:4407   */\n      tag_315\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":4430:4437   */\n      dup1\n        /* \"#utility.yul\":4461:4462   */\n      0x00\n        /* \"#utility.yul\":4446:4730   */\n    tag_425:\n        /* \"#utility.yul\":4471:4477   */\n      dup4\n        /* \"#utility.yul\":4468:4469   */\n      dup2\n        /* \"#utility.yul\":4465:4478   */\n      lt\n        /* \"#utility.yul\":4446:4730   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":4547:4553   */\n      dup2\n        /* \"#utility.yul\":4541:4554   */\n      mload\n        /* \"#utility.yul\":4574:4637   */\n      tag_428\n        /* \"#utility.yul\":4633:4636   */\n      dup9\n        /* \"#utility.yul\":4618:4631   */\n      dup3\n        /* \"#utility.yul\":4574:4637   */\n      tag_317\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":4567:4637   */\n      swap8\n      pop\n        /* \"#utility.yul\":4660:4720   */\n      tag_429\n        /* \"#utility.yul\":4713:4719   */\n      dup4\n        /* \"#utility.yul\":4660:4720   */\n      tag_318\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":4650:4720   */\n      swap3\n      pop\n        /* \"#utility.yul\":4506:4730   */\n      pop\n        /* \"#utility.yul\":4493:4494   */\n      0x01\n        /* \"#utility.yul\":4490:4491   */\n      dup2\n        /* \"#utility.yul\":4486:4495   */\n      add\n        /* \"#utility.yul\":4481:4495   */\n      swap1\n      pop\n        /* \"#utility.yul\":4446:4730   */\n      jump(tag_425)\n    tag_427:\n        /* \"#utility.yul\":4450:4464   */\n      pop\n        /* \"#utility.yul\":4746:4749   */\n      dup6\n        /* \"#utility.yul\":4739:4749   */\n      swap4\n      pop\n        /* \"#utility.yul\":4147:4755   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4023:4755   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4761:5134   */\n    tag_43:\n        /* \"#utility.yul\":4904:4908   */\n      0x00\n        /* \"#utility.yul\":4942:4944   */\n      0x20\n        /* \"#utility.yul\":4931:4940   */\n      dup3\n        /* \"#utility.yul\":4927:4945   */\n      add\n        /* \"#utility.yul\":4919:4945   */\n      swap1\n      pop\n        /* \"#utility.yul\":4991:5000   */\n      dup2\n        /* \"#utility.yul\":4985:4989   */\n      dup2\n        /* \"#utility.yul\":4981:5001   */\n      sub\n        /* \"#utility.yul\":4977:4978   */\n      0x00\n        /* \"#utility.yul\":4966:4975   */\n      dup4\n        /* \"#utility.yul\":4962:4979   */\n      add\n        /* \"#utility.yul\":4955:5002   */\n      mstore\n        /* \"#utility.yul\":5019:5127   */\n      tag_431\n        /* \"#utility.yul\":5122:5126   */\n      dup2\n        /* \"#utility.yul\":5113:5119   */\n      dup5\n        /* \"#utility.yul\":5019:5127   */\n      tag_319\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":5011:5127   */\n      swap1\n      pop\n        /* \"#utility.yul\":4761:5134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5140:5217   */\n    tag_320:\n        /* \"#utility.yul\":5177:5184   */\n      0x00\n        /* \"#utility.yul\":5206:5211   */\n      dup2\n        /* \"#utility.yul\":5195:5211   */\n      swap1\n      pop\n        /* \"#utility.yul\":5140:5217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5223:5345   */\n    tag_321:\n        /* \"#utility.yul\":5296:5320   */\n      tag_434\n        /* \"#utility.yul\":5314:5319   */\n      dup2\n        /* \"#utility.yul\":5296:5320   */\n      tag_320\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":5289:5294   */\n      dup2\n        /* \"#utility.yul\":5286:5321   */\n      eq\n        /* \"#utility.yul\":5276:5339   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":5335:5336   */\n      0x00\n        /* \"#utility.yul\":5332:5333   */\n      dup1\n        /* \"#utility.yul\":5325:5337   */\n      revert\n        /* \"#utility.yul\":5276:5339   */\n    tag_435:\n        /* \"#utility.yul\":5223:5345   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5351:5490   */\n    tag_322:\n        /* \"#utility.yul\":5397:5402   */\n      0x00\n        /* \"#utility.yul\":5435:5441   */\n      dup2\n        /* \"#utility.yul\":5422:5442   */\n      calldataload\n        /* \"#utility.yul\":5413:5442   */\n      swap1\n      pop\n        /* \"#utility.yul\":5451:5484   */\n      tag_437\n        /* \"#utility.yul\":5478:5483   */\n      dup2\n        /* \"#utility.yul\":5451:5484   */\n      tag_321\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":5351:5490   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5496:5825   */\n    tag_46:\n        /* \"#utility.yul\":5555:5561   */\n      0x00\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"#utility.yul\":5592:5601   */\n      dup3\n        /* \"#utility.yul\":5583:5590   */\n      dup5\n        /* \"#utility.yul\":5579:5602   */\n      sub\n        /* \"#utility.yul\":5575:5607   */\n      slt\n        /* \"#utility.yul\":5572:5691   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":5610:5689   */\n      tag_440\n      tag_299\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":5572:5691   */\n    tag_439:\n        /* \"#utility.yul\":5730:5731   */\n      0x00\n        /* \"#utility.yul\":5755:5808   */\n      tag_441\n        /* \"#utility.yul\":5800:5807   */\n      dup5\n        /* \"#utility.yul\":5791:5797   */\n      dup3\n        /* \"#utility.yul\":5780:5789   */\n      dup6\n        /* \"#utility.yul\":5776:5798   */\n      add\n        /* \"#utility.yul\":5755:5808   */\n      tag_322\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":5745:5808   */\n      swap2\n      pop\n        /* \"#utility.yul\":5701:5818   */\n      pop\n        /* \"#utility.yul\":5496:5825   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5831:5949   */\n    tag_323:\n        /* \"#utility.yul\":5918:5942   */\n      tag_443\n        /* \"#utility.yul\":5936:5941   */\n      dup2\n        /* \"#utility.yul\":5918:5942   */\n      tag_320\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":5913:5916   */\n      dup3\n        /* \"#utility.yul\":5906:5943   */\n      mstore\n        /* \"#utility.yul\":5831:5949   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5955:6177   */\n    tag_49:\n        /* \"#utility.yul\":6048:6052   */\n      0x00\n        /* \"#utility.yul\":6086:6088   */\n      0x20\n        /* \"#utility.yul\":6075:6084   */\n      dup3\n        /* \"#utility.yul\":6071:6089   */\n      add\n        /* \"#utility.yul\":6063:6089   */\n      swap1\n      pop\n        /* \"#utility.yul\":6099:6170   */\n      tag_445\n        /* \"#utility.yul\":6167:6168   */\n      0x00\n        /* \"#utility.yul\":6156:6165   */\n      dup4\n        /* \"#utility.yul\":6152:6169   */\n      add\n        /* \"#utility.yul\":6143:6149   */\n      dup5\n        /* \"#utility.yul\":6099:6170   */\n      tag_323\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5955:6177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6183:6305   */\n    tag_324:\n        /* \"#utility.yul\":6256:6280   */\n      tag_447\n        /* \"#utility.yul\":6274:6279   */\n      dup2\n        /* \"#utility.yul\":6256:6280   */\n      tag_311\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":6249:6254   */\n      dup2\n        /* \"#utility.yul\":6246:6281   */\n      eq\n        /* \"#utility.yul\":6236:6299   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":6295:6296   */\n      0x00\n        /* \"#utility.yul\":6292:6293   */\n      dup1\n        /* \"#utility.yul\":6285:6297   */\n      revert\n        /* \"#utility.yul\":6236:6299   */\n    tag_448:\n        /* \"#utility.yul\":6183:6305   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6311:6450   */\n    tag_325:\n        /* \"#utility.yul\":6357:6362   */\n      0x00\n        /* \"#utility.yul\":6395:6401   */\n      dup2\n        /* \"#utility.yul\":6382:6402   */\n      calldataload\n        /* \"#utility.yul\":6373:6402   */\n      swap1\n      pop\n        /* \"#utility.yul\":6411:6444   */\n      tag_450\n        /* \"#utility.yul\":6438:6443   */\n      dup2\n        /* \"#utility.yul\":6411:6444   */\n      tag_324\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":6311:6450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6456:6930   */\n    tag_52:\n        /* \"#utility.yul\":6524:6530   */\n      0x00\n        /* \"#utility.yul\":6532:6538   */\n      dup1\n        /* \"#utility.yul\":6581:6583   */\n      0x40\n        /* \"#utility.yul\":6569:6578   */\n      dup4\n        /* \"#utility.yul\":6560:6567   */\n      dup6\n        /* \"#utility.yul\":6556:6579   */\n      sub\n        /* \"#utility.yul\":6552:6584   */\n      slt\n        /* \"#utility.yul\":6549:6668   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":6587:6666   */\n      tag_453\n      tag_299\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":6549:6668   */\n    tag_452:\n        /* \"#utility.yul\":6707:6708   */\n      0x00\n        /* \"#utility.yul\":6732:6785   */\n      tag_454\n        /* \"#utility.yul\":6777:6784   */\n      dup6\n        /* \"#utility.yul\":6768:6774   */\n      dup3\n        /* \"#utility.yul\":6757:6766   */\n      dup7\n        /* \"#utility.yul\":6753:6775   */\n      add\n        /* \"#utility.yul\":6732:6785   */\n      tag_308\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":6722:6785   */\n      swap3\n      pop\n        /* \"#utility.yul\":6678:6795   */\n      pop\n        /* \"#utility.yul\":6834:6836   */\n      0x20\n        /* \"#utility.yul\":6860:6913   */\n      tag_455\n        /* \"#utility.yul\":6905:6912   */\n      dup6\n        /* \"#utility.yul\":6896:6902   */\n      dup3\n        /* \"#utility.yul\":6885:6894   */\n      dup7\n        /* \"#utility.yul\":6881:6903   */\n      add\n        /* \"#utility.yul\":6860:6913   */\n      tag_325\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":6850:6913   */\n      swap2\n      pop\n        /* \"#utility.yul\":6805:6923   */\n      pop\n        /* \"#utility.yul\":6456:6930   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6936:7158   */\n    tag_55:\n        /* \"#utility.yul\":7029:7033   */\n      0x00\n        /* \"#utility.yul\":7067:7069   */\n      0x20\n        /* \"#utility.yul\":7056:7065   */\n      dup3\n        /* \"#utility.yul\":7052:7070   */\n      add\n        /* \"#utility.yul\":7044:7070   */\n      swap1\n      pop\n        /* \"#utility.yul\":7080:7151   */\n      tag_457\n        /* \"#utility.yul\":7148:7149   */\n      0x00\n        /* \"#utility.yul\":7137:7146   */\n      dup4\n        /* \"#utility.yul\":7133:7150   */\n      add\n        /* \"#utility.yul\":7124:7130   */\n      dup5\n        /* \"#utility.yul\":7080:7151   */\n      tag_309\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6936:7158   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7164:7638   */\n    tag_58:\n        /* \"#utility.yul\":7232:7238   */\n      0x00\n        /* \"#utility.yul\":7240:7246   */\n      dup1\n        /* \"#utility.yul\":7289:7291   */\n      0x40\n        /* \"#utility.yul\":7277:7286   */\n      dup4\n        /* \"#utility.yul\":7268:7275   */\n      dup6\n        /* \"#utility.yul\":7264:7287   */\n      sub\n        /* \"#utility.yul\":7260:7292   */\n      slt\n        /* \"#utility.yul\":7257:7376   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":7295:7374   */\n      tag_460\n      tag_299\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":7257:7376   */\n    tag_459:\n        /* \"#utility.yul\":7415:7416   */\n      0x00\n        /* \"#utility.yul\":7440:7493   */\n      tag_461\n        /* \"#utility.yul\":7485:7492   */\n      dup6\n        /* \"#utility.yul\":7476:7482   */\n      dup3\n        /* \"#utility.yul\":7465:7474   */\n      dup7\n        /* \"#utility.yul\":7461:7483   */\n      add\n        /* \"#utility.yul\":7440:7493   */\n      tag_322\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":7430:7493   */\n      swap3\n      pop\n        /* \"#utility.yul\":7386:7503   */\n      pop\n        /* \"#utility.yul\":7542:7544   */\n      0x20\n        /* \"#utility.yul\":7568:7621   */\n      tag_462\n        /* \"#utility.yul\":7613:7620   */\n      dup6\n        /* \"#utility.yul\":7604:7610   */\n      dup3\n        /* \"#utility.yul\":7593:7602   */\n      dup7\n        /* \"#utility.yul\":7589:7611   */\n      add\n        /* \"#utility.yul\":7568:7621   */\n      tag_325\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":7558:7621   */\n      swap2\n      pop\n        /* \"#utility.yul\":7513:7631   */\n      pop\n        /* \"#utility.yul\":7164:7638   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7644:7866   */\n    tag_73:\n        /* \"#utility.yul\":7737:7741   */\n      0x00\n        /* \"#utility.yul\":7775:7777   */\n      0x20\n        /* \"#utility.yul\":7764:7773   */\n      dup3\n        /* \"#utility.yul\":7760:7778   */\n      add\n        /* \"#utility.yul\":7752:7778   */\n      swap1\n      pop\n        /* \"#utility.yul\":7788:7859   */\n      tag_464\n        /* \"#utility.yul\":7856:7857   */\n      0x00\n        /* \"#utility.yul\":7845:7854   */\n      dup4\n        /* \"#utility.yul\":7841:7858   */\n      add\n        /* \"#utility.yul\":7832:7838   */\n      dup5\n        /* \"#utility.yul\":7788:7859   */\n      tag_312\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":7644:7866   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7872:8346   */\n    tag_76:\n        /* \"#utility.yul\":7940:7946   */\n      0x00\n        /* \"#utility.yul\":7948:7954   */\n      dup1\n        /* \"#utility.yul\":7997:7999   */\n      0x40\n        /* \"#utility.yul\":7985:7994   */\n      dup4\n        /* \"#utility.yul\":7976:7983   */\n      dup6\n        /* \"#utility.yul\":7972:7995   */\n      sub\n        /* \"#utility.yul\":7968:8000   */\n      slt\n        /* \"#utility.yul\":7965:8084   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":8003:8082   */\n      tag_467\n      tag_299\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":7965:8084   */\n    tag_466:\n        /* \"#utility.yul\":8123:8124   */\n      0x00\n        /* \"#utility.yul\":8148:8201   */\n      tag_468\n        /* \"#utility.yul\":8193:8200   */\n      dup6\n        /* \"#utility.yul\":8184:8190   */\n      dup3\n        /* \"#utility.yul\":8173:8182   */\n      dup7\n        /* \"#utility.yul\":8169:8191   */\n      add\n        /* \"#utility.yul\":8148:8201   */\n      tag_308\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":8138:8201   */\n      swap3\n      pop\n        /* \"#utility.yul\":8094:8211   */\n      pop\n        /* \"#utility.yul\":8250:8252   */\n      0x20\n        /* \"#utility.yul\":8276:8329   */\n      tag_469\n        /* \"#utility.yul\":8321:8328   */\n      dup6\n        /* \"#utility.yul\":8312:8318   */\n      dup3\n        /* \"#utility.yul\":8301:8310   */\n      dup7\n        /* \"#utility.yul\":8297:8319   */\n      add\n        /* \"#utility.yul\":8276:8329   */\n      tag_308\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":8266:8329   */\n      swap2\n      pop\n        /* \"#utility.yul\":8221:8339   */\n      pop\n        /* \"#utility.yul\":7872:8346   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8352:8466   */\n    tag_326:\n        /* \"#utility.yul\":8419:8425   */\n      0x00\n        /* \"#utility.yul\":8453:8458   */\n      dup2\n        /* \"#utility.yul\":8447:8459   */\n      mload\n        /* \"#utility.yul\":8437:8459   */\n      swap1\n      pop\n        /* \"#utility.yul\":8352:8466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8472:8656   */\n    tag_327:\n        /* \"#utility.yul\":8571:8582   */\n      0x00\n        /* \"#utility.yul\":8605:8611   */\n      dup3\n        /* \"#utility.yul\":8600:8603   */\n      dup3\n        /* \"#utility.yul\":8593:8612   */\n      mstore\n        /* \"#utility.yul\":8645:8649   */\n      0x20\n        /* \"#utility.yul\":8640:8643   */\n      dup3\n        /* \"#utility.yul\":8636:8650   */\n      add\n        /* \"#utility.yul\":8621:8650   */\n      swap1\n      pop\n        /* \"#utility.yul\":8472:8656   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8662:8794   */\n    tag_328:\n        /* \"#utility.yul\":8729:8733   */\n      0x00\n        /* \"#utility.yul\":8752:8755   */\n      dup2\n        /* \"#utility.yul\":8744:8755   */\n      swap1\n      pop\n        /* \"#utility.yul\":8782:8786   */\n      0x20\n        /* \"#utility.yul\":8777:8780   */\n      dup3\n        /* \"#utility.yul\":8773:8787   */\n      add\n        /* \"#utility.yul\":8765:8787   */\n      swap1\n      pop\n        /* \"#utility.yul\":8662:8794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8800:8908   */\n    tag_329:\n        /* \"#utility.yul\":8877:8901   */\n      tag_474\n        /* \"#utility.yul\":8895:8900   */\n      dup2\n        /* \"#utility.yul\":8877:8901   */\n      tag_306\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":8872:8875   */\n      dup3\n        /* \"#utility.yul\":8865:8902   */\n      mstore\n        /* \"#utility.yul\":8800:8908   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8914:9093   */\n    tag_330:\n        /* \"#utility.yul\":8983:8993   */\n      0x00\n        /* \"#utility.yul\":9004:9050   */\n      tag_476\n        /* \"#utility.yul\":9046:9049   */\n      dup4\n        /* \"#utility.yul\":9038:9044   */\n      dup4\n        /* \"#utility.yul\":9004:9050   */\n      tag_329\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":9082:9086   */\n      0x20\n        /* \"#utility.yul\":9077:9080   */\n      dup4\n        /* \"#utility.yul\":9073:9087   */\n      add\n        /* \"#utility.yul\":9059:9087   */\n      swap1\n      pop\n        /* \"#utility.yul\":8914:9093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9099:9212   */\n    tag_331:\n        /* \"#utility.yul\":9169:9173   */\n      0x00\n        /* \"#utility.yul\":9201:9205   */\n      0x20\n        /* \"#utility.yul\":9196:9199   */\n      dup3\n        /* \"#utility.yul\":9192:9206   */\n      add\n        /* \"#utility.yul\":9184:9206   */\n      swap1\n      pop\n        /* \"#utility.yul\":9099:9212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9248:9980   */\n    tag_332:\n        /* \"#utility.yul\":9367:9370   */\n      0x00\n        /* \"#utility.yul\":9396:9450   */\n      tag_479\n        /* \"#utility.yul\":9444:9449   */\n      dup3\n        /* \"#utility.yul\":9396:9450   */\n      tag_326\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":9466:9552   */\n      tag_480\n        /* \"#utility.yul\":9545:9551   */\n      dup2\n        /* \"#utility.yul\":9540:9543   */\n      dup6\n        /* \"#utility.yul\":9466:9552   */\n      tag_327\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":9459:9552   */\n      swap4\n      pop\n        /* \"#utility.yul\":9576:9632   */\n      tag_481\n        /* \"#utility.yul\":9626:9631   */\n      dup4\n        /* \"#utility.yul\":9576:9632   */\n      tag_328\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":9655:9662   */\n      dup1\n        /* \"#utility.yul\":9686:9687   */\n      0x00\n        /* \"#utility.yul\":9671:9955   */\n    tag_482:\n        /* \"#utility.yul\":9696:9702   */\n      dup4\n        /* \"#utility.yul\":9693:9694   */\n      dup2\n        /* \"#utility.yul\":9690:9703   */\n      lt\n        /* \"#utility.yul\":9671:9955   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":9772:9778   */\n      dup2\n        /* \"#utility.yul\":9766:9779   */\n      mload\n        /* \"#utility.yul\":9799:9862   */\n      tag_485\n        /* \"#utility.yul\":9858:9861   */\n      dup9\n        /* \"#utility.yul\":9843:9856   */\n      dup3\n        /* \"#utility.yul\":9799:9862   */\n      tag_330\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":9792:9862   */\n      swap8\n      pop\n        /* \"#utility.yul\":9885:9945   */\n      tag_486\n        /* \"#utility.yul\":9938:9944   */\n      dup4\n        /* \"#utility.yul\":9885:9945   */\n      tag_331\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":9875:9945   */\n      swap3\n      pop\n        /* \"#utility.yul\":9731:9955   */\n      pop\n        /* \"#utility.yul\":9718:9719   */\n      0x01\n        /* \"#utility.yul\":9715:9716   */\n      dup2\n        /* \"#utility.yul\":9711:9720   */\n      add\n        /* \"#utility.yul\":9706:9720   */\n      swap1\n      pop\n        /* \"#utility.yul\":9671:9955   */\n      jump(tag_482)\n    tag_484:\n        /* \"#utility.yul\":9675:9689   */\n      pop\n        /* \"#utility.yul\":9971:9974   */\n      dup6\n        /* \"#utility.yul\":9964:9974   */\n      swap4\n      pop\n        /* \"#utility.yul\":9372:9980   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9248:9980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9986:10359   */\n    tag_92:\n        /* \"#utility.yul\":10129:10133   */\n      0x00\n        /* \"#utility.yul\":10167:10169   */\n      0x20\n        /* \"#utility.yul\":10156:10165   */\n      dup3\n        /* \"#utility.yul\":10152:10170   */\n      add\n        /* \"#utility.yul\":10144:10170   */\n      swap1\n      pop\n        /* \"#utility.yul\":10216:10225   */\n      dup2\n        /* \"#utility.yul\":10210:10214   */\n      dup2\n        /* \"#utility.yul\":10206:10226   */\n      sub\n        /* \"#utility.yul\":10202:10203   */\n      0x00\n        /* \"#utility.yul\":10191:10200   */\n      dup4\n        /* \"#utility.yul\":10187:10204   */\n      add\n        /* \"#utility.yul\":10180:10227   */\n      mstore\n        /* \"#utility.yul\":10244:10352   */\n      tag_488\n        /* \"#utility.yul\":10347:10351   */\n      dup2\n        /* \"#utility.yul\":10338:10344   */\n      dup5\n        /* \"#utility.yul\":10244:10352   */\n      tag_332\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":10236:10352   */\n      swap1\n      pop\n        /* \"#utility.yul\":9986:10359   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10365:10694   */\n    tag_113:\n        /* \"#utility.yul\":10424:10430   */\n      0x00\n        /* \"#utility.yul\":10473:10475   */\n      0x20\n        /* \"#utility.yul\":10461:10470   */\n      dup3\n        /* \"#utility.yul\":10452:10459   */\n      dup5\n        /* \"#utility.yul\":10448:10471   */\n      sub\n        /* \"#utility.yul\":10444:10476   */\n      slt\n        /* \"#utility.yul\":10441:10560   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":10479:10558   */\n      tag_491\n      tag_299\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":10441:10560   */\n    tag_490:\n        /* \"#utility.yul\":10599:10600   */\n      0x00\n        /* \"#utility.yul\":10624:10677   */\n      tag_492\n        /* \"#utility.yul\":10669:10676   */\n      dup5\n        /* \"#utility.yul\":10660:10666   */\n      dup3\n        /* \"#utility.yul\":10649:10658   */\n      dup6\n        /* \"#utility.yul\":10645:10667   */\n      add\n        /* \"#utility.yul\":10624:10677   */\n      tag_325\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":10614:10677   */\n      swap2\n      pop\n        /* \"#utility.yul\":10570:10687   */\n      pop\n        /* \"#utility.yul\":10365:10694   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10700:10869   */\n    tag_333:\n        /* \"#utility.yul\":10784:10795   */\n      0x00\n        /* \"#utility.yul\":10818:10824   */\n      dup3\n        /* \"#utility.yul\":10813:10816   */\n      dup3\n        /* \"#utility.yul\":10806:10825   */\n      mstore\n        /* \"#utility.yul\":10858:10862   */\n      0x20\n        /* \"#utility.yul\":10853:10856   */\n      dup3\n        /* \"#utility.yul\":10849:10863   */\n      add\n        /* \"#utility.yul\":10834:10863   */\n      swap1\n      pop\n        /* \"#utility.yul\":10700:10869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10875:11041   */\n    tag_334:\n        /* \"#utility.yul\":11015:11033   */\n      0x47616d6520496e697469616c697a656400000000000000000000000000000000\n        /* \"#utility.yul\":11011:11012   */\n      0x00\n        /* \"#utility.yul\":11003:11009   */\n      dup3\n        /* \"#utility.yul\":10999:11013   */\n      add\n        /* \"#utility.yul\":10992:11034   */\n      mstore\n        /* \"#utility.yul\":10875:11041   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11047:11413   */\n    tag_335:\n        /* \"#utility.yul\":11189:11192   */\n      0x00\n        /* \"#utility.yul\":11210:11277   */\n      tag_496\n        /* \"#utility.yul\":11274:11276   */\n      0x10\n        /* \"#utility.yul\":11269:11272   */\n      dup4\n        /* \"#utility.yul\":11210:11277   */\n      tag_333\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":11203:11277   */\n      swap2\n      pop\n        /* \"#utility.yul\":11286:11379   */\n      tag_497\n        /* \"#utility.yul\":11375:11378   */\n      dup3\n        /* \"#utility.yul\":11286:11379   */\n      tag_334\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":11404:11406   */\n      0x20\n        /* \"#utility.yul\":11399:11402   */\n      dup3\n        /* \"#utility.yul\":11395:11407   */\n      add\n        /* \"#utility.yul\":11388:11407   */\n      swap1\n      pop\n        /* \"#utility.yul\":11047:11413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11419:11838   */\n    tag_123:\n        /* \"#utility.yul\":11585:11589   */\n      0x00\n        /* \"#utility.yul\":11623:11625   */\n      0x20\n        /* \"#utility.yul\":11612:11621   */\n      dup3\n        /* \"#utility.yul\":11608:11626   */\n      add\n        /* \"#utility.yul\":11600:11626   */\n      swap1\n      pop\n        /* \"#utility.yul\":11672:11681   */\n      dup2\n        /* \"#utility.yul\":11666:11670   */\n      dup2\n        /* \"#utility.yul\":11662:11682   */\n      sub\n        /* \"#utility.yul\":11658:11659   */\n      0x00\n        /* \"#utility.yul\":11647:11656   */\n      dup4\n        /* \"#utility.yul\":11643:11660   */\n      add\n        /* \"#utility.yul\":11636:11683   */\n      mstore\n        /* \"#utility.yul\":11700:11831   */\n      tag_499\n        /* \"#utility.yul\":11826:11830   */\n      dup2\n        /* \"#utility.yul\":11700:11831   */\n      tag_335\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":11692:11831   */\n      swap1\n      pop\n        /* \"#utility.yul\":11419:11838   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11844:12002   */\n    tag_336:\n        /* \"#utility.yul\":11984:11994   */\n      0x46696e6973686564000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11980:11981   */\n      0x00\n        /* \"#utility.yul\":11972:11978   */\n      dup3\n        /* \"#utility.yul\":11968:11982   */\n      add\n        /* \"#utility.yul\":11961:11995   */\n      mstore\n        /* \"#utility.yul\":11844:12002   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12008:12373   */\n    tag_337:\n        /* \"#utility.yul\":12150:12153   */\n      0x00\n        /* \"#utility.yul\":12171:12237   */\n      tag_502\n        /* \"#utility.yul\":12235:12236   */\n      0x08\n        /* \"#utility.yul\":12230:12233   */\n      dup4\n        /* \"#utility.yul\":12171:12237   */\n      tag_333\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":12164:12237   */\n      swap2\n      pop\n        /* \"#utility.yul\":12246:12339   */\n      tag_503\n        /* \"#utility.yul\":12335:12338   */\n      dup3\n        /* \"#utility.yul\":12246:12339   */\n      tag_336\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":12364:12366   */\n      0x20\n        /* \"#utility.yul\":12359:12362   */\n      dup3\n        /* \"#utility.yul\":12355:12367   */\n      add\n        /* \"#utility.yul\":12348:12367   */\n      swap1\n      pop\n        /* \"#utility.yul\":12008:12373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12379:12798   */\n    tag_135:\n        /* \"#utility.yul\":12545:12549   */\n      0x00\n        /* \"#utility.yul\":12583:12585   */\n      0x20\n        /* \"#utility.yul\":12572:12581   */\n      dup3\n        /* \"#utility.yul\":12568:12586   */\n      add\n        /* \"#utility.yul\":12560:12586   */\n      swap1\n      pop\n        /* \"#utility.yul\":12632:12641   */\n      dup2\n        /* \"#utility.yul\":12626:12630   */\n      dup2\n        /* \"#utility.yul\":12622:12642   */\n      sub\n        /* \"#utility.yul\":12618:12619   */\n      0x00\n        /* \"#utility.yul\":12607:12616   */\n      dup4\n        /* \"#utility.yul\":12603:12620   */\n      add\n        /* \"#utility.yul\":12596:12643   */\n      mstore\n        /* \"#utility.yul\":12660:12791   */\n      tag_505\n        /* \"#utility.yul\":12786:12790   */\n      dup2\n        /* \"#utility.yul\":12660:12791   */\n      tag_337\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":12652:12791   */\n      swap1\n      pop\n        /* \"#utility.yul\":12379:12798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12804:12984   */\n    tag_338:\n        /* \"#utility.yul\":12852:12929   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12849:12850   */\n      0x00\n        /* \"#utility.yul\":12842:12930   */\n      mstore\n        /* \"#utility.yul\":12949:12953   */\n      0x11\n        /* \"#utility.yul\":12946:12947   */\n      0x04\n        /* \"#utility.yul\":12939:12954   */\n      mstore\n        /* \"#utility.yul\":12973:12977   */\n      0x24\n        /* \"#utility.yul\":12970:12971   */\n      0x00\n        /* \"#utility.yul\":12963:12978   */\n      revert\n        /* \"#utility.yul\":12990:13184   */\n    tag_137:\n        /* \"#utility.yul\":13030:13034   */\n      0x00\n        /* \"#utility.yul\":13050:13070   */\n      tag_508\n        /* \"#utility.yul\":13068:13069   */\n      dup3\n        /* \"#utility.yul\":13050:13070   */\n      tag_306\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":13045:13070   */\n      swap2\n      pop\n        /* \"#utility.yul\":13084:13104   */\n      tag_509\n        /* \"#utility.yul\":13102:13103   */\n      dup4\n        /* \"#utility.yul\":13084:13104   */\n      tag_306\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":13079:13104   */\n      swap3\n      pop\n        /* \"#utility.yul\":13128:13129   */\n      dup3\n        /* \"#utility.yul\":13125:13126   */\n      dup3\n        /* \"#utility.yul\":13121:13130   */\n      sub\n        /* \"#utility.yul\":13113:13130   */\n      swap1\n      pop\n        /* \"#utility.yul\":13152:13153   */\n      dup2\n        /* \"#utility.yul\":13146:13150   */\n      dup2\n        /* \"#utility.yul\":13143:13154   */\n      gt\n        /* \"#utility.yul\":13140:13177   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":13157:13175   */\n      tag_511\n      tag_338\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":13140:13177   */\n    tag_510:\n        /* \"#utility.yul\":12990:13184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13190:13600   */\n    tag_139:\n        /* \"#utility.yul\":13230:13237   */\n      0x00\n        /* \"#utility.yul\":13253:13273   */\n      tag_513\n        /* \"#utility.yul\":13271:13272   */\n      dup3\n        /* \"#utility.yul\":13253:13273   */\n      tag_306\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":13248:13273   */\n      swap2\n      pop\n        /* \"#utility.yul\":13287:13307   */\n      tag_514\n        /* \"#utility.yul\":13305:13306   */\n      dup4\n        /* \"#utility.yul\":13287:13307   */\n      tag_306\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":13282:13307   */\n      swap3\n      pop\n        /* \"#utility.yul\":13342:13343   */\n      dup3\n        /* \"#utility.yul\":13339:13340   */\n      dup3\n        /* \"#utility.yul\":13335:13344   */\n      mul\n        /* \"#utility.yul\":13364:13394   */\n      tag_515\n        /* \"#utility.yul\":13382:13393   */\n      dup2\n        /* \"#utility.yul\":13364:13394   */\n      tag_306\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":13353:13394   */\n      swap2\n      pop\n        /* \"#utility.yul\":13543:13544   */\n      dup3\n        /* \"#utility.yul\":13534:13541   */\n      dup3\n        /* \"#utility.yul\":13530:13545   */\n      div\n        /* \"#utility.yul\":13527:13528   */\n      dup5\n        /* \"#utility.yul\":13524:13546   */\n      eq\n        /* \"#utility.yul\":13504:13505   */\n      dup4\n        /* \"#utility.yul\":13497:13506   */\n      iszero\n        /* \"#utility.yul\":13477:13560   */\n      or\n        /* \"#utility.yul\":13454:13593   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":13573:13591   */\n      tag_517\n      tag_338\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":13454:13593   */\n    tag_516:\n        /* \"#utility.yul\":13238:13600   */\n      pop\n        /* \"#utility.yul\":13190:13600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13606:13786   */\n    tag_339:\n        /* \"#utility.yul\":13654:13731   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13651:13652   */\n      0x00\n        /* \"#utility.yul\":13644:13732   */\n      mstore\n        /* \"#utility.yul\":13751:13755   */\n      0x12\n        /* \"#utility.yul\":13748:13749   */\n      0x04\n        /* \"#utility.yul\":13741:13756   */\n      mstore\n        /* \"#utility.yul\":13775:13779   */\n      0x24\n        /* \"#utility.yul\":13772:13773   */\n      0x00\n        /* \"#utility.yul\":13765:13780   */\n      revert\n        /* \"#utility.yul\":13792:13977   */\n    tag_141:\n        /* \"#utility.yul\":13832:13833   */\n      0x00\n        /* \"#utility.yul\":13849:13869   */\n      tag_520\n        /* \"#utility.yul\":13867:13868   */\n      dup3\n        /* \"#utility.yul\":13849:13869   */\n      tag_306\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":13844:13869   */\n      swap2\n      pop\n        /* \"#utility.yul\":13883:13903   */\n      tag_521\n        /* \"#utility.yul\":13901:13902   */\n      dup4\n        /* \"#utility.yul\":13883:13903   */\n      tag_306\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":13878:13903   */\n      swap3\n      pop\n        /* \"#utility.yul\":13922:13923   */\n      dup3\n        /* \"#utility.yul\":13912:13947   */\n      tag_522\n      jumpi\n        /* \"#utility.yul\":13927:13945   */\n      tag_523\n      tag_339\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":13912:13947   */\n    tag_522:\n        /* \"#utility.yul\":13969:13970   */\n      dup3\n        /* \"#utility.yul\":13966:13967   */\n      dup3\n        /* \"#utility.yul\":13962:13971   */\n      div\n        /* \"#utility.yul\":13957:13971   */\n      swap1\n      pop\n        /* \"#utility.yul\":13792:13977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13983:14174   */\n    tag_144:\n        /* \"#utility.yul\":14023:14026   */\n      0x00\n        /* \"#utility.yul\":14042:14062   */\n      tag_525\n        /* \"#utility.yul\":14060:14061   */\n      dup3\n        /* \"#utility.yul\":14042:14062   */\n      tag_306\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":14037:14062   */\n      swap2\n      pop\n        /* \"#utility.yul\":14076:14096   */\n      tag_526\n        /* \"#utility.yul\":14094:14095   */\n      dup4\n        /* \"#utility.yul\":14076:14096   */\n      tag_306\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":14071:14096   */\n      swap3\n      pop\n        /* \"#utility.yul\":14119:14120   */\n      dup3\n        /* \"#utility.yul\":14116:14117   */\n      dup3\n        /* \"#utility.yul\":14112:14121   */\n      add\n        /* \"#utility.yul\":14105:14121   */\n      swap1\n      pop\n        /* \"#utility.yul\":14140:14143   */\n      dup1\n        /* \"#utility.yul\":14137:14138   */\n      dup3\n        /* \"#utility.yul\":14134:14144   */\n      gt\n        /* \"#utility.yul\":14131:14167   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":14147:14165   */\n      tag_528\n      tag_338\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":14131:14167   */\n    tag_527:\n        /* \"#utility.yul\":13983:14174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14180:14350   */\n    tag_340:\n        /* \"#utility.yul\":14320:14342   */\n      0x726577617264202b20666565203d20746f74616c000000000000000000000000\n        /* \"#utility.yul\":14316:14317   */\n      0x00\n        /* \"#utility.yul\":14308:14314   */\n      dup3\n        /* \"#utility.yul\":14304:14318   */\n      add\n        /* \"#utility.yul\":14297:14343   */\n      mstore\n        /* \"#utility.yul\":14180:14350   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14356:14722   */\n    tag_341:\n        /* \"#utility.yul\":14498:14501   */\n      0x00\n        /* \"#utility.yul\":14519:14586   */\n      tag_531\n        /* \"#utility.yul\":14583:14585   */\n      0x14\n        /* \"#utility.yul\":14578:14581   */\n      dup4\n        /* \"#utility.yul\":14519:14586   */\n      tag_333\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":14512:14586   */\n      swap2\n      pop\n        /* \"#utility.yul\":14595:14688   */\n      tag_532\n        /* \"#utility.yul\":14684:14687   */\n      dup3\n        /* \"#utility.yul\":14595:14688   */\n      tag_340\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":14713:14715   */\n      0x20\n        /* \"#utility.yul\":14708:14711   */\n      dup3\n        /* \"#utility.yul\":14704:14716   */\n      add\n        /* \"#utility.yul\":14697:14716   */\n      swap1\n      pop\n        /* \"#utility.yul\":14356:14722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14728:15147   */\n    tag_147:\n        /* \"#utility.yul\":14894:14898   */\n      0x00\n        /* \"#utility.yul\":14932:14934   */\n      0x20\n        /* \"#utility.yul\":14921:14930   */\n      dup3\n        /* \"#utility.yul\":14917:14935   */\n      add\n        /* \"#utility.yul\":14909:14935   */\n      swap1\n      pop\n        /* \"#utility.yul\":14981:14990   */\n      dup2\n        /* \"#utility.yul\":14975:14979   */\n      dup2\n        /* \"#utility.yul\":14971:14991   */\n      sub\n        /* \"#utility.yul\":14967:14968   */\n      0x00\n        /* \"#utility.yul\":14956:14965   */\n      dup4\n        /* \"#utility.yul\":14952:14969   */\n      add\n        /* \"#utility.yul\":14945:14992   */\n      mstore\n        /* \"#utility.yul\":15009:15140   */\n      tag_534\n        /* \"#utility.yul\":15135:15139   */\n      dup2\n        /* \"#utility.yul\":15009:15140   */\n      tag_341\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":15001:15140   */\n      swap1\n      pop\n        /* \"#utility.yul\":14728:15147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15153:15315   */\n    tag_342:\n        /* \"#utility.yul\":15293:15307   */\n      0x616c6c20706f7369746976650000000000000000000000000000000000000000\n        /* \"#utility.yul\":15289:15290   */\n      0x00\n        /* \"#utility.yul\":15281:15287   */\n      dup3\n        /* \"#utility.yul\":15277:15291   */\n      add\n        /* \"#utility.yul\":15270:15308   */\n      mstore\n        /* \"#utility.yul\":15153:15315   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15321:15687   */\n    tag_343:\n        /* \"#utility.yul\":15463:15466   */\n      0x00\n        /* \"#utility.yul\":15484:15551   */\n      tag_537\n        /* \"#utility.yul\":15548:15550   */\n      0x0c\n        /* \"#utility.yul\":15543:15546   */\n      dup4\n        /* \"#utility.yul\":15484:15551   */\n      tag_333\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":15477:15551   */\n      swap2\n      pop\n        /* \"#utility.yul\":15560:15653   */\n      tag_538\n        /* \"#utility.yul\":15649:15652   */\n      dup3\n        /* \"#utility.yul\":15560:15653   */\n      tag_342\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":15678:15680   */\n      0x20\n        /* \"#utility.yul\":15673:15676   */\n      dup3\n        /* \"#utility.yul\":15669:15681   */\n      add\n        /* \"#utility.yul\":15662:15681   */\n      swap1\n      pop\n        /* \"#utility.yul\":15321:15687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15693:16112   */\n    tag_152:\n        /* \"#utility.yul\":15859:15863   */\n      0x00\n        /* \"#utility.yul\":15897:15899   */\n      0x20\n        /* \"#utility.yul\":15886:15895   */\n      dup3\n        /* \"#utility.yul\":15882:15900   */\n      add\n        /* \"#utility.yul\":15874:15900   */\n      swap1\n      pop\n        /* \"#utility.yul\":15946:15955   */\n      dup2\n        /* \"#utility.yul\":15940:15944   */\n      dup2\n        /* \"#utility.yul\":15936:15956   */\n      sub\n        /* \"#utility.yul\":15932:15933   */\n      0x00\n        /* \"#utility.yul\":15921:15930   */\n      dup4\n        /* \"#utility.yul\":15917:15934   */\n      add\n        /* \"#utility.yul\":15910:15957   */\n      mstore\n        /* \"#utility.yul\":15974:16105   */\n      tag_540\n        /* \"#utility.yul\":16100:16104   */\n      dup2\n        /* \"#utility.yul\":15974:16105   */\n      tag_343\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":15966:16105   */\n      swap1\n      pop\n        /* \"#utility.yul\":15693:16112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16118:16450   */\n    tag_154:\n        /* \"#utility.yul\":16239:16243   */\n      0x00\n        /* \"#utility.yul\":16277:16279   */\n      0x40\n        /* \"#utility.yul\":16266:16275   */\n      dup3\n        /* \"#utility.yul\":16262:16280   */\n      add\n        /* \"#utility.yul\":16254:16280   */\n      swap1\n      pop\n        /* \"#utility.yul\":16290:16361   */\n      tag_542\n        /* \"#utility.yul\":16358:16359   */\n      0x00\n        /* \"#utility.yul\":16347:16356   */\n      dup4\n        /* \"#utility.yul\":16343:16360   */\n      add\n        /* \"#utility.yul\":16334:16340   */\n      dup6\n        /* \"#utility.yul\":16290:16361   */\n      tag_312\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":16371:16443   */\n      tag_543\n        /* \"#utility.yul\":16439:16441   */\n      0x20\n        /* \"#utility.yul\":16428:16437   */\n      dup4\n        /* \"#utility.yul\":16424:16442   */\n      add\n        /* \"#utility.yul\":16415:16421   */\n      dup5\n        /* \"#utility.yul\":16371:16443   */\n      tag_309\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":16118:16450   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16456:16572   */\n    tag_344:\n        /* \"#utility.yul\":16526:16547   */\n      tag_545\n        /* \"#utility.yul\":16541:16546   */\n      dup2\n        /* \"#utility.yul\":16526:16547   */\n      tag_304\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":16519:16524   */\n      dup2\n        /* \"#utility.yul\":16516:16548   */\n      eq\n        /* \"#utility.yul\":16506:16566   */\n      tag_546\n      jumpi\n        /* \"#utility.yul\":16562:16563   */\n      0x00\n        /* \"#utility.yul\":16559:16560   */\n      dup1\n        /* \"#utility.yul\":16552:16564   */\n      revert\n        /* \"#utility.yul\":16506:16566   */\n    tag_546:\n        /* \"#utility.yul\":16456:16572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16578:16715   */\n    tag_345:\n        /* \"#utility.yul\":16632:16637   */\n      0x00\n        /* \"#utility.yul\":16663:16669   */\n      dup2\n        /* \"#utility.yul\":16657:16670   */\n      mload\n        /* \"#utility.yul\":16648:16670   */\n      swap1\n      pop\n        /* \"#utility.yul\":16679:16709   */\n      tag_548\n        /* \"#utility.yul\":16703:16708   */\n      dup2\n        /* \"#utility.yul\":16679:16709   */\n      tag_344\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":16578:16715   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16721:17066   */\n    tag_158:\n        /* \"#utility.yul\":16788:16794   */\n      0x00\n        /* \"#utility.yul\":16837:16839   */\n      0x20\n        /* \"#utility.yul\":16825:16834   */\n      dup3\n        /* \"#utility.yul\":16816:16823   */\n      dup5\n        /* \"#utility.yul\":16812:16835   */\n      sub\n        /* \"#utility.yul\":16808:16840   */\n      slt\n        /* \"#utility.yul\":16805:16924   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":16843:16922   */\n      tag_551\n      tag_299\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":16805:16924   */\n    tag_550:\n        /* \"#utility.yul\":16963:16964   */\n      0x00\n        /* \"#utility.yul\":16988:17049   */\n      tag_552\n        /* \"#utility.yul\":17041:17048   */\n      dup5\n        /* \"#utility.yul\":17032:17038   */\n      dup3\n        /* \"#utility.yul\":17021:17030   */\n      dup6\n        /* \"#utility.yul\":17017:17039   */\n      add\n        /* \"#utility.yul\":16988:17049   */\n      tag_345\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":16978:17049   */\n      swap2\n      pop\n        /* \"#utility.yul\":16934:17059   */\n      pop\n        /* \"#utility.yul\":16721:17066   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17072:17243   */\n    tag_346:\n        /* \"#utility.yul\":17212:17235   */\n      0x5265776172642073686f756c6420737563636573730000000000000000000000\n        /* \"#utility.yul\":17208:17209   */\n      0x00\n        /* \"#utility.yul\":17200:17206   */\n      dup3\n        /* \"#utility.yul\":17196:17210   */\n      add\n        /* \"#utility.yul\":17189:17236   */\n      mstore\n        /* \"#utility.yul\":17072:17243   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17249:17615   */\n    tag_347:\n        /* \"#utility.yul\":17391:17394   */\n      0x00\n        /* \"#utility.yul\":17412:17479   */\n      tag_555\n        /* \"#utility.yul\":17476:17478   */\n      0x15\n        /* \"#utility.yul\":17471:17474   */\n      dup4\n        /* \"#utility.yul\":17412:17479   */\n      tag_333\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":17405:17479   */\n      swap2\n      pop\n        /* \"#utility.yul\":17488:17581   */\n      tag_556\n        /* \"#utility.yul\":17577:17580   */\n      dup3\n        /* \"#utility.yul\":17488:17581   */\n      tag_346\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":17606:17608   */\n      0x20\n        /* \"#utility.yul\":17601:17604   */\n      dup3\n        /* \"#utility.yul\":17597:17609   */\n      add\n        /* \"#utility.yul\":17590:17609   */\n      swap1\n      pop\n        /* \"#utility.yul\":17249:17615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17621:18040   */\n    tag_161:\n        /* \"#utility.yul\":17787:17791   */\n      0x00\n        /* \"#utility.yul\":17825:17827   */\n      0x20\n        /* \"#utility.yul\":17814:17823   */\n      dup3\n        /* \"#utility.yul\":17810:17828   */\n      add\n        /* \"#utility.yul\":17802:17828   */\n      swap1\n      pop\n        /* \"#utility.yul\":17874:17883   */\n      dup2\n        /* \"#utility.yul\":17868:17872   */\n      dup2\n        /* \"#utility.yul\":17864:17884   */\n      sub\n        /* \"#utility.yul\":17860:17861   */\n      0x00\n        /* \"#utility.yul\":17849:17858   */\n      dup4\n        /* \"#utility.yul\":17845:17862   */\n      add\n        /* \"#utility.yul\":17838:17885   */\n      mstore\n        /* \"#utility.yul\":17902:18033   */\n      tag_558\n        /* \"#utility.yul\":18028:18032   */\n      dup2\n        /* \"#utility.yul\":17902:18033   */\n      tag_347\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":17894:18033   */\n      swap1\n      pop\n        /* \"#utility.yul\":17621:18040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18046:18488   */\n    tag_164:\n        /* \"#utility.yul\":18195:18199   */\n      0x00\n        /* \"#utility.yul\":18233:18235   */\n      0x60\n        /* \"#utility.yul\":18222:18231   */\n      dup3\n        /* \"#utility.yul\":18218:18236   */\n      add\n        /* \"#utility.yul\":18210:18236   */\n      swap1\n      pop\n        /* \"#utility.yul\":18246:18317   */\n      tag_560\n        /* \"#utility.yul\":18314:18315   */\n      0x00\n        /* \"#utility.yul\":18303:18312   */\n      dup4\n        /* \"#utility.yul\":18299:18316   */\n      add\n        /* \"#utility.yul\":18290:18296   */\n      dup7\n        /* \"#utility.yul\":18246:18317   */\n      tag_312\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":18327:18399   */\n      tag_561\n        /* \"#utility.yul\":18395:18397   */\n      0x20\n        /* \"#utility.yul\":18384:18393   */\n      dup4\n        /* \"#utility.yul\":18380:18398   */\n      add\n        /* \"#utility.yul\":18371:18377   */\n      dup6\n        /* \"#utility.yul\":18327:18399   */\n      tag_309\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":18409:18481   */\n      tag_562\n        /* \"#utility.yul\":18477:18479   */\n      0x40\n        /* \"#utility.yul\":18466:18475   */\n      dup4\n        /* \"#utility.yul\":18462:18480   */\n      add\n        /* \"#utility.yul\":18453:18459   */\n      dup5\n        /* \"#utility.yul\":18409:18481   */\n      tag_309\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":18046:18488   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18494:18728   */\n    tag_348:\n        /* \"#utility.yul\":18634:18668   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":18630:18631   */\n      0x00\n        /* \"#utility.yul\":18622:18628   */\n      dup3\n        /* \"#utility.yul\":18618:18632   */\n      add\n        /* \"#utility.yul\":18611:18669   */\n      mstore\n        /* \"#utility.yul\":18703:18720   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":18698:18700   */\n      0x20\n        /* \"#utility.yul\":18690:18696   */\n      dup3\n        /* \"#utility.yul\":18686:18701   */\n      add\n        /* \"#utility.yul\":18679:18721   */\n      mstore\n        /* \"#utility.yul\":18494:18728   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18734:19100   */\n    tag_349:\n        /* \"#utility.yul\":18876:18879   */\n      0x00\n        /* \"#utility.yul\":18897:18964   */\n      tag_565\n        /* \"#utility.yul\":18961:18963   */\n      0x2f\n        /* \"#utility.yul\":18956:18959   */\n      dup4\n        /* \"#utility.yul\":18897:18964   */\n      tag_333\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":18890:18964   */\n      swap2\n      pop\n        /* \"#utility.yul\":18973:19066   */\n      tag_566\n        /* \"#utility.yul\":19062:19065   */\n      dup3\n        /* \"#utility.yul\":18973:19066   */\n      tag_348\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":19091:19093   */\n      0x40\n        /* \"#utility.yul\":19086:19089   */\n      dup3\n        /* \"#utility.yul\":19082:19094   */\n      add\n        /* \"#utility.yul\":19075:19094   */\n      swap1\n      pop\n        /* \"#utility.yul\":18734:19100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19106:19525   */\n    tag_179:\n        /* \"#utility.yul\":19272:19276   */\n      0x00\n        /* \"#utility.yul\":19310:19312   */\n      0x20\n        /* \"#utility.yul\":19299:19308   */\n      dup3\n        /* \"#utility.yul\":19295:19313   */\n      add\n        /* \"#utility.yul\":19287:19313   */\n      swap1\n      pop\n        /* \"#utility.yul\":19359:19368   */\n      dup2\n        /* \"#utility.yul\":19353:19357   */\n      dup2\n        /* \"#utility.yul\":19349:19369   */\n      sub\n        /* \"#utility.yul\":19345:19346   */\n      0x00\n        /* \"#utility.yul\":19334:19343   */\n      dup4\n        /* \"#utility.yul\":19330:19347   */\n      add\n        /* \"#utility.yul\":19323:19370   */\n      mstore\n        /* \"#utility.yul\":19387:19518   */\n      tag_568\n        /* \"#utility.yul\":19513:19517   */\n      dup2\n        /* \"#utility.yul\":19387:19518   */\n      tag_349\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":19379:19518   */\n      swap1\n      pop\n        /* \"#utility.yul\":19106:19525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19531:19674   */\n    tag_350:\n        /* \"#utility.yul\":19588:19593   */\n      0x00\n        /* \"#utility.yul\":19619:19625   */\n      dup2\n        /* \"#utility.yul\":19613:19626   */\n      mload\n        /* \"#utility.yul\":19604:19626   */\n      swap1\n      pop\n        /* \"#utility.yul\":19635:19668   */\n      tag_570\n        /* \"#utility.yul\":19662:19667   */\n      dup2\n        /* \"#utility.yul\":19635:19668   */\n      tag_307\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":19531:19674   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19680:20031   */\n    tag_191:\n        /* \"#utility.yul\":19750:19756   */\n      0x00\n        /* \"#utility.yul\":19799:19801   */\n      0x20\n        /* \"#utility.yul\":19787:19796   */\n      dup3\n        /* \"#utility.yul\":19778:19785   */\n      dup5\n        /* \"#utility.yul\":19774:19797   */\n      sub\n        /* \"#utility.yul\":19770:19802   */\n      slt\n        /* \"#utility.yul\":19767:19886   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":19805:19884   */\n      tag_573\n      tag_299\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":19767:19886   */\n    tag_572:\n        /* \"#utility.yul\":19925:19926   */\n      0x00\n        /* \"#utility.yul\":19950:20014   */\n      tag_574\n        /* \"#utility.yul\":20006:20013   */\n      dup5\n        /* \"#utility.yul\":19997:20003   */\n      dup3\n        /* \"#utility.yul\":19986:19995   */\n      dup6\n        /* \"#utility.yul\":19982:20004   */\n      add\n        /* \"#utility.yul\":19950:20014   */\n      tag_350\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":19940:20014   */\n      swap2\n      pop\n        /* \"#utility.yul\":19896:20024   */\n      pop\n        /* \"#utility.yul\":19680:20031   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20037:20201   */\n    tag_351:\n        /* \"#utility.yul\":20177:20193   */\n      0x456e6f7567682062616c616e6365000000000000000000000000000000000000\n        /* \"#utility.yul\":20173:20174   */\n      0x00\n        /* \"#utility.yul\":20165:20171   */\n      dup3\n        /* \"#utility.yul\":20161:20175   */\n      add\n        /* \"#utility.yul\":20154:20194   */\n      mstore\n        /* \"#utility.yul\":20037:20201   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20207:20573   */\n    tag_352:\n        /* \"#utility.yul\":20349:20352   */\n      0x00\n        /* \"#utility.yul\":20370:20437   */\n      tag_577\n        /* \"#utility.yul\":20434:20436   */\n      0x0e\n        /* \"#utility.yul\":20429:20432   */\n      dup4\n        /* \"#utility.yul\":20370:20437   */\n      tag_333\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":20363:20437   */\n      swap2\n      pop\n        /* \"#utility.yul\":20446:20539   */\n      tag_578\n        /* \"#utility.yul\":20535:20538   */\n      dup3\n        /* \"#utility.yul\":20446:20539   */\n      tag_351\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":20564:20566   */\n      0x20\n        /* \"#utility.yul\":20559:20562   */\n      dup3\n        /* \"#utility.yul\":20555:20567   */\n      add\n        /* \"#utility.yul\":20548:20567   */\n      swap1\n      pop\n        /* \"#utility.yul\":20207:20573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20579:20998   */\n    tag_194:\n        /* \"#utility.yul\":20745:20749   */\n      0x00\n        /* \"#utility.yul\":20783:20785   */\n      0x20\n        /* \"#utility.yul\":20772:20781   */\n      dup3\n        /* \"#utility.yul\":20768:20786   */\n      add\n        /* \"#utility.yul\":20760:20786   */\n      swap1\n      pop\n        /* \"#utility.yul\":20832:20841   */\n      dup2\n        /* \"#utility.yul\":20826:20830   */\n      dup2\n        /* \"#utility.yul\":20822:20842   */\n      sub\n        /* \"#utility.yul\":20818:20819   */\n      0x00\n        /* \"#utility.yul\":20807:20816   */\n      dup4\n        /* \"#utility.yul\":20803:20820   */\n      add\n        /* \"#utility.yul\":20796:20843   */\n      mstore\n        /* \"#utility.yul\":20860:20991   */\n      tag_580\n        /* \"#utility.yul\":20986:20990   */\n      dup2\n        /* \"#utility.yul\":20860:20991   */\n      tag_352\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":20852:20991   */\n      swap1\n      pop\n        /* \"#utility.yul\":20579:20998   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21004:21446   */\n    tag_196:\n        /* \"#utility.yul\":21153:21157   */\n      0x00\n        /* \"#utility.yul\":21191:21193   */\n      0x60\n        /* \"#utility.yul\":21180:21189   */\n      dup3\n        /* \"#utility.yul\":21176:21194   */\n      add\n        /* \"#utility.yul\":21168:21194   */\n      swap1\n      pop\n        /* \"#utility.yul\":21204:21275   */\n      tag_582\n        /* \"#utility.yul\":21272:21273   */\n      0x00\n        /* \"#utility.yul\":21261:21270   */\n      dup4\n        /* \"#utility.yul\":21257:21274   */\n      add\n        /* \"#utility.yul\":21248:21254   */\n      dup7\n        /* \"#utility.yul\":21204:21275   */\n      tag_312\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":21285:21357   */\n      tag_583\n        /* \"#utility.yul\":21353:21355   */\n      0x20\n        /* \"#utility.yul\":21342:21351   */\n      dup4\n        /* \"#utility.yul\":21338:21356   */\n      add\n        /* \"#utility.yul\":21329:21335   */\n      dup6\n        /* \"#utility.yul\":21285:21357   */\n      tag_312\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":21367:21439   */\n      tag_584\n        /* \"#utility.yul\":21435:21437   */\n      0x40\n        /* \"#utility.yul\":21424:21433   */\n      dup4\n        /* \"#utility.yul\":21420:21438   */\n      add\n        /* \"#utility.yul\":21411:21417   */\n      dup5\n        /* \"#utility.yul\":21367:21439   */\n      tag_309\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":21004:21446   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21452:21625   */\n    tag_353:\n        /* \"#utility.yul\":21592:21617   */\n      0x5472616e736665722073686f756c642073756363657373000000000000000000\n        /* \"#utility.yul\":21588:21589   */\n      0x00\n        /* \"#utility.yul\":21580:21586   */\n      dup3\n        /* \"#utility.yul\":21576:21590   */\n      add\n        /* \"#utility.yul\":21569:21618   */\n      mstore\n        /* \"#utility.yul\":21452:21625   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21631:21997   */\n    tag_354:\n        /* \"#utility.yul\":21773:21776   */\n      0x00\n        /* \"#utility.yul\":21794:21861   */\n      tag_587\n        /* \"#utility.yul\":21858:21860   */\n      0x17\n        /* \"#utility.yul\":21853:21856   */\n      dup4\n        /* \"#utility.yul\":21794:21861   */\n      tag_333\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":21787:21861   */\n      swap2\n      pop\n        /* \"#utility.yul\":21870:21963   */\n      tag_588\n        /* \"#utility.yul\":21959:21962   */\n      dup3\n        /* \"#utility.yul\":21870:21963   */\n      tag_353\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":21988:21990   */\n      0x20\n        /* \"#utility.yul\":21983:21986   */\n      dup3\n        /* \"#utility.yul\":21979:21991   */\n      add\n        /* \"#utility.yul\":21972:21991   */\n      swap1\n      pop\n        /* \"#utility.yul\":21631:21997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22003:22422   */\n    tag_202:\n        /* \"#utility.yul\":22169:22173   */\n      0x00\n        /* \"#utility.yul\":22207:22209   */\n      0x20\n        /* \"#utility.yul\":22196:22205   */\n      dup3\n        /* \"#utility.yul\":22192:22210   */\n      add\n        /* \"#utility.yul\":22184:22210   */\n      swap1\n      pop\n        /* \"#utility.yul\":22256:22265   */\n      dup2\n        /* \"#utility.yul\":22250:22254   */\n      dup2\n        /* \"#utility.yul\":22246:22266   */\n      sub\n        /* \"#utility.yul\":22242:22243   */\n      0x00\n        /* \"#utility.yul\":22231:22240   */\n      dup4\n        /* \"#utility.yul\":22227:22244   */\n      add\n        /* \"#utility.yul\":22220:22267   */\n      mstore\n        /* \"#utility.yul\":22284:22415   */\n      tag_590\n        /* \"#utility.yul\":22410:22414   */\n      dup2\n        /* \"#utility.yul\":22284:22415   */\n      tag_354\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":22276:22415   */\n      swap1\n      pop\n        /* \"#utility.yul\":22003:22422   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22428:22584   */\n    tag_355:\n        /* \"#utility.yul\":22568:22576   */\n      0x4e6f206665650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22564:22565   */\n      0x00\n        /* \"#utility.yul\":22556:22562   */\n      dup3\n        /* \"#utility.yul\":22552:22566   */\n      add\n        /* \"#utility.yul\":22545:22577   */\n      mstore\n        /* \"#utility.yul\":22428:22584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22590:22955   */\n    tag_356:\n        /* \"#utility.yul\":22732:22735   */\n      0x00\n        /* \"#utility.yul\":22753:22819   */\n      tag_593\n        /* \"#utility.yul\":22817:22818   */\n      0x06\n        /* \"#utility.yul\":22812:22815   */\n      dup4\n        /* \"#utility.yul\":22753:22819   */\n      tag_333\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":22746:22819   */\n      swap2\n      pop\n        /* \"#utility.yul\":22828:22921   */\n      tag_594\n        /* \"#utility.yul\":22917:22920   */\n      dup3\n        /* \"#utility.yul\":22828:22921   */\n      tag_355\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":22946:22948   */\n      0x20\n        /* \"#utility.yul\":22941:22944   */\n      dup3\n        /* \"#utility.yul\":22937:22949   */\n      add\n        /* \"#utility.yul\":22930:22949   */\n      swap1\n      pop\n        /* \"#utility.yul\":22590:22955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22961:23380   */\n    tag_213:\n        /* \"#utility.yul\":23127:23131   */\n      0x00\n        /* \"#utility.yul\":23165:23167   */\n      0x20\n        /* \"#utility.yul\":23154:23163   */\n      dup3\n        /* \"#utility.yul\":23150:23168   */\n      add\n        /* \"#utility.yul\":23142:23168   */\n      swap1\n      pop\n        /* \"#utility.yul\":23214:23223   */\n      dup2\n        /* \"#utility.yul\":23208:23212   */\n      dup2\n        /* \"#utility.yul\":23204:23224   */\n      sub\n        /* \"#utility.yul\":23200:23201   */\n      0x00\n        /* \"#utility.yul\":23189:23198   */\n      dup4\n        /* \"#utility.yul\":23185:23202   */\n      add\n        /* \"#utility.yul\":23178:23225   */\n      mstore\n        /* \"#utility.yul\":23242:23373   */\n      tag_596\n        /* \"#utility.yul\":23368:23372   */\n      dup2\n        /* \"#utility.yul\":23242:23373   */\n      tag_356\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":23234:23373   */\n      swap1\n      pop\n        /* \"#utility.yul\":22961:23380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23386:23548   */\n    tag_357:\n        /* \"#utility.yul\":23526:23540   */\n      0x7472616e73666572206665650000000000000000000000000000000000000000\n        /* \"#utility.yul\":23522:23523   */\n      0x00\n        /* \"#utility.yul\":23514:23520   */\n      dup3\n        /* \"#utility.yul\":23510:23524   */\n      add\n        /* \"#utility.yul\":23503:23541   */\n      mstore\n        /* \"#utility.yul\":23386:23548   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23554:23920   */\n    tag_358:\n        /* \"#utility.yul\":23696:23699   */\n      0x00\n        /* \"#utility.yul\":23717:23784   */\n      tag_599\n        /* \"#utility.yul\":23781:23783   */\n      0x0c\n        /* \"#utility.yul\":23776:23779   */\n      dup4\n        /* \"#utility.yul\":23717:23784   */\n      tag_333\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":23710:23784   */\n      swap2\n      pop\n        /* \"#utility.yul\":23793:23886   */\n      tag_600\n        /* \"#utility.yul\":23882:23885   */\n      dup3\n        /* \"#utility.yul\":23793:23886   */\n      tag_357\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":23911:23913   */\n      0x20\n        /* \"#utility.yul\":23906:23909   */\n      dup3\n        /* \"#utility.yul\":23902:23914   */\n      add\n        /* \"#utility.yul\":23895:23914   */\n      swap1\n      pop\n        /* \"#utility.yul\":23554:23920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23926:24345   */\n    tag_220:\n        /* \"#utility.yul\":24092:24096   */\n      0x00\n        /* \"#utility.yul\":24130:24132   */\n      0x20\n        /* \"#utility.yul\":24119:24128   */\n      dup3\n        /* \"#utility.yul\":24115:24133   */\n      add\n        /* \"#utility.yul\":24107:24133   */\n      swap1\n      pop\n        /* \"#utility.yul\":24179:24188   */\n      dup2\n        /* \"#utility.yul\":24173:24177   */\n      dup2\n        /* \"#utility.yul\":24169:24189   */\n      sub\n        /* \"#utility.yul\":24165:24166   */\n      0x00\n        /* \"#utility.yul\":24154:24163   */\n      dup4\n        /* \"#utility.yul\":24150:24167   */\n      add\n        /* \"#utility.yul\":24143:24190   */\n      mstore\n        /* \"#utility.yul\":24207:24338   */\n      tag_602\n        /* \"#utility.yul\":24333:24337   */\n      dup2\n        /* \"#utility.yul\":24207:24338   */\n      tag_358\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":24199:24338   */\n      swap1\n      pop\n        /* \"#utility.yul\":23926:24345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24351:24512   */\n    tag_359:\n        /* \"#utility.yul\":24491:24504   */\n      0x47616d6520657869737473000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24487:24488   */\n      0x00\n        /* \"#utility.yul\":24479:24485   */\n      dup3\n        /* \"#utility.yul\":24475:24489   */\n      add\n        /* \"#utility.yul\":24468:24505   */\n      mstore\n        /* \"#utility.yul\":24351:24512   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24518:24884   */\n    tag_360:\n        /* \"#utility.yul\":24660:24663   */\n      0x00\n        /* \"#utility.yul\":24681:24748   */\n      tag_605\n        /* \"#utility.yul\":24745:24747   */\n      0x0b\n        /* \"#utility.yul\":24740:24743   */\n      dup4\n        /* \"#utility.yul\":24681:24748   */\n      tag_333\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":24674:24748   */\n      swap2\n      pop\n        /* \"#utility.yul\":24757:24850   */\n      tag_606\n        /* \"#utility.yul\":24846:24849   */\n      dup3\n        /* \"#utility.yul\":24757:24850   */\n      tag_359\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":24875:24877   */\n      0x20\n        /* \"#utility.yul\":24870:24873   */\n      dup3\n        /* \"#utility.yul\":24866:24878   */\n      add\n        /* \"#utility.yul\":24859:24878   */\n      swap1\n      pop\n        /* \"#utility.yul\":24518:24884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24890:25309   */\n    tag_239:\n        /* \"#utility.yul\":25056:25060   */\n      0x00\n        /* \"#utility.yul\":25094:25096   */\n      0x20\n        /* \"#utility.yul\":25083:25092   */\n      dup3\n        /* \"#utility.yul\":25079:25097   */\n      add\n        /* \"#utility.yul\":25071:25097   */\n      swap1\n      pop\n        /* \"#utility.yul\":25143:25152   */\n      dup2\n        /* \"#utility.yul\":25137:25141   */\n      dup2\n        /* \"#utility.yul\":25133:25153   */\n      sub\n        /* \"#utility.yul\":25129:25130   */\n      0x00\n        /* \"#utility.yul\":25118:25127   */\n      dup4\n        /* \"#utility.yul\":25114:25131   */\n      add\n        /* \"#utility.yul\":25107:25154   */\n      mstore\n        /* \"#utility.yul\":25171:25302   */\n      tag_608\n        /* \"#utility.yul\":25297:25301   */\n      dup2\n        /* \"#utility.yul\":25171:25302   */\n      tag_360\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":25163:25302   */\n      swap1\n      pop\n        /* \"#utility.yul\":24890:25309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25315:25463   */\n    tag_361:\n        /* \"#utility.yul\":25417:25428   */\n      0x00\n        /* \"#utility.yul\":25454:25457   */\n      dup2\n        /* \"#utility.yul\":25439:25457   */\n      swap1\n      pop\n        /* \"#utility.yul\":25315:25463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25469:25642   */\n    tag_362:\n        /* \"#utility.yul\":25609:25634   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":25605:25606   */\n      0x00\n        /* \"#utility.yul\":25597:25603   */\n      dup3\n        /* \"#utility.yul\":25593:25607   */\n      add\n        /* \"#utility.yul\":25586:25635   */\n      mstore\n        /* \"#utility.yul\":25469:25642   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25648:26050   */\n    tag_363:\n        /* \"#utility.yul\":25808:25811   */\n      0x00\n        /* \"#utility.yul\":25829:25914   */\n      tag_612\n        /* \"#utility.yul\":25911:25913   */\n      0x17\n        /* \"#utility.yul\":25906:25909   */\n      dup4\n        /* \"#utility.yul\":25829:25914   */\n      tag_361\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":25822:25914   */\n      swap2\n      pop\n        /* \"#utility.yul\":25923:26016   */\n      tag_613\n        /* \"#utility.yul\":26012:26015   */\n      dup3\n        /* \"#utility.yul\":25923:26016   */\n      tag_362\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":26041:26043   */\n      0x17\n        /* \"#utility.yul\":26036:26039   */\n      dup3\n        /* \"#utility.yul\":26032:26044   */\n      add\n        /* \"#utility.yul\":26025:26044   */\n      swap1\n      pop\n        /* \"#utility.yul\":25648:26050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26056:26155   */\n    tag_364:\n        /* \"#utility.yul\":26108:26114   */\n      0x00\n        /* \"#utility.yul\":26142:26147   */\n      dup2\n        /* \"#utility.yul\":26136:26148   */\n      mload\n        /* \"#utility.yul\":26126:26148   */\n      swap1\n      pop\n        /* \"#utility.yul\":26056:26155   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26161:26407   */\n    tag_365:\n        /* \"#utility.yul\":26242:26243   */\n      0x00\n        /* \"#utility.yul\":26252:26365   */\n    tag_616:\n        /* \"#utility.yul\":26266:26272   */\n      dup4\n        /* \"#utility.yul\":26263:26264   */\n      dup2\n        /* \"#utility.yul\":26260:26273   */\n      lt\n        /* \"#utility.yul\":26252:26365   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":26351:26352   */\n      dup1\n        /* \"#utility.yul\":26346:26349   */\n      dup3\n        /* \"#utility.yul\":26342:26353   */\n      add\n        /* \"#utility.yul\":26336:26354   */\n      mload\n        /* \"#utility.yul\":26332:26333   */\n      dup2\n        /* \"#utility.yul\":26327:26330   */\n      dup5\n        /* \"#utility.yul\":26323:26334   */\n      add\n        /* \"#utility.yul\":26316:26355   */\n      mstore\n        /* \"#utility.yul\":26288:26290   */\n      0x20\n        /* \"#utility.yul\":26285:26286   */\n      dup2\n        /* \"#utility.yul\":26281:26291   */\n      add\n        /* \"#utility.yul\":26276:26291   */\n      swap1\n      pop\n        /* \"#utility.yul\":26252:26365   */\n      jump(tag_616)\n    tag_618:\n        /* \"#utility.yul\":26399:26400   */\n      0x00\n        /* \"#utility.yul\":26390:26396   */\n      dup5\n        /* \"#utility.yul\":26385:26388   */\n      dup5\n        /* \"#utility.yul\":26381:26397   */\n      add\n        /* \"#utility.yul\":26374:26401   */\n      mstore\n        /* \"#utility.yul\":26223:26407   */\n      pop\n        /* \"#utility.yul\":26161:26407   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26413:26803   */\n    tag_366:\n        /* \"#utility.yul\":26519:26522   */\n      0x00\n        /* \"#utility.yul\":26547:26586   */\n      tag_620\n        /* \"#utility.yul\":26580:26585   */\n      dup3\n        /* \"#utility.yul\":26547:26586   */\n      tag_364\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":26602:26691   */\n      tag_621\n        /* \"#utility.yul\":26684:26690   */\n      dup2\n        /* \"#utility.yul\":26679:26682   */\n      dup6\n        /* \"#utility.yul\":26602:26691   */\n      tag_361\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":26595:26691   */\n      swap4\n      pop\n        /* \"#utility.yul\":26700:26765   */\n      tag_622\n        /* \"#utility.yul\":26758:26764   */\n      dup2\n        /* \"#utility.yul\":26753:26756   */\n      dup6\n        /* \"#utility.yul\":26746:26750   */\n      0x20\n        /* \"#utility.yul\":26739:26744   */\n      dup7\n        /* \"#utility.yul\":26735:26751   */\n      add\n        /* \"#utility.yul\":26700:26765   */\n      tag_365\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":26790:26796   */\n      dup1\n        /* \"#utility.yul\":26785:26788   */\n      dup5\n        /* \"#utility.yul\":26781:26797   */\n      add\n        /* \"#utility.yul\":26774:26797   */\n      swap2\n      pop\n        /* \"#utility.yul\":26523:26803   */\n      pop\n        /* \"#utility.yul\":26413:26803   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26809:26976   */\n    tag_367:\n        /* \"#utility.yul\":26949:26968   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":26945:26946   */\n      0x00\n        /* \"#utility.yul\":26937:26943   */\n      dup3\n        /* \"#utility.yul\":26933:26947   */\n      add\n        /* \"#utility.yul\":26926:26969   */\n      mstore\n        /* \"#utility.yul\":26809:26976   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26982:27384   */\n    tag_368:\n        /* \"#utility.yul\":27142:27145   */\n      0x00\n        /* \"#utility.yul\":27163:27248   */\n      tag_625\n        /* \"#utility.yul\":27245:27247   */\n      0x11\n        /* \"#utility.yul\":27240:27243   */\n      dup4\n        /* \"#utility.yul\":27163:27248   */\n      tag_361\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":27156:27248   */\n      swap2\n      pop\n        /* \"#utility.yul\":27257:27350   */\n      tag_626\n        /* \"#utility.yul\":27346:27349   */\n      dup3\n        /* \"#utility.yul\":27257:27350   */\n      tag_367\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":27375:27377   */\n      0x11\n        /* \"#utility.yul\":27370:27373   */\n      dup3\n        /* \"#utility.yul\":27366:27378   */\n      add\n        /* \"#utility.yul\":27359:27378   */\n      swap1\n      pop\n        /* \"#utility.yul\":26982:27384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27390:28357   */\n    tag_267:\n        /* \"#utility.yul\":27772:27775   */\n      0x00\n        /* \"#utility.yul\":27794:27942   */\n      tag_628\n        /* \"#utility.yul\":27938:27941   */\n      dup3\n        /* \"#utility.yul\":27794:27942   */\n      tag_363\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":27787:27942   */\n      swap2\n      pop\n        /* \"#utility.yul\":27959:28054   */\n      tag_629\n        /* \"#utility.yul\":28050:28053   */\n      dup3\n        /* \"#utility.yul\":28041:28047   */\n      dup6\n        /* \"#utility.yul\":27959:28054   */\n      tag_366\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":27952:28054   */\n      swap2\n      pop\n        /* \"#utility.yul\":28071:28219   */\n      tag_630\n        /* \"#utility.yul\":28215:28218   */\n      dup3\n        /* \"#utility.yul\":28071:28219   */\n      tag_368\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":28064:28219   */\n      swap2\n      pop\n        /* \"#utility.yul\":28236:28331   */\n      tag_631\n        /* \"#utility.yul\":28327:28330   */\n      dup3\n        /* \"#utility.yul\":28318:28324   */\n      dup5\n        /* \"#utility.yul\":28236:28331   */\n      tag_366\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":28229:28331   */\n      swap2\n      pop\n        /* \"#utility.yul\":28348:28351   */\n      dup2\n        /* \"#utility.yul\":28341:28351   */\n      swap1\n      pop\n        /* \"#utility.yul\":27390:28357   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28363:28465   */\n    tag_369:\n        /* \"#utility.yul\":28404:28410   */\n      0x00\n        /* \"#utility.yul\":28455:28457   */\n      0x1f\n        /* \"#utility.yul\":28451:28458   */\n      not\n        /* \"#utility.yul\":28446:28448   */\n      0x1f\n        /* \"#utility.yul\":28439:28444   */\n      dup4\n        /* \"#utility.yul\":28435:28449   */\n      add\n        /* \"#utility.yul\":28431:28459   */\n      and\n        /* \"#utility.yul\":28421:28459   */\n      swap1\n      pop\n        /* \"#utility.yul\":28363:28465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28471:28848   */\n    tag_370:\n        /* \"#utility.yul\":28559:28562   */\n      0x00\n        /* \"#utility.yul\":28587:28626   */\n      tag_634\n        /* \"#utility.yul\":28620:28625   */\n      dup3\n        /* \"#utility.yul\":28587:28626   */\n      tag_364\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":28642:28713   */\n      tag_635\n        /* \"#utility.yul\":28706:28712   */\n      dup2\n        /* \"#utility.yul\":28701:28704   */\n      dup6\n        /* \"#utility.yul\":28642:28713   */\n      tag_333\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":28635:28713   */\n      swap4\n      pop\n        /* \"#utility.yul\":28722:28787   */\n      tag_636\n        /* \"#utility.yul\":28780:28786   */\n      dup2\n        /* \"#utility.yul\":28775:28778   */\n      dup6\n        /* \"#utility.yul\":28768:28772   */\n      0x20\n        /* \"#utility.yul\":28761:28766   */\n      dup7\n        /* \"#utility.yul\":28757:28773   */\n      add\n        /* \"#utility.yul\":28722:28787   */\n      tag_365\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":28812:28841   */\n      tag_637\n        /* \"#utility.yul\":28834:28840   */\n      dup2\n        /* \"#utility.yul\":28812:28841   */\n      tag_369\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":28807:28810   */\n      dup5\n        /* \"#utility.yul\":28803:28842   */\n      add\n        /* \"#utility.yul\":28796:28842   */\n      swap2\n      pop\n        /* \"#utility.yul\":28563:28848   */\n      pop\n        /* \"#utility.yul\":28471:28848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28854:29167   */\n    tag_269:\n        /* \"#utility.yul\":28967:28971   */\n      0x00\n        /* \"#utility.yul\":29005:29007   */\n      0x20\n        /* \"#utility.yul\":28994:29003   */\n      dup3\n        /* \"#utility.yul\":28990:29008   */\n      add\n        /* \"#utility.yul\":28982:29008   */\n      swap1\n      pop\n        /* \"#utility.yul\":29054:29063   */\n      dup2\n        /* \"#utility.yul\":29048:29052   */\n      dup2\n        /* \"#utility.yul\":29044:29064   */\n      sub\n        /* \"#utility.yul\":29040:29041   */\n      0x00\n        /* \"#utility.yul\":29029:29038   */\n      dup4\n        /* \"#utility.yul\":29025:29042   */\n      add\n        /* \"#utility.yul\":29018:29065   */\n      mstore\n        /* \"#utility.yul\":29082:29160   */\n      tag_639\n        /* \"#utility.yul\":29155:29159   */\n      dup2\n        /* \"#utility.yul\":29146:29152   */\n      dup5\n        /* \"#utility.yul\":29082:29160   */\n      tag_370\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":29074:29160   */\n      swap1\n      pop\n        /* \"#utility.yul\":28854:29167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29173:29353   */\n    tag_277:\n        /* \"#utility.yul\":29221:29298   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29218:29219   */\n      0x00\n        /* \"#utility.yul\":29211:29299   */\n      mstore\n        /* \"#utility.yul\":29318:29322   */\n      0x41\n        /* \"#utility.yul\":29315:29316   */\n      0x04\n        /* \"#utility.yul\":29308:29323   */\n      mstore\n        /* \"#utility.yul\":29342:29346   */\n      0x24\n        /* \"#utility.yul\":29339:29340   */\n      0x00\n        /* \"#utility.yul\":29332:29347   */\n      revert\n        /* \"#utility.yul\":29359:29539   */\n    tag_281:\n        /* \"#utility.yul\":29407:29484   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29404:29405   */\n      0x00\n        /* \"#utility.yul\":29397:29485   */\n      mstore\n        /* \"#utility.yul\":29504:29508   */\n      0x32\n        /* \"#utility.yul\":29501:29502   */\n      0x04\n        /* \"#utility.yul\":29494:29509   */\n      mstore\n        /* \"#utility.yul\":29528:29532   */\n      0x24\n        /* \"#utility.yul\":29525:29526   */\n      0x00\n        /* \"#utility.yul\":29518:29533   */\n      revert\n        /* \"#utility.yul\":29545:29716   */\n    tag_294:\n        /* \"#utility.yul\":29584:29587   */\n      0x00\n        /* \"#utility.yul\":29607:29631   */\n      tag_643\n        /* \"#utility.yul\":29625:29630   */\n      dup3\n        /* \"#utility.yul\":29607:29631   */\n      tag_306\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":29598:29631   */\n      swap2\n      pop\n        /* \"#utility.yul\":29653:29657   */\n      0x00\n        /* \"#utility.yul\":29646:29651   */\n      dup3\n        /* \"#utility.yul\":29643:29658   */\n      sub\n        /* \"#utility.yul\":29640:29681   */\n      tag_644\n      jumpi\n        /* \"#utility.yul\":29661:29679   */\n      tag_645\n      tag_338\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":29640:29681   */\n    tag_644:\n        /* \"#utility.yul\":29708:29709   */\n      0x01\n        /* \"#utility.yul\":29701:29706   */\n      dup3\n        /* \"#utility.yul\":29697:29710   */\n      sub\n        /* \"#utility.yul\":29690:29710   */\n      swap1\n      pop\n        /* \"#utility.yul\":29545:29716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29722:29904   */\n    tag_371:\n        /* \"#utility.yul\":29862:29896   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":29858:29859   */\n      0x00\n        /* \"#utility.yul\":29850:29856   */\n      dup3\n        /* \"#utility.yul\":29846:29860   */\n      add\n        /* \"#utility.yul\":29839:29897   */\n      mstore\n        /* \"#utility.yul\":29722:29904   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29910:30276   */\n    tag_372:\n        /* \"#utility.yul\":30052:30055   */\n      0x00\n        /* \"#utility.yul\":30073:30140   */\n      tag_648\n        /* \"#utility.yul\":30137:30139   */\n      0x20\n        /* \"#utility.yul\":30132:30135   */\n      dup4\n        /* \"#utility.yul\":30073:30140   */\n      tag_333\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":30066:30140   */\n      swap2\n      pop\n        /* \"#utility.yul\":30149:30242   */\n      tag_649\n        /* \"#utility.yul\":30238:30241   */\n      dup3\n        /* \"#utility.yul\":30149:30242   */\n      tag_371\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":30267:30269   */\n      0x20\n        /* \"#utility.yul\":30262:30265   */\n      dup3\n        /* \"#utility.yul\":30258:30270   */\n      add\n        /* \"#utility.yul\":30251:30270   */\n      swap1\n      pop\n        /* \"#utility.yul\":29910:30276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30282:30701   */\n    tag_297:\n        /* \"#utility.yul\":30448:30452   */\n      0x00\n        /* \"#utility.yul\":30486:30488   */\n      0x20\n        /* \"#utility.yul\":30475:30484   */\n      dup3\n        /* \"#utility.yul\":30471:30489   */\n      add\n        /* \"#utility.yul\":30463:30489   */\n      swap1\n      pop\n        /* \"#utility.yul\":30535:30544   */\n      dup2\n        /* \"#utility.yul\":30529:30533   */\n      dup2\n        /* \"#utility.yul\":30525:30545   */\n      sub\n        /* \"#utility.yul\":30521:30522   */\n      0x00\n        /* \"#utility.yul\":30510:30519   */\n      dup4\n        /* \"#utility.yul\":30506:30523   */\n      add\n        /* \"#utility.yul\":30499:30546   */\n      mstore\n        /* \"#utility.yul\":30563:30694   */\n      tag_651\n        /* \"#utility.yul\":30689:30693   */\n      dup2\n        /* \"#utility.yul\":30563:30694   */\n      tag_372\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":30555:30694   */\n      swap1\n      pop\n        /* \"#utility.yul\":30282:30701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122041b6a348127c6714813c41f366c3695ad91cb6195fb1c0bdb3ddbcb468135ff264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_761": {
									"entryPoint": 77,
									"id": 761,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1072": {
									"entryPoint": 424,
									"id": 1072,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupRole_701": {
									"entryPoint": 55,
									"id": 701,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_557": {
									"entryPoint": 318,
									"id": 557,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052601460045560006005553480156200001b57600080fd5b50620000316000801b336200003760201b60201c565b620001b0565b6200004982826200004d60201b60201c565b5050565b6200005f82826200013e60201b60201c565b6200013a57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620000df620001a860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b6129b480620001c06000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80636ffcc719116100b8578063a217fddf1161007c578063a217fddf1461038c578063ce33bd74146103aa578063d547741f146103da578063d82c13f0146103f6578063e5ed1d5914610426578063ee9b80a41461045657610137565b80636ffcc719146102d25780637fd6f15c14610302578063853828b61461032057806391d148541461033e5780639bc01b361461036e57610137565b80632f2ff15d116100ff5780632f2ff15d1461022e57806334fcc3e71461024a57806336568abe1461027a57806337bfc1ef1461029657806355a373d6146102b457610137565b806301ffc9a71461013c578063117a5b901461016c57806316b169c41461019e578063248a9ca3146101ce5780632c32b187146101fe575b600080fd5b61015660048036038101906101519190611aad565b610486565b6040516101639190611af5565b60405180910390f35b61018660048036038101906101819190611b46565b610500565b60405161019593929190611bc3565b60405180910390f35b6101b860048036038101906101b39190611b46565b610557565b6040516101c59190611cb8565b60405180910390f35b6101e860048036038101906101e39190611d10565b61065e565b6040516101f59190611d4c565b60405180910390f35b61021860048036038101906102139190611d93565b61067d565b6040516102259190611dd3565b60405180910390f35b61024860048036038101906102439190611dee565b610a65565b005b610264600480360381019061025f9190611d93565b610a86565b6040516102719190611dd3565b60405180910390f35b610294600480360381019061028f9190611dee565b610b47565b005b61029e610bca565b6040516102ab9190611dd3565b60405180910390f35b6102bc610bd0565b6040516102c99190611e2e565b60405180910390f35b6102ec60048036038101906102e79190611e49565b610bf6565b6040516102f99190611af5565b60405180910390f35b61030a61106c565b6040516103179190611dd3565b60405180910390f35b610328611072565b6040516103359190611dd3565b60405180910390f35b61035860048036038101906103539190611dee565b6111f1565b6040516103659190611af5565b60405180910390f35b61037661125b565b6040516103839190611f47565b60405180910390f35b6103946112b3565b6040516103a19190611d4c565b60405180910390f35b6103c460048036038101906103bf9190611b46565b6112ba565b6040516103d19190611dd3565b60405180910390f35b6103f460048036038101906103ef9190611dee565b61137a565b005b610410600480360381019061040b9190611b46565b61139b565b60405161041d9190611dd3565b60405180910390f35b610440600480360381019061043b9190611b46565b6113bf565b60405161044d9190611af5565b60405180910390f35b610470600480360381019061046b9190611f69565b6114c1565b60405161047d9190611af5565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104f957506104f88261151b565b5b9050919050565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060020154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60606001600083815260200190815260200160002060000160009054906101000a900460ff166105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b390611ff3565b60405180910390fd5b6001600083815260200190815260200160002060030180548060200260200160405190810160405280929190818152602001828054801561065257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610608575b50505050509050919050565b6000806000838152602001908152602001600020600101549050919050565b60008060001b61068c81611585565b6001600085815260200190815260200160002060000160009054906101000a900460ff166106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e690611ff3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600086815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078b9061205f565b60405180910390fd5b826001600086815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060646001600087815260200190815260200160002060020154600454606461081391906120ae565b61081d91906120e2565b6108279190612153565b9050600081600160008881526020019081526020016000206002015461084d91906120ae565b9050600160008781526020019081526020016000206002015482826108729190612184565b146108b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a990612204565b60405180910390fd5b600082101580156108c4575060008110155b80156108e757506000600160008881526020019081526020016000206002015410155b610926576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091d90612270565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86846040518363ffffffff1660e01b8152600401610983929190612290565b6020604051808303816000875af11580156109a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c691906122e5565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc9061235e565b60405180910390fd5b8060056000828254610a179190612184565b925050819055507f3b6f6a175407b0e278b9798f8be45bcc2cdba01a995bf768f528b457d7e27e85858383604051610a519392919061237e565b60405180910390a181935050505092915050565b610a6e8261065e565b610a7781611585565b610a818383611599565b505050565b60006001600084815260200190815260200160002060000160009054906101000a900460ff16610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae290611ff3565b60405180910390fd5b6001600084815260200190815260200160002060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610b4f611679565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb390612427565b60405180910390fd5b610bc68282611681565b5050565b60055481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001600084815260200190815260200160002060000160009054906101000a900460ff16610c5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5290611ff3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600085815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf79061205f565b60405180910390fd5b81600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610d5c9190611e2e565b602060405180830381865afa158015610d79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9d919061245c565b1015610dde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd5906124d5565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610e3d939291906124f5565b6020604051808303816000875af1158015610e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8091906122e5565b610ebf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb690612578565b60405180910390fd5b60006001600085815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610f925760016000848152602001908152602001600020600301339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b816001600085815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ff59190612184565b92505081905550816001600085815260200190815260200160002060020160008282546110229190612184565b925050819055507ffb4c42ca2d93f0a673c2125aaa3c7b3fbeee9533e34b1f2c0f8f5c4d4d8bf106338360405161105a929190612290565b60405180910390a16001905092915050565b60045481565b60008060001b61108181611585565b6000600554116110c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bd906125e4565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336005546040518363ffffffff1660e01b8152600401611125929190612290565b6020604051808303816000875af1158015611144573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116891906122e5565b6111a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119e90612650565b60405180910390fd5b600554915060006005819055507f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433836040516111e5929190612290565b60405180910390a15090565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060028054806020026020016040519081016040528092919081815260200182805480156112a957602002820191906000526020600020905b815481526020019060010190808311611295575b5050505050905090565b6000801b81565b60006001600083815260200190815260200160002060000160009054906101000a900460ff1661131f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131690611ff3565b60405180910390fd5b6001600083815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6113838261065e565b61138c81611585565b6113968383611681565b505050565b600281815481106113ab57600080fd5b906000526020600020016000915090505481565b60008015156001600084815260200190815260200160002060000160009054906101000a900460ff1615151461142a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611421906126bc565b60405180910390fd5b600180600084815260200190815260200160002060000160006101000a81548160ff02191690831515021790555060028290806001815401808255809150506001900390600052602060002001600090919091909150557fb5e8a4470f7bcac7f2c0f3e23471bd7016a9f6f049884cd27dfa8960f361287b826040516114b09190611dd3565b60405180910390a160019050919050565b60008060001b6114d081611585565b82600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61159681611591611679565b611762565b50565b6115a382826111f1565b61167557600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061161a611679565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b61168b82826111f1565b1561175e57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611703611679565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b61176c82826111f1565b6117e357611779816117e7565b6117878360001c6020611814565b6040516020016117989291906127e5565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117da9190612869565b60405180910390fd5b5050565b606061180d8273ffffffffffffffffffffffffffffffffffffffff16601460ff16611814565b9050919050565b60606000600283600261182791906120e2565b6118319190612184565b67ffffffffffffffff81111561184a5761184961288b565b5b6040519080825280601f01601f19166020018201604052801561187c5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106118b4576118b36128ba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611918576119176128ba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261195891906120e2565b6119629190612184565b90505b6001811115611a02577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106119a4576119a36128ba565b5b1a60f81b8282815181106119bb576119ba6128ba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806119fb906128e9565b9050611965565b5060008414611a46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3d9061295e565b60405180910390fd5b8091505092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a8a81611a55565b8114611a9557600080fd5b50565b600081359050611aa781611a81565b92915050565b600060208284031215611ac357611ac2611a50565b5b6000611ad184828501611a98565b91505092915050565b60008115159050919050565b611aef81611ada565b82525050565b6000602082019050611b0a6000830184611ae6565b92915050565b6000819050919050565b611b2381611b10565b8114611b2e57600080fd5b50565b600081359050611b4081611b1a565b92915050565b600060208284031215611b5c57611b5b611a50565b5b6000611b6a84828501611b31565b91505092915050565b611b7c81611b10565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bad82611b82565b9050919050565b611bbd81611ba2565b82525050565b6000606082019050611bd86000830186611ae6565b611be56020830185611b73565b611bf26040830184611bb4565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611c2f81611ba2565b82525050565b6000611c418383611c26565b60208301905092915050565b6000602082019050919050565b6000611c6582611bfa565b611c6f8185611c05565b9350611c7a83611c16565b8060005b83811015611cab578151611c928882611c35565b9750611c9d83611c4d565b925050600181019050611c7e565b5085935050505092915050565b60006020820190508181036000830152611cd28184611c5a565b905092915050565b6000819050919050565b611ced81611cda565b8114611cf857600080fd5b50565b600081359050611d0a81611ce4565b92915050565b600060208284031215611d2657611d25611a50565b5b6000611d3484828501611cfb565b91505092915050565b611d4681611cda565b82525050565b6000602082019050611d616000830184611d3d565b92915050565b611d7081611ba2565b8114611d7b57600080fd5b50565b600081359050611d8d81611d67565b92915050565b60008060408385031215611daa57611da9611a50565b5b6000611db885828601611b31565b9250506020611dc985828601611d7e565b9150509250929050565b6000602082019050611de86000830184611b73565b92915050565b60008060408385031215611e0557611e04611a50565b5b6000611e1385828601611cfb565b9250506020611e2485828601611d7e565b9150509250929050565b6000602082019050611e436000830184611bb4565b92915050565b60008060408385031215611e6057611e5f611a50565b5b6000611e6e85828601611b31565b9250506020611e7f85828601611b31565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611ebe81611b10565b82525050565b6000611ed08383611eb5565b60208301905092915050565b6000602082019050919050565b6000611ef482611e89565b611efe8185611e94565b9350611f0983611ea5565b8060005b83811015611f3a578151611f218882611ec4565b9750611f2c83611edc565b925050600181019050611f0d565b5085935050505092915050565b60006020820190508181036000830152611f618184611ee9565b905092915050565b600060208284031215611f7f57611f7e611a50565b5b6000611f8d84828501611d7e565b91505092915050565b600082825260208201905092915050565b7f47616d6520496e697469616c697a656400000000000000000000000000000000600082015250565b6000611fdd601083611f96565b9150611fe882611fa7565b602082019050919050565b6000602082019050818103600083015261200c81611fd0565b9050919050565b7f46696e6973686564000000000000000000000000000000000000000000000000600082015250565b6000612049600883611f96565b915061205482612013565b602082019050919050565b600060208201905081810360008301526120788161203c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120b982611b10565b91506120c483611b10565b92508282039050818111156120dc576120db61207f565b5b92915050565b60006120ed82611b10565b91506120f883611b10565b925082820261210681611b10565b9150828204841483151761211d5761211c61207f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061215e82611b10565b915061216983611b10565b92508261217957612178612124565b5b828204905092915050565b600061218f82611b10565b915061219a83611b10565b92508282019050808211156121b2576121b161207f565b5b92915050565b7f726577617264202b20666565203d20746f74616c000000000000000000000000600082015250565b60006121ee601483611f96565b91506121f9826121b8565b602082019050919050565b6000602082019050818103600083015261221d816121e1565b9050919050565b7f616c6c20706f7369746976650000000000000000000000000000000000000000600082015250565b600061225a600c83611f96565b915061226582612224565b602082019050919050565b600060208201905081810360008301526122898161224d565b9050919050565b60006040820190506122a56000830185611bb4565b6122b26020830184611b73565b9392505050565b6122c281611ada565b81146122cd57600080fd5b50565b6000815190506122df816122b9565b92915050565b6000602082840312156122fb576122fa611a50565b5b6000612309848285016122d0565b91505092915050565b7f5265776172642073686f756c6420737563636573730000000000000000000000600082015250565b6000612348601583611f96565b915061235382612312565b602082019050919050565b600060208201905081810360008301526123778161233b565b9050919050565b60006060820190506123936000830186611bb4565b6123a06020830185611b73565b6123ad6040830184611b73565b949350505050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000612411602f83611f96565b915061241c826123b5565b604082019050919050565b6000602082019050818103600083015261244081612404565b9050919050565b60008151905061245681611b1a565b92915050565b60006020828403121561247257612471611a50565b5b600061248084828501612447565b91505092915050565b7f456e6f7567682062616c616e6365000000000000000000000000000000000000600082015250565b60006124bf600e83611f96565b91506124ca82612489565b602082019050919050565b600060208201905081810360008301526124ee816124b2565b9050919050565b600060608201905061250a6000830186611bb4565b6125176020830185611bb4565b6125246040830184611b73565b949350505050565b7f5472616e736665722073686f756c642073756363657373000000000000000000600082015250565b6000612562601783611f96565b915061256d8261252c565b602082019050919050565b6000602082019050818103600083015261259181612555565b9050919050565b7f4e6f206665650000000000000000000000000000000000000000000000000000600082015250565b60006125ce600683611f96565b91506125d982612598565b602082019050919050565b600060208201905081810360008301526125fd816125c1565b9050919050565b7f7472616e73666572206665650000000000000000000000000000000000000000600082015250565b600061263a600c83611f96565b915061264582612604565b602082019050919050565b600060208201905081810360008301526126698161262d565b9050919050565b7f47616d6520657869737473000000000000000000000000000000000000000000600082015250565b60006126a6600b83611f96565b91506126b182612670565b602082019050919050565b600060208201905081810360008301526126d581612699565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b600061271d6017836126dc565b9150612728826126e7565b601782019050919050565b600081519050919050565b60005b8381101561275c578082015181840152602081019050612741565b60008484015250505050565b600061277382612733565b61277d81856126dc565b935061278d81856020860161273e565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006127cf6011836126dc565b91506127da82612799565b601182019050919050565b60006127f082612710565b91506127fc8285612768565b9150612807826127c2565b91506128138284612768565b91508190509392505050565b6000601f19601f8301169050919050565b600061283b82612733565b6128458185611f96565b935061285581856020860161273e565b61285e8161281f565b840191505092915050565b600060208201905081810360008301526128838184612830565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006128f482611b10565b9150600082036129075761290661207f565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000612948602083611f96565b915061295382612912565b602082019050919050565b600060208201905081810360008301526129778161293b565b905091905056fea264697066735822122041b6a348127c6714813c41f366c3695ad91cb6195fb1c0bdb3ddbcb468135ff264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x14 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x31 PUSH1 0x0 DUP1 SHL CALLER PUSH3 0x37 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1B0 JUMP JUMPDEST PUSH3 0x49 DUP3 DUP3 PUSH3 0x4D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x5F DUP3 DUP3 PUSH3 0x13E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x13A JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0xDF PUSH3 0x1A8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x29B4 DUP1 PUSH3 0x1C0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FFCC719 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xCE33BD74 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xD82C13F0 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xE5ED1D59 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xEE9B80A4 EQ PUSH2 0x456 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x6FFCC719 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x7FD6F15C EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x9BC01B36 EQ PUSH2 0x36E JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x34FCC3E7 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x37BFC1EF EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x55A373D6 EQ PUSH2 0x2B4 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x117A5B90 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x16B169C4 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x2C32B187 EQ PUSH2 0x1FE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x67D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH2 0xA65 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29E PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH2 0x106C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH2 0x1072 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH2 0x11F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x376 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x1F47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x394 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH2 0x137A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x139B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x470 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4F9 JUMPI POP PUSH2 0x4F8 DUP3 PUSH2 0x151B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B3 SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x608 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SHL PUSH2 0x68C DUP2 PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E6 SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x794 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78B SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x4 SLOAD PUSH1 0x64 PUSH2 0x813 SWAP2 SWAP1 PUSH2 0x20AE JUMP JUMPDEST PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0x827 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x84D SWAP2 SWAP1 PUSH2 0x20AE JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 DUP3 PUSH2 0x872 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST EQ PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A9 SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x8C4 JUMPI POP PUSH1 0x0 DUP2 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x8E7 JUMPI POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD LT ISZERO JUMPDEST PUSH2 0x926 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91D SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x983 SWAP3 SWAP2 SWAP1 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0x22E5 JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x235E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA17 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x3B6F6A175407B0E278B9798F8BE45BCC2CDBA01A995BF768F528B457D7E27E85 DUP6 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA51 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x237E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA6E DUP3 PUSH2 0x65E JUMP JUMPDEST PUSH2 0xA77 DUP2 PUSH2 0x1585 JUMP JUMPDEST PUSH2 0xA81 DUP4 DUP4 PUSH2 0x1599 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB4F PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB3 SWAP1 PUSH2 0x2427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBC6 DUP3 DUP3 PUSH2 0x1681 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC52 SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF7 SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5C SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD79 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD9D SWAP2 SWAP1 PUSH2 0x245C JUMP JUMPDEST LT ISZERO PUSH2 0xDDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD5 SWAP1 PUSH2 0x24D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE80 SWAP2 SWAP1 PUSH2 0x22E5 JUMP JUMPDEST PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB6 SWAP1 PUSH2 0x2578 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0xF92 JUMPI PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1022 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xFB4C42CA2D93F0A673C2125AAA3C7B3FBEEE9533E34B1F2C0F8F5C4D4D8BF106 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x105A SWAP3 SWAP2 SWAP1 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SHL PUSH2 0x1081 DUP2 PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD GT PUSH2 0x10C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BD SWAP1 PUSH2 0x25E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1125 SWAP3 SWAP2 SWAP1 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1144 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x22E5 JUMP JUMPDEST PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119E SWAP1 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD SWAP2 POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x11E5 SWAP3 SWAP2 SWAP1 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x12A9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1295 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x131F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1316 SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1383 DUP3 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x138C DUP2 PUSH2 0x1585 JUMP JUMPDEST PUSH2 0x1396 DUP4 DUP4 PUSH2 0x1681 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x142A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1421 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH32 0xB5E8A4470F7BCAC7F2C0F3E23471BD7016A9F6F049884CD27DFA8960F361287B DUP3 PUSH1 0x40 MLOAD PUSH2 0x14B0 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SHL PUSH2 0x14D0 DUP2 PUSH2 0x1585 JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1596 DUP2 PUSH2 0x1591 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x1762 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x15A3 DUP3 DUP3 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x1675 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x161A PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x168B DUP3 DUP3 PUSH2 0x11F1 JUMP JUMPDEST ISZERO PUSH2 0x175E JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1703 PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x176C DUP3 DUP3 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x17E3 JUMPI PUSH2 0x1779 DUP2 PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0x1787 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1798 SWAP3 SWAP2 SWAP1 PUSH2 0x27E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17DA SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x180D DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x1814 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x1827 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0x1831 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x184A JUMPI PUSH2 0x1849 PUSH2 0x288B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x187C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x18B4 JUMPI PUSH2 0x18B3 PUSH2 0x28BA JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1918 JUMPI PUSH2 0x1917 PUSH2 0x28BA JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1958 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0x1962 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A02 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x19A4 JUMPI PUSH2 0x19A3 PUSH2 0x28BA JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x19BB JUMPI PUSH2 0x19BA PUSH2 0x28BA JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x19FB SWAP1 PUSH2 0x28E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1965 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1A46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3D SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8A DUP2 PUSH2 0x1A55 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AA7 DUP2 PUSH2 0x1A81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC3 JUMPI PUSH2 0x1AC2 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AD1 DUP5 DUP3 DUP6 ADD PUSH2 0x1A98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEF DUP2 PUSH2 0x1ADA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B23 DUP2 PUSH2 0x1B10 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B40 DUP2 PUSH2 0x1B1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B5C JUMPI PUSH2 0x1B5B PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B6A DUP5 DUP3 DUP6 ADD PUSH2 0x1B31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B7C DUP2 PUSH2 0x1B10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BAD DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BBD DUP2 PUSH2 0x1BA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BD8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x1BE5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x1BF2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BB4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C2F DUP2 PUSH2 0x1BA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C41 DUP4 DUP4 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C65 DUP3 PUSH2 0x1BFA JUMP JUMPDEST PUSH2 0x1C6F DUP2 DUP6 PUSH2 0x1C05 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C7A DUP4 PUSH2 0x1C16 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CAB JUMPI DUP2 MLOAD PUSH2 0x1C92 DUP9 DUP3 PUSH2 0x1C35 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C9D DUP4 PUSH2 0x1C4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C7E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD2 DUP2 DUP5 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CED DUP2 PUSH2 0x1CDA JUMP JUMPDEST DUP2 EQ PUSH2 0x1CF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D0A DUP2 PUSH2 0x1CE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D26 JUMPI PUSH2 0x1D25 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D34 DUP5 DUP3 DUP6 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D46 DUP2 PUSH2 0x1CDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D70 DUP2 PUSH2 0x1BA2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D8D DUP2 PUSH2 0x1D67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DAA JUMPI PUSH2 0x1DA9 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DB8 DUP6 DUP3 DUP7 ADD PUSH2 0x1B31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DC9 DUP6 DUP3 DUP7 ADD PUSH2 0x1D7E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DE8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E05 JUMPI PUSH2 0x1E04 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E13 DUP6 DUP3 DUP7 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E24 DUP6 DUP3 DUP7 ADD PUSH2 0x1D7E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E43 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E60 JUMPI PUSH2 0x1E5F PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E6E DUP6 DUP3 DUP7 ADD PUSH2 0x1B31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E7F DUP6 DUP3 DUP7 ADD PUSH2 0x1B31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EBE DUP2 PUSH2 0x1B10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED0 DUP4 DUP4 PUSH2 0x1EB5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF4 DUP3 PUSH2 0x1E89 JUMP JUMPDEST PUSH2 0x1EFE DUP2 DUP6 PUSH2 0x1E94 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F09 DUP4 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F3A JUMPI DUP2 MLOAD PUSH2 0x1F21 DUP9 DUP3 PUSH2 0x1EC4 JUMP JUMPDEST SWAP8 POP PUSH2 0x1F2C DUP4 PUSH2 0x1EDC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1F0D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F61 DUP2 DUP5 PUSH2 0x1EE9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F7F JUMPI PUSH2 0x1F7E PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F8D DUP5 DUP3 DUP6 ADD PUSH2 0x1D7E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x47616D6520496E697469616C697A656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDD PUSH1 0x10 DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE8 DUP3 PUSH2 0x1FA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x200C DUP2 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46696E6973686564000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2049 PUSH1 0x8 DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x2054 DUP3 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2078 DUP2 PUSH2 0x203C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20B9 DUP3 PUSH2 0x1B10 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C4 DUP4 PUSH2 0x1B10 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x20DC JUMPI PUSH2 0x20DB PUSH2 0x207F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20ED DUP3 PUSH2 0x1B10 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F8 DUP4 PUSH2 0x1B10 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2106 DUP2 PUSH2 0x1B10 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x211D JUMPI PUSH2 0x211C PUSH2 0x207F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x215E DUP3 PUSH2 0x1B10 JUMP JUMPDEST SWAP2 POP PUSH2 0x2169 DUP4 PUSH2 0x1B10 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2179 JUMPI PUSH2 0x2178 PUSH2 0x2124 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x218F DUP3 PUSH2 0x1B10 JUMP JUMPDEST SWAP2 POP PUSH2 0x219A DUP4 PUSH2 0x1B10 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x21B2 JUMPI PUSH2 0x21B1 PUSH2 0x207F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x726577617264202B20666565203D20746F74616C000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21EE PUSH1 0x14 DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F9 DUP3 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x221D DUP2 PUSH2 0x21E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C6C20706F7369746976650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x225A PUSH1 0xC DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x2265 DUP3 PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2289 DUP2 PUSH2 0x224D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22A5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1BB4 JUMP JUMPDEST PUSH2 0x22B2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B73 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x22C2 DUP2 PUSH2 0x1ADA JUMP JUMPDEST DUP2 EQ PUSH2 0x22CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22DF DUP2 PUSH2 0x22B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22FB JUMPI PUSH2 0x22FA PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2309 DUP5 DUP3 DUP6 ADD PUSH2 0x22D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265776172642073686F756C6420737563636573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2348 PUSH1 0x15 DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x2353 DUP3 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2377 DUP2 PUSH2 0x233B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2393 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1BB4 JUMP JUMPDEST PUSH2 0x23A0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x23AD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B73 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2411 PUSH1 0x2F DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x241C DUP3 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2440 DUP2 PUSH2 0x2404 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2456 DUP2 PUSH2 0x1B1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2472 JUMPI PUSH2 0x2471 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2480 DUP5 DUP3 DUP6 ADD PUSH2 0x2447 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456E6F7567682062616C616E6365000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24BF PUSH1 0xE DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x24CA DUP3 PUSH2 0x2489 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24EE DUP2 PUSH2 0x24B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x250A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1BB4 JUMP JUMPDEST PUSH2 0x2517 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BB4 JUMP JUMPDEST PUSH2 0x2524 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B73 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5472616E736665722073686F756C642073756363657373000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2562 PUSH1 0x17 DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x256D DUP3 PUSH2 0x252C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2591 DUP2 PUSH2 0x2555 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206665650000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25CE PUSH1 0x6 DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x25D9 DUP3 PUSH2 0x2598 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25FD DUP2 PUSH2 0x25C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7472616E73666572206665650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x263A PUSH1 0xC DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x2645 DUP3 PUSH2 0x2604 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2669 DUP2 PUSH2 0x262D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D6520657869737473000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26A6 PUSH1 0xB DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x26B1 DUP3 PUSH2 0x2670 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26D5 DUP2 PUSH2 0x2699 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271D PUSH1 0x17 DUP4 PUSH2 0x26DC JUMP JUMPDEST SWAP2 POP PUSH2 0x2728 DUP3 PUSH2 0x26E7 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x275C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2773 DUP3 PUSH2 0x2733 JUMP JUMPDEST PUSH2 0x277D DUP2 DUP6 PUSH2 0x26DC JUMP JUMPDEST SWAP4 POP PUSH2 0x278D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x273E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27CF PUSH1 0x11 DUP4 PUSH2 0x26DC JUMP JUMPDEST SWAP2 POP PUSH2 0x27DA DUP3 PUSH2 0x2799 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F0 DUP3 PUSH2 0x2710 JUMP JUMPDEST SWAP2 POP PUSH2 0x27FC DUP3 DUP6 PUSH2 0x2768 JUMP JUMPDEST SWAP2 POP PUSH2 0x2807 DUP3 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2813 DUP3 DUP5 PUSH2 0x2768 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x283B DUP3 PUSH2 0x2733 JUMP JUMPDEST PUSH2 0x2845 DUP2 DUP6 PUSH2 0x1F96 JUMP JUMPDEST SWAP4 POP PUSH2 0x2855 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x273E JUMP JUMPDEST PUSH2 0x285E DUP2 PUSH2 0x281F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2883 DUP2 DUP5 PUSH2 0x2830 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x28F4 DUP3 PUSH2 0x1B10 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x2907 JUMPI PUSH2 0x2906 PUSH2 0x207F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2948 PUSH1 0x20 DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x2953 DUP3 PUSH2 0x2912 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2977 DUP2 PUSH2 0x293B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xB6 LOG3 BASEFEE SLT PUSH29 0x6714813C41F366C3695AD91CB6195FB1C0BDB3DDBCB468135FF264736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "1006:3613:0:-:0;;;1567:2;1542:27;;1599:1;1576:24;;1609:75;;;;;;;;;;1634:42;2198:4:1;1645:18:0;;1665:10;1634;;;:42;;:::i;:::-;1006:3613;;6937:110:1;7015:25;7026:4;7032:7;7015:10;;;:25;;:::i;:::-;6937:110;;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;;;:22;;:::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;;;:12;;:::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;3021:145::-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;1006:3613:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_505": {
									"entryPoint": 4787,
									"id": 505,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_570": {
									"entryPoint": 5509,
									"id": 570,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_609": {
									"entryPoint": 5986,
									"id": 609,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_761": {
									"entryPoint": 5529,
									"id": 761,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1072": {
									"entryPoint": 5753,
									"id": 1072,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_792": {
									"entryPoint": 5761,
									"id": 792,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@bet_245": {
									"entryPoint": 3062,
									"id": 245,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@feePercent_64": {
									"entryPoint": 4204,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeTotal_67": {
									"entryPoint": 3018,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@finish_363": {
									"entryPoint": 1661,
									"id": 363,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@gameIds_59": {
									"entryPoint": 5019,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gameUsers_385": {
									"entryPoint": 1367,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@games_56": {
									"entryPoint": 1280,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBetting_410": {
									"entryPoint": 2694,
									"id": 410,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_624": {
									"entryPoint": 1630,
									"id": 624,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_644": {
									"entryPoint": 2661,
									"id": 644,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_557": {
									"entryPoint": 4593,
									"id": 557,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@listGameIds_140": {
									"entryPoint": 4699,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@myBetting_434": {
									"entryPoint": 4794,
									"id": 434,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceRole_687": {
									"entryPoint": 2887,
									"id": 687,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_664": {
									"entryPoint": 4986,
									"id": 664,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setErc20_94": {
									"entryPoint": 5313,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@startGame_131": {
									"entryPoint": 5055,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1334": {
									"entryPoint": 5403,
									"id": 1334,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_538": {
									"entryPoint": 1158,
									"id": 538,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_1265": {
									"entryPoint": 6164,
									"id": 1265,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_1285": {
									"entryPoint": 6119,
									"id": 1285,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenContract_61": {
									"entryPoint": 3024,
									"id": 61,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawAll_476": {
									"entryPoint": 4210,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 7419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 7440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 7662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 7571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 7221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 7876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 7206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b5b902ea75834fec35d744e6d2c06ffa21968444153844c582889f3d8e1d6f9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1d7746a167dffffe1eb54a58f0c273bed6be0e41a9a645fd32d7ecbd7a4b280e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_23c3753c0f6fa973971f222b3e4423b5d431231c5fc06f10050747681f083f9f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_278731ee9f545fa99055837db85c213f43f50f6dcdfa192dd137870e8447fbe8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_32f15a745716df67b5b6c00ce98db178058e0917cf89b8509cdd41355d02fd89_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_579284958e00ccca8fac473d6ff2f4e7d7549c4c48cc4d5894e132ebb3661612_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_62b03ec8189bc1df71a370bda03dede89d84796e8b66b7e85e784c8b26377c33_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9b7f5333fcf849000ddaf31926abc3e2b6cbe5b6f210af0090bd9302a8e9fa97_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10213,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9461,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8848,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9086,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256_t_address__to_t_bool_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7107,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 7500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b5b902ea75834fec35d744e6d2c06ffa21968444153844c582889f3d8e1d6f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1d7746a167dffffe1eb54a58f0c273bed6be0e41a9a645fd32d7ecbd7a4b280e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23c3753c0f6fa973971f222b3e4423b5d431231c5fc06f10050747681f083f9f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_278731ee9f545fa99055837db85c213f43f50f6dcdfa192dd137870e8447fbe8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_32f15a745716df67b5b6c00ce98db178058e0917cf89b8509cdd41355d02fd89__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_579284958e00ccca8fac473d6ff2f4e7d7549c4c48cc4d5894e132ebb3661612__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62b03ec8189bc1df71a370bda03dede89d84796e8b66b7e85e784c8b26377c33__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b7f5333fcf849000ddaf31926abc3e2b6cbe5b6f210af0090bd9302a8e9fa97__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10046,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 10473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8319,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8484,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10426,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 10379,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6736,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 10514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b5b902ea75834fec35d744e6d2c06ffa21968444153844c582889f3d8e1d6f9": {
									"entryPoint": 9624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1d7746a167dffffe1eb54a58f0c273bed6be0e41a9a645fd32d7ecbd7a4b280e": {
									"entryPoint": 8632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_23c3753c0f6fa973971f222b3e4423b5d431231c5fc06f10050747681f083f9f": {
									"entryPoint": 9840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_278731ee9f545fa99055837db85c213f43f50f6dcdfa192dd137870e8447fbe8": {
									"entryPoint": 8978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_32f15a745716df67b5b6c00ce98db178058e0917cf89b8509cdd41355d02fd89": {
									"entryPoint": 9516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_579284958e00ccca8fac473d6ff2f4e7d7549c4c48cc4d5894e132ebb3661612": {
									"entryPoint": 9353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_62b03ec8189bc1df71a370bda03dede89d84796e8b66b7e85e784c8b26377c33": {
									"entryPoint": 9732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9b7f5333fcf849000ddaf31926abc3e2b6cbe5b6f210af0090bd9302a8e9fa97": {
									"entryPoint": 8740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8": {
									"entryPoint": 8211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 9959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7": {
									"entryPoint": 8103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 10137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 9141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:30704:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1584:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:12",
														"type": ""
													}
												],
												"src": "1518:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1644:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1701:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:43:12"
															},
															"nodeType": "YulIf",
															"src": "1654:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1637:5:12",
														"type": ""
													}
												],
												"src": "1601:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1781:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1791:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1759:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1767:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:12",
														"type": ""
													}
												],
												"src": "1729:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1940:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1986:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1953:32:12"
															},
															"nodeType": "YulIf",
															"src": "1950:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "2079:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2123:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1910:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1921:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1933:6:12",
														"type": ""
													}
												],
												"src": "1874:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2274:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2262:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2269:3:12",
														"type": ""
													}
												],
												"src": "2209:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2378:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2388:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2403:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2410:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2399:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2370:7:12",
														"type": ""
													}
												],
												"src": "2333:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2510:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2520:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2549:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2531:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2520:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2492:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2502:7:12",
														"type": ""
													}
												],
												"src": "2465:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2632:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2649:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2672:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2654:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2654:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2642:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2642:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2620:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2627:3:12",
														"type": ""
													}
												],
												"src": "2567:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2839:282:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2849:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2861:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2872:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2857:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2849:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2923:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2936:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2947:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2932:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2932:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2885:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2885:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2885:65:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3004:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3017:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3028:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3013:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3013:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2960:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2960:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2960:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3086:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3099:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3110:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3095:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3042:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3042:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256_t_address__to_t_bool_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2795:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2807:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2815:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2823:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2834:4:12",
														"type": ""
													}
												],
												"src": "2691:430:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3201:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3212:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3228:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3222:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3222:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3212:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3184:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3194:6:12",
														"type": ""
													}
												],
												"src": "3127:114:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3358:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3375:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3380:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3368:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3396:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3415:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3420:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3411:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3411:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3396:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3330:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3335:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3346:11:12",
														"type": ""
													}
												],
												"src": "3247:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3509:60:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3519:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "3527:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3519:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3540:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3552:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3557:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3548:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3548:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3540:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3496:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3504:4:12",
														"type": ""
													}
												],
												"src": "3437:132:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3630:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3647:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3670:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3652:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3652:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3618:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3625:3:12",
														"type": ""
													}
												],
												"src": "3575:108:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3769:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3813:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3821:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3779:33:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3779:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3779:46:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3834:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3852:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3857:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3848:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3848:14:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "3834:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3742:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3750:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3758:10:12",
														"type": ""
													}
												],
												"src": "3689:179:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3949:38:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3959:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3971:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3976:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3967:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3967:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "3959:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3936:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "3944:4:12",
														"type": ""
													}
												],
												"src": "3874:113:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4147:608:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4157:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4219:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4171:47:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:54:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4161:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4234:93:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4315:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4320:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4241:73:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:86:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4234:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4336:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4401:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4351:49:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4351:56:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4340:7:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4416:21:12",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4430:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4420:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4506:224:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4520:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4547:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4541:5:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "4524:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4567:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4618:13:12"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4633:3:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "4574:43:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4574:63:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4567:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4650:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4713:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4660:52:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4660:60:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4650:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4468:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4471:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4465:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4479:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4481:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4490:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4493:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4486:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4486:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4481:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4450:14:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4452:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4461:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4456:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4446:284:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4739:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4746:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4739:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4126:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4133:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4142:3:12",
														"type": ""
													}
												],
												"src": "4023:732:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4909:225:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4919:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4931:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4942:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4927:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4927:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4919:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4966:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4977:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4962:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4962:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4985:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4991:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4981:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4981:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4955:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4955:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4955:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5011:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5113:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5122:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5019:93:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5011:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4881:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4893:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4904:4:12",
														"type": ""
													}
												],
												"src": "4761:373:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5185:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5195:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5206:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5195:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5167:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5177:7:12",
														"type": ""
													}
												],
												"src": "5140:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5266:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5323:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5332:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5335:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5325:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5325:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5325:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5289:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5314:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "5296:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5296:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5286:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5286:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5279:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5279:43:12"
															},
															"nodeType": "YulIf",
															"src": "5276:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5259:5:12",
														"type": ""
													}
												],
												"src": "5223:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5403:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5413:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5435:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5422:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5422:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5413:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5478:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "5451:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5451:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5381:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5389:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5397:5:12",
														"type": ""
													}
												],
												"src": "5351:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5562:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5608:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5610:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5610:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5610:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5583:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5592:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5579:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5579:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5575:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5575:32:12"
															},
															"nodeType": "YulIf",
															"src": "5572:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "5701:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5716:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5730:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5720:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5745:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5780:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5791:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5776:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5776:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5800:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5755:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5755:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5745:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5532:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5543:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5555:6:12",
														"type": ""
													}
												],
												"src": "5496:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5896:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5913:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5936:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5918:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5918:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5906:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5906:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5906:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5884:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5891:3:12",
														"type": ""
													}
												],
												"src": "5831:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6053:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6063:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6075:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6086:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6071:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6071:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6063:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6143:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6156:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6167:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6152:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6152:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6099:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6099:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6099:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6025:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6037:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6048:4:12",
														"type": ""
													}
												],
												"src": "5955:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6226:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6283:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6292:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6295:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6285:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6285:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6285:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6249:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6274:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6256:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6256:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6246:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6246:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6239:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6239:43:12"
															},
															"nodeType": "YulIf",
															"src": "6236:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6219:5:12",
														"type": ""
													}
												],
												"src": "6183:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6363:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6373:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6395:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6382:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6382:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6373:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6438:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6411:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6411:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6411:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6341:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6349:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6357:5:12",
														"type": ""
													}
												],
												"src": "6311:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6539:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6585:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6587:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6587:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6587:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6560:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6569:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6556:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6556:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6581:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6552:32:12"
															},
															"nodeType": "YulIf",
															"src": "6549:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "6678:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6693:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6707:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6697:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6722:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6757:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6768:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6753:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6753:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6777:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6732:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6732:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6722:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6805:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6820:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6834:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6824:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6850:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6885:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6896:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6881:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6881:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6905:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6860:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6860:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6850:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6501:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6512:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6524:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6532:6:12",
														"type": ""
													}
												],
												"src": "6456:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7034:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7044:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7056:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7067:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7052:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7052:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7044:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7124:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7137:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7148:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7133:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7133:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7080:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7080:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7080:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7006:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7018:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7029:4:12",
														"type": ""
													}
												],
												"src": "6936:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7247:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7293:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7295:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7295:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7295:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7268:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7277:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7264:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7264:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7289:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7260:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7260:32:12"
															},
															"nodeType": "YulIf",
															"src": "7257:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "7386:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7401:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7415:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7405:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7430:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7465:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7476:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7461:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7461:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7485:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "7440:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7440:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7430:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7513:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7528:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7542:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7532:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7558:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7593:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7604:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7589:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7589:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7613:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7568:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7568:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7558:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7209:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7220:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7232:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7240:6:12",
														"type": ""
													}
												],
												"src": "7164:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7742:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7752:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7764:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7775:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7760:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7760:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7752:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7832:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7845:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7856:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7841:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7841:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7788:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7788:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7788:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7714:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7726:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7737:4:12",
														"type": ""
													}
												],
												"src": "7644:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7955:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8001:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8003:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8003:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8003:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7976:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7985:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7972:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7972:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7997:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7968:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7968:32:12"
															},
															"nodeType": "YulIf",
															"src": "7965:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "8094:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8109:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8123:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8113:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8138:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8173:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8184:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8169:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8169:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8193:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8148:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8148:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8138:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8221:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8236:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8250:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8240:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8266:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8301:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8312:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8297:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8297:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8321:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8276:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8276:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8266:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7917:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7928:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7940:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7948:6:12",
														"type": ""
													}
												],
												"src": "7872:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8426:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8437:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8453:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8447:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8447:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8437:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8409:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8419:6:12",
														"type": ""
													}
												],
												"src": "8352:114:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8583:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8600:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8605:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8593:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8593:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8593:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8621:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8640:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8645:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8636:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8636:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8621:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8555:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8560:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8571:11:12",
														"type": ""
													}
												],
												"src": "8472:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8734:60:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8744:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "8752:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8744:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8765:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8777:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8782:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8773:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8773:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8765:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8721:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8729:4:12",
														"type": ""
													}
												],
												"src": "8662:132:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8855:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8872:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8895:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8877:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8877:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8865:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8865:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8865:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8843:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8850:3:12",
														"type": ""
													}
												],
												"src": "8800:108:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8994:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9038:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9046:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9004:33:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9004:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9004:46:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9059:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9077:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9082:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9073:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9073:14:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "9059:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8967:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8975:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "8983:10:12",
														"type": ""
													}
												],
												"src": "8914:179:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9174:38:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9184:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9196:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9201:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9192:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9192:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "9184:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "9161:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "9169:4:12",
														"type": ""
													}
												],
												"src": "9099:113:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9372:608:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9382:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9444:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9396:47:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9396:54:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9386:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9459:93:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9540:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9545:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9466:73:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9466:86:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9459:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9561:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9626:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9576:49:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9576:56:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "9565:7:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9641:21:12",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "9655:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "9645:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9731:224:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9745:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9772:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9766:5:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9766:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "9749:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9792:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "9843:13:12"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "9858:3:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "9799:43:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9799:63:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9792:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9875:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9938:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "9885:52:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9885:60:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9875:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9693:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9696:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9690:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9690:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9704:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9706:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9715:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9718:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9711:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9711:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9706:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9675:14:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9677:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9686:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "9681:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9671:284:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9964:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9971:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9964:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9351:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9358:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9367:3:12",
														"type": ""
													}
												],
												"src": "9248:732:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10134:225:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10144:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10156:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10167:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10152:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10152:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10144:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10191:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10202:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10187:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10187:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10210:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10216:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10206:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10206:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10180:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10180:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10180:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10236:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10338:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10347:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10244:93:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10244:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10236:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10106:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10118:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10129:4:12",
														"type": ""
													}
												],
												"src": "9986:373:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10431:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10477:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10479:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10479:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10479:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10452:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10461:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10448:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10448:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10473:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10444:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10444:32:12"
															},
															"nodeType": "YulIf",
															"src": "10441:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "10570:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10585:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10599:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10589:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10614:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10649:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10660:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10645:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10645:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10669:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10624:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10624:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10614:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10401:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10412:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10424:6:12",
														"type": ""
													}
												],
												"src": "10365:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10796:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10813:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10818:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10806:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10806:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10806:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10834:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10853:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10858:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10849:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10849:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10834:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10768:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10773:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10784:11:12",
														"type": ""
													}
												],
												"src": "10700:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10981:60:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11003:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11011:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10999:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10999:14:12"
																	},
																	{
																		"hexValue": "47616d6520496e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11015:18:12",
																		"type": "",
																		"value": "Game Initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10992:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10992:42:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10992:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10973:6:12",
														"type": ""
													}
												],
												"src": "10875:166:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11193:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11203:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11269:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11274:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11210:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11210:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11203:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11375:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7",
																	"nodeType": "YulIdentifier",
																	"src": "11286:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11286:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11286:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11388:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11399:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11404:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11395:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11395:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11388:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11181:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11189:3:12",
														"type": ""
													}
												],
												"src": "11047:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11590:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11600:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11612:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11623:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11608:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11608:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11600:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11647:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11658:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11643:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11643:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11666:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11672:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11662:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11662:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11636:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11636:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11636:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11692:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11826:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11700:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11700:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11692:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11570:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11585:4:12",
														"type": ""
													}
												],
												"src": "11419:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11950:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11972:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11980:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11968:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11968:14:12"
																	},
																	{
																		"hexValue": "46696e6973686564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11984:10:12",
																		"type": "",
																		"value": "Finished"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11961:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11961:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11961:34:12"
														}
													]
												},
												"name": "store_literal_in_memory_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11942:6:12",
														"type": ""
													}
												],
												"src": "11844:158:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12154:219:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12164:73:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12230:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12235:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12171:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12171:66:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12164:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12335:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8",
																	"nodeType": "YulIdentifier",
																	"src": "12246:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12246:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12246:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12348:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12359:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12364:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12355:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12355:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12348:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12142:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12150:3:12",
														"type": ""
													}
												],
												"src": "12008:365:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12550:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12560:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12572:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12583:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12568:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12568:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12560:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12607:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12618:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12603:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12603:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12626:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12632:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12622:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12622:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12596:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12596:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12596:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12652:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12786:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12660:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12660:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12652:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12530:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12545:4:12",
														"type": ""
													}
												],
												"src": "12379:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12832:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12849:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12852:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12842:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12842:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12842:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12946:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12949:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12939:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12939:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12939:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12970:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12973:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12963:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12963:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12963:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12804:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13035:149:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13045:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13068:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13050:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13050:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13045:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13079:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13102:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13084:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13084:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13079:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13113:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13125:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13128:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13121:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13121:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13113:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13155:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13157:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13157:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13157:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13146:4:12"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13152:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13143:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13143:11:12"
															},
															"nodeType": "YulIf",
															"src": "13140:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13021:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13024:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13030:4:12",
														"type": ""
													}
												],
												"src": "12990:194:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13238:362:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13248:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13271:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13253:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13253:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13248:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13282:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13305:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13287:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13287:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13282:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13316:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13339:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13342:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13335:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13335:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "13320:11:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13353:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "13382:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13364:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13364:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13353:7:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13571:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13573:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13573:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13573:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13504:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13497:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13497:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13527:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "13534:7:12"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "13543:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "13530:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13530:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "13524:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13524:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "13477:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13477:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13457:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13457:113:12"
															},
															"nodeType": "YulIf",
															"src": "13454:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13221:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13224:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13230:7:12",
														"type": ""
													}
												],
												"src": "13190:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13634:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13651:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13654:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13644:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13644:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13644:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13748:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13751:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13741:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13741:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13741:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13772:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13775:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13765:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13765:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13765:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "13606:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13834:143:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13844:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13867:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13849:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13849:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13844:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13878:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13901:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13883:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13883:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13878:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13925:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13927:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13927:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13927:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13922:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13915:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13915:9:12"
															},
															"nodeType": "YulIf",
															"src": "13912:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13957:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13966:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13969:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13962:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13962:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13957:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13823:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13826:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13832:1:12",
														"type": ""
													}
												],
												"src": "13792:185:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14027:147:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14037:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14060:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14042:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14042:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14037:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14071:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14094:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14076:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14076:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14071:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14105:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14116:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14119:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14112:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14112:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14105:3:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14145:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14147:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14147:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14147:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14137:1:12"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "14140:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14134:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14134:10:12"
															},
															"nodeType": "YulIf",
															"src": "14131:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14014:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14017:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14023:3:12",
														"type": ""
													}
												],
												"src": "13983:191:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14286:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14308:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14316:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14304:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14304:14:12"
																	},
																	{
																		"hexValue": "726577617264202b20666565203d20746f74616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14320:22:12",
																		"type": "",
																		"value": "reward + fee = total"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14297:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14297:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14297:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_1d7746a167dffffe1eb54a58f0c273bed6be0e41a9a645fd32d7ecbd7a4b280e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14278:6:12",
														"type": ""
													}
												],
												"src": "14180:170:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14502:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14512:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14578:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14583:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14519:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14519:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14512:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14684:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1d7746a167dffffe1eb54a58f0c273bed6be0e41a9a645fd32d7ecbd7a4b280e",
																	"nodeType": "YulIdentifier",
																	"src": "14595:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14595:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14595:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14697:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14708:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14713:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14704:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14704:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14697:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1d7746a167dffffe1eb54a58f0c273bed6be0e41a9a645fd32d7ecbd7a4b280e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14490:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14498:3:12",
														"type": ""
													}
												],
												"src": "14356:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14899:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14909:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14921:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14932:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14917:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14917:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14909:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14956:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14967:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14952:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14952:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14975:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14981:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14971:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14971:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14945:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14945:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14945:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15001:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15135:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1d7746a167dffffe1eb54a58f0c273bed6be0e41a9a645fd32d7ecbd7a4b280e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15009:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15009:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15001:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d7746a167dffffe1eb54a58f0c273bed6be0e41a9a645fd32d7ecbd7a4b280e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14879:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14894:4:12",
														"type": ""
													}
												],
												"src": "14728:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15259:56:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15281:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15289:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15277:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15277:14:12"
																	},
																	{
																		"hexValue": "616c6c20706f736974697665",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15293:14:12",
																		"type": "",
																		"value": "all positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15270:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15270:38:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15270:38:12"
														}
													]
												},
												"name": "store_literal_in_memory_9b7f5333fcf849000ddaf31926abc3e2b6cbe5b6f210af0090bd9302a8e9fa97",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15251:6:12",
														"type": ""
													}
												],
												"src": "15153:162:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15467:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15477:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15543:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15548:2:12",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15484:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15484:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15477:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15649:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9b7f5333fcf849000ddaf31926abc3e2b6cbe5b6f210af0090bd9302a8e9fa97",
																	"nodeType": "YulIdentifier",
																	"src": "15560:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15560:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15560:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15662:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15673:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15678:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15669:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15669:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15662:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9b7f5333fcf849000ddaf31926abc3e2b6cbe5b6f210af0090bd9302a8e9fa97_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15455:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15463:3:12",
														"type": ""
													}
												],
												"src": "15321:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15864:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15874:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15886:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15897:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15882:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15882:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15874:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15921:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15932:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15917:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15917:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15940:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15946:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15936:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15936:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15910:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15910:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15910:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15966:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16100:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9b7f5333fcf849000ddaf31926abc3e2b6cbe5b6f210af0090bd9302a8e9fa97_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15974:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15974:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15966:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b7f5333fcf849000ddaf31926abc3e2b6cbe5b6f210af0090bd9302a8e9fa97__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15844:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15859:4:12",
														"type": ""
													}
												],
												"src": "15693:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16244:206:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16254:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16266:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16277:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16262:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16262:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16254:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16334:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16347:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16358:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16343:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16343:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16290:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16290:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16290:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16415:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16428:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16439:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16424:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16424:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16371:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16371:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16371:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16208:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16220:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16228:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16239:4:12",
														"type": ""
													}
												],
												"src": "16118:332:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16496:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16550:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16559:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16562:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16552:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16552:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16552:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16519:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16541:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "16526:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16526:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16516:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16516:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16509:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16509:40:12"
															},
															"nodeType": "YulIf",
															"src": "16506:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16489:5:12",
														"type": ""
													}
												],
												"src": "16456:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16638:77:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16648:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16663:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16657:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16657:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16648:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16703:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "16679:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16679:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16679:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16616:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16624:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16632:5:12",
														"type": ""
													}
												],
												"src": "16578:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16795:271:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16841:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16843:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16843:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16843:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16816:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16825:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16812:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16812:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16837:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16808:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16808:32:12"
															},
															"nodeType": "YulIf",
															"src": "16805:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "16934:125:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16949:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16963:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16953:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16978:71:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17021:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17032:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17017:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17017:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17041:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "16988:28:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16988:61:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16978:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16765:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16776:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16788:6:12",
														"type": ""
													}
												],
												"src": "16721:345:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17178:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17200:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17208:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17196:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17196:14:12"
																	},
																	{
																		"hexValue": "5265776172642073686f756c642073756363657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17212:23:12",
																		"type": "",
																		"value": "Reward should success"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17189:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17189:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17189:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_278731ee9f545fa99055837db85c213f43f50f6dcdfa192dd137870e8447fbe8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17170:6:12",
														"type": ""
													}
												],
												"src": "17072:171:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17395:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17405:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17471:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17476:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17412:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17412:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17405:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17577:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_278731ee9f545fa99055837db85c213f43f50f6dcdfa192dd137870e8447fbe8",
																	"nodeType": "YulIdentifier",
																	"src": "17488:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17488:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17488:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17590:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17601:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17606:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17597:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17597:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17590:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_278731ee9f545fa99055837db85c213f43f50f6dcdfa192dd137870e8447fbe8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17383:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17391:3:12",
														"type": ""
													}
												],
												"src": "17249:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17792:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17802:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17814:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17825:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17810:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17810:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17802:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17849:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17860:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17845:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17845:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17868:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17874:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17864:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17864:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17838:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17838:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17838:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17894:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18028:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_278731ee9f545fa99055837db85c213f43f50f6dcdfa192dd137870e8447fbe8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17902:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17902:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17894:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_278731ee9f545fa99055837db85c213f43f50f6dcdfa192dd137870e8447fbe8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17772:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17787:4:12",
														"type": ""
													}
												],
												"src": "17621:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18200:288:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18210:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18222:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18233:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18218:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18218:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18210:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18290:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18303:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18314:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18299:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18299:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18246:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18246:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18246:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18371:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18384:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18395:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18380:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18380:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18327:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18327:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18327:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18453:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18466:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18477:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18462:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18462:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18409:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18409:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18409:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18156:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18168:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18176:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18184:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18195:4:12",
														"type": ""
													}
												],
												"src": "18046:442:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18600:128:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18622:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18630:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18618:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18618:14:12"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18634:34:12",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18611:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18611:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18611:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18690:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18698:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18686:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18686:15:12"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18703:17:12",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18679:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18679:42:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18679:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18592:6:12",
														"type": ""
													}
												],
												"src": "18494:234:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18880:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18890:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18956:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18961:2:12",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18897:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18897:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18890:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19062:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "18973:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18973:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18973:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19075:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19086:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19091:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19082:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19082:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19075:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18868:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18876:3:12",
														"type": ""
													}
												],
												"src": "18734:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19277:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19287:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19299:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19310:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19295:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19295:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19287:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19334:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19345:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19330:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19330:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19353:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19359:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19349:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19349:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19323:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19323:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19323:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19379:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19513:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19387:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19387:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19379:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19257:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19272:4:12",
														"type": ""
													}
												],
												"src": "19106:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19594:80:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19604:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19619:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19613:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19613:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19604:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19662:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19635:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19635:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19635:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19572:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19580:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19588:5:12",
														"type": ""
													}
												],
												"src": "19531:143:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19757:274:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19803:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19805:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19805:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19805:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19778:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19787:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19774:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19774:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19799:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19770:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19770:32:12"
															},
															"nodeType": "YulIf",
															"src": "19767:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "19896:128:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19911:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19925:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19915:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19940:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19986:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19997:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19982:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19982:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20006:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "19950:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19950:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19940:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19727:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19738:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19750:6:12",
														"type": ""
													}
												],
												"src": "19680:351:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20143:58:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20165:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20173:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20161:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20161:14:12"
																	},
																	{
																		"hexValue": "456e6f7567682062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20177:16:12",
																		"type": "",
																		"value": "Enough balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20154:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20154:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20154:40:12"
														}
													]
												},
												"name": "store_literal_in_memory_579284958e00ccca8fac473d6ff2f4e7d7549c4c48cc4d5894e132ebb3661612",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20135:6:12",
														"type": ""
													}
												],
												"src": "20037:164:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20353:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20363:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20429:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20434:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20370:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20370:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20363:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20535:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_579284958e00ccca8fac473d6ff2f4e7d7549c4c48cc4d5894e132ebb3661612",
																	"nodeType": "YulIdentifier",
																	"src": "20446:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20446:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20446:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20548:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20559:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20564:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20555:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20555:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20548:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_579284958e00ccca8fac473d6ff2f4e7d7549c4c48cc4d5894e132ebb3661612_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20341:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20349:3:12",
														"type": ""
													}
												],
												"src": "20207:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20750:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20760:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20772:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20783:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20768:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20768:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20760:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20807:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20818:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20803:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20803:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20826:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20832:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20822:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20822:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20796:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20796:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20796:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20852:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20986:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_579284958e00ccca8fac473d6ff2f4e7d7549c4c48cc4d5894e132ebb3661612_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20860:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20860:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20852:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_579284958e00ccca8fac473d6ff2f4e7d7549c4c48cc4d5894e132ebb3661612__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20730:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20745:4:12",
														"type": ""
													}
												],
												"src": "20579:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21158:288:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21168:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21180:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21191:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21176:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21176:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21168:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21248:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21261:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21272:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21257:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21257:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21204:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21204:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21204:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21329:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21342:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21353:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21338:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21338:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21285:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21285:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21285:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21411:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21424:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21435:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21420:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21420:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21367:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21367:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21367:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21114:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21126:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21134:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21142:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21153:4:12",
														"type": ""
													}
												],
												"src": "21004:442:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21558:67:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21580:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21588:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21576:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21576:14:12"
																	},
																	{
																		"hexValue": "5472616e736665722073686f756c642073756363657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21592:25:12",
																		"type": "",
																		"value": "Transfer should success"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21569:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21569:49:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21569:49:12"
														}
													]
												},
												"name": "store_literal_in_memory_32f15a745716df67b5b6c00ce98db178058e0917cf89b8509cdd41355d02fd89",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21550:6:12",
														"type": ""
													}
												],
												"src": "21452:173:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21777:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21787:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21853:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21858:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21794:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21794:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21787:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21959:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_32f15a745716df67b5b6c00ce98db178058e0917cf89b8509cdd41355d02fd89",
																	"nodeType": "YulIdentifier",
																	"src": "21870:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21870:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21870:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21972:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21983:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21988:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21979:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21979:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21972:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_32f15a745716df67b5b6c00ce98db178058e0917cf89b8509cdd41355d02fd89_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21765:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21773:3:12",
														"type": ""
													}
												],
												"src": "21631:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22174:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22184:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22196:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22207:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22192:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22192:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22184:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22231:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22242:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22227:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22227:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22250:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22256:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22246:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22246:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22220:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22220:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22220:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22276:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22410:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_32f15a745716df67b5b6c00ce98db178058e0917cf89b8509cdd41355d02fd89_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22284:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22284:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22276:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_32f15a745716df67b5b6c00ce98db178058e0917cf89b8509cdd41355d02fd89__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22154:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22169:4:12",
														"type": ""
													}
												],
												"src": "22003:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22534:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22556:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22564:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22552:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22552:14:12"
																	},
																	{
																		"hexValue": "4e6f20666565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22568:8:12",
																		"type": "",
																		"value": "No fee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22545:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22545:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22545:32:12"
														}
													]
												},
												"name": "store_literal_in_memory_1b5b902ea75834fec35d744e6d2c06ffa21968444153844c582889f3d8e1d6f9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22526:6:12",
														"type": ""
													}
												],
												"src": "22428:156:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22736:219:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22746:73:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22812:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22817:1:12",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22753:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22753:66:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22746:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22917:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b5b902ea75834fec35d744e6d2c06ffa21968444153844c582889f3d8e1d6f9",
																	"nodeType": "YulIdentifier",
																	"src": "22828:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22828:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22828:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22930:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22941:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22946:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22937:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22937:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22930:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b5b902ea75834fec35d744e6d2c06ffa21968444153844c582889f3d8e1d6f9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22724:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22732:3:12",
														"type": ""
													}
												],
												"src": "22590:365:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23132:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23142:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23154:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23165:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23150:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23150:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23142:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23189:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23200:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23185:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23185:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23208:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23214:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23204:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23204:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23178:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23178:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23178:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23234:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23368:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b5b902ea75834fec35d744e6d2c06ffa21968444153844c582889f3d8e1d6f9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23242:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23242:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23234:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b5b902ea75834fec35d744e6d2c06ffa21968444153844c582889f3d8e1d6f9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23112:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23127:4:12",
														"type": ""
													}
												],
												"src": "22961:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23492:56:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23514:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23522:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23510:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23510:14:12"
																	},
																	{
																		"hexValue": "7472616e7366657220666565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23526:14:12",
																		"type": "",
																		"value": "transfer fee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23503:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23503:38:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23503:38:12"
														}
													]
												},
												"name": "store_literal_in_memory_62b03ec8189bc1df71a370bda03dede89d84796e8b66b7e85e784c8b26377c33",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23484:6:12",
														"type": ""
													}
												],
												"src": "23386:162:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23700:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23710:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23776:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23781:2:12",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23717:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23717:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23710:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23882:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_62b03ec8189bc1df71a370bda03dede89d84796e8b66b7e85e784c8b26377c33",
																	"nodeType": "YulIdentifier",
																	"src": "23793:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23793:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23793:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23895:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23906:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23911:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23902:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23902:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23895:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_62b03ec8189bc1df71a370bda03dede89d84796e8b66b7e85e784c8b26377c33_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23688:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23696:3:12",
														"type": ""
													}
												],
												"src": "23554:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24097:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24107:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24119:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24130:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24115:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24115:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24107:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24154:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24165:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24150:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24150:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24173:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24179:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24169:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24169:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24143:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24143:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24143:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24199:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24333:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_62b03ec8189bc1df71a370bda03dede89d84796e8b66b7e85e784c8b26377c33_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24207:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24207:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24199:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62b03ec8189bc1df71a370bda03dede89d84796e8b66b7e85e784c8b26377c33__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24077:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24092:4:12",
														"type": ""
													}
												],
												"src": "23926:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24457:55:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24479:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24487:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24475:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24475:14:12"
																	},
																	{
																		"hexValue": "47616d6520657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24491:13:12",
																		"type": "",
																		"value": "Game exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24468:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24468:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24468:37:12"
														}
													]
												},
												"name": "store_literal_in_memory_23c3753c0f6fa973971f222b3e4423b5d431231c5fc06f10050747681f083f9f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24449:6:12",
														"type": ""
													}
												],
												"src": "24351:161:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24664:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24674:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24740:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24745:2:12",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24681:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24681:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24674:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24846:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_23c3753c0f6fa973971f222b3e4423b5d431231c5fc06f10050747681f083f9f",
																	"nodeType": "YulIdentifier",
																	"src": "24757:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24757:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24757:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24859:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24870:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24875:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24866:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24866:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24859:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_23c3753c0f6fa973971f222b3e4423b5d431231c5fc06f10050747681f083f9f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24660:3:12",
														"type": ""
													}
												],
												"src": "24518:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25061:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25071:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25083:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25094:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25079:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25079:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25071:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25118:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25129:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25114:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25114:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25137:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25143:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25133:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25133:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25107:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25107:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25107:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25163:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25297:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_23c3753c0f6fa973971f222b3e4423b5d431231c5fc06f10050747681f083f9f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25171:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25171:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25163:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23c3753c0f6fa973971f222b3e4423b5d431231c5fc06f10050747681f083f9f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25041:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25056:4:12",
														"type": ""
													}
												],
												"src": "24890:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25429:34:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25439:18:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "25454:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25439:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25401:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25406:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "25417:11:12",
														"type": ""
													}
												],
												"src": "25315:148:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25575:67:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25597:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25605:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25593:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25593:14:12"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25609:25:12",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25586:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25586:49:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25586:49:12"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25567:6:12",
														"type": ""
													}
												],
												"src": "25469:173:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25812:238:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25822:92:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25906:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25911:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25829:76:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25829:85:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25822:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26012:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "25923:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25923:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25923:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26025:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26036:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26041:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26032:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26032:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26025:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25800:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25808:3:12",
														"type": ""
													}
												],
												"src": "25648:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26115:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26126:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26142:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26136:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26136:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "26126:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26098:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26108:6:12",
														"type": ""
													}
												],
												"src": "26056:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26223:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26233:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "26242:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "26237:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26302:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "26327:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "26332:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "26323:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26323:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "26346:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "26351:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "26342:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26342:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "26336:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26336:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26316:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26316:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26316:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "26263:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26266:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "26260:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26260:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "26274:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "26276:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "26285:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26288:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "26281:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26281:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "26276:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "26256:3:12",
																"statements": []
															},
															"src": "26252:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "26385:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26390:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26381:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26381:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26399:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26374:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26374:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26374:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "26205:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "26210:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26215:6:12",
														"type": ""
													}
												],
												"src": "26161:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26523:280:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26533:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26580:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26547:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26547:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26537:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26595:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26679:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26684:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26602:76:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26602:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26595:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26739:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26746:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26735:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26735:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26753:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26758:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "26700:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26700:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26700:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26774:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26785:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26790:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26781:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26781:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26774:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26504:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26511:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26519:3:12",
														"type": ""
													}
												],
												"src": "26413:390:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26915:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26937:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26945:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26933:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26933:14:12"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26949:19:12",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26926:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26926:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26926:43:12"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26907:6:12",
														"type": ""
													}
												],
												"src": "26809:167:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27146:238:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27156:92:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27240:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27245:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27163:76:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27163:85:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27156:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27346:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "27257:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27257:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27257:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27359:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27370:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27375:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27366:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27366:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27359:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27134:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27142:3:12",
														"type": ""
													}
												],
												"src": "26982:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27776:581:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27787:155:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27938:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27794:142:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27794:148:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27787:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27952:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28041:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28050:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27959:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27959:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27952:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28064:155:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28215:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28071:142:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28071:148:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28064:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28229:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "28318:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28327:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28236:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28236:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28229:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28341:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "28348:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28341:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27747:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27753:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27761:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27772:3:12",
														"type": ""
													}
												],
												"src": "27390:967:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28411:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28421:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28439:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28446:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28435:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28435:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28455:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "28451:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28451:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "28431:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28431:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "28421:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28394:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "28404:6:12",
														"type": ""
													}
												],
												"src": "28363:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28563:285:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28573:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28620:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "28587:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28587:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "28577:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28635:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28701:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28706:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28642:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28642:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28635:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28761:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28768:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28757:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28757:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28775:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28780:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "28722:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28722:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28722:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28796:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28807:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "28834:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "28812:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28812:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28803:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28803:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28796:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28544:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28551:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28559:3:12",
														"type": ""
													}
												],
												"src": "28471:377:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28972:195:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28982:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28994:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29005:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28990:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28990:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28982:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29029:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29040:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29025:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29025:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29048:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29054:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29044:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29044:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29018:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29018:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29018:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29074:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "29146:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29155:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29082:63:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29082:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29074:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28944:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28956:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28967:4:12",
														"type": ""
													}
												],
												"src": "28854:313:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29201:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29218:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29221:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29211:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29211:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29211:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29315:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29318:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29308:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29308:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29308:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29339:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29342:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29332:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29332:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29332:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "29173:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29387:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29404:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29407:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29397:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29397:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29397:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29501:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29504:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29494:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29494:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29494:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29525:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29528:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29518:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29518:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29518:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "29359:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29588:128:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29598:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29625:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29607:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29607:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "29598:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29659:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "29661:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29661:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29661:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29646:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29653:4:12",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "29643:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29643:15:12"
															},
															"nodeType": "YulIf",
															"src": "29640:41:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29690:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29701:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29708:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "29697:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29697:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "29690:3:12"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29574:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "29584:3:12",
														"type": ""
													}
												],
												"src": "29545:171:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29828:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29850:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29858:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29846:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29846:14:12"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29862:34:12",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29839:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29839:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29839:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29820:6:12",
														"type": ""
													}
												],
												"src": "29722:182:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30056:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30066:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30132:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30137:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30073:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30073:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "30066:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30238:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "30149:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30149:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30149:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30251:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30262:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30267:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30258:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30258:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30251:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30044:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30052:3:12",
														"type": ""
													}
												],
												"src": "29910:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30453:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30463:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30475:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30486:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30471:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30471:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30463:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30510:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30521:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30506:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30506:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30529:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30535:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30525:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30525:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30499:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30499:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30499:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30555:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30689:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30563:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30563:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30555:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30433:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30448:4:12",
														"type": ""
													}
												],
												"src": "30282:419:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256_t_address__to_t_bool_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game Initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Finished\")\n\n    }\n\n    function abi_encode_t_stringliteral_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_1d7746a167dffffe1eb54a58f0c273bed6be0e41a9a645fd32d7ecbd7a4b280e(memPtr) {\n\n        mstore(add(memPtr, 0), \"reward + fee = total\")\n\n    }\n\n    function abi_encode_t_stringliteral_1d7746a167dffffe1eb54a58f0c273bed6be0e41a9a645fd32d7ecbd7a4b280e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_1d7746a167dffffe1eb54a58f0c273bed6be0e41a9a645fd32d7ecbd7a4b280e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1d7746a167dffffe1eb54a58f0c273bed6be0e41a9a645fd32d7ecbd7a4b280e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1d7746a167dffffe1eb54a58f0c273bed6be0e41a9a645fd32d7ecbd7a4b280e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9b7f5333fcf849000ddaf31926abc3e2b6cbe5b6f210af0090bd9302a8e9fa97(memPtr) {\n\n        mstore(add(memPtr, 0), \"all positive\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b7f5333fcf849000ddaf31926abc3e2b6cbe5b6f210af0090bd9302a8e9fa97_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_9b7f5333fcf849000ddaf31926abc3e2b6cbe5b6f210af0090bd9302a8e9fa97(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b7f5333fcf849000ddaf31926abc3e2b6cbe5b6f210af0090bd9302a8e9fa97__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b7f5333fcf849000ddaf31926abc3e2b6cbe5b6f210af0090bd9302a8e9fa97_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_278731ee9f545fa99055837db85c213f43f50f6dcdfa192dd137870e8447fbe8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward should success\")\n\n    }\n\n    function abi_encode_t_stringliteral_278731ee9f545fa99055837db85c213f43f50f6dcdfa192dd137870e8447fbe8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_278731ee9f545fa99055837db85c213f43f50f6dcdfa192dd137870e8447fbe8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_278731ee9f545fa99055837db85c213f43f50f6dcdfa192dd137870e8447fbe8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_278731ee9f545fa99055837db85c213f43f50f6dcdfa192dd137870e8447fbe8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_579284958e00ccca8fac473d6ff2f4e7d7549c4c48cc4d5894e132ebb3661612(memPtr) {\n\n        mstore(add(memPtr, 0), \"Enough balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_579284958e00ccca8fac473d6ff2f4e7d7549c4c48cc4d5894e132ebb3661612_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_579284958e00ccca8fac473d6ff2f4e7d7549c4c48cc4d5894e132ebb3661612(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_579284958e00ccca8fac473d6ff2f4e7d7549c4c48cc4d5894e132ebb3661612__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_579284958e00ccca8fac473d6ff2f4e7d7549c4c48cc4d5894e132ebb3661612_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_32f15a745716df67b5b6c00ce98db178058e0917cf89b8509cdd41355d02fd89(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer should success\")\n\n    }\n\n    function abi_encode_t_stringliteral_32f15a745716df67b5b6c00ce98db178058e0917cf89b8509cdd41355d02fd89_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_32f15a745716df67b5b6c00ce98db178058e0917cf89b8509cdd41355d02fd89(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32f15a745716df67b5b6c00ce98db178058e0917cf89b8509cdd41355d02fd89__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32f15a745716df67b5b6c00ce98db178058e0917cf89b8509cdd41355d02fd89_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1b5b902ea75834fec35d744e6d2c06ffa21968444153844c582889f3d8e1d6f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"No fee\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b5b902ea75834fec35d744e6d2c06ffa21968444153844c582889f3d8e1d6f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n        store_literal_in_memory_1b5b902ea75834fec35d744e6d2c06ffa21968444153844c582889f3d8e1d6f9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b5b902ea75834fec35d744e6d2c06ffa21968444153844c582889f3d8e1d6f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b5b902ea75834fec35d744e6d2c06ffa21968444153844c582889f3d8e1d6f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_62b03ec8189bc1df71a370bda03dede89d84796e8b66b7e85e784c8b26377c33(memPtr) {\n\n        mstore(add(memPtr, 0), \"transfer fee\")\n\n    }\n\n    function abi_encode_t_stringliteral_62b03ec8189bc1df71a370bda03dede89d84796e8b66b7e85e784c8b26377c33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_62b03ec8189bc1df71a370bda03dede89d84796e8b66b7e85e784c8b26377c33(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_62b03ec8189bc1df71a370bda03dede89d84796e8b66b7e85e784c8b26377c33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_62b03ec8189bc1df71a370bda03dede89d84796e8b66b7e85e784c8b26377c33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_23c3753c0f6fa973971f222b3e4423b5d431231c5fc06f10050747681f083f9f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game exists\")\n\n    }\n\n    function abi_encode_t_stringliteral_23c3753c0f6fa973971f222b3e4423b5d431231c5fc06f10050747681f083f9f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_23c3753c0f6fa973971f222b3e4423b5d431231c5fc06f10050747681f083f9f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_23c3753c0f6fa973971f222b3e4423b5d431231c5fc06f10050747681f083f9f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_23c3753c0f6fa973971f222b3e4423b5d431231c5fc06f10050747681f083f9f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101375760003560e01c80636ffcc719116100b8578063a217fddf1161007c578063a217fddf1461038c578063ce33bd74146103aa578063d547741f146103da578063d82c13f0146103f6578063e5ed1d5914610426578063ee9b80a41461045657610137565b80636ffcc719146102d25780637fd6f15c14610302578063853828b61461032057806391d148541461033e5780639bc01b361461036e57610137565b80632f2ff15d116100ff5780632f2ff15d1461022e57806334fcc3e71461024a57806336568abe1461027a57806337bfc1ef1461029657806355a373d6146102b457610137565b806301ffc9a71461013c578063117a5b901461016c57806316b169c41461019e578063248a9ca3146101ce5780632c32b187146101fe575b600080fd5b61015660048036038101906101519190611aad565b610486565b6040516101639190611af5565b60405180910390f35b61018660048036038101906101819190611b46565b610500565b60405161019593929190611bc3565b60405180910390f35b6101b860048036038101906101b39190611b46565b610557565b6040516101c59190611cb8565b60405180910390f35b6101e860048036038101906101e39190611d10565b61065e565b6040516101f59190611d4c565b60405180910390f35b61021860048036038101906102139190611d93565b61067d565b6040516102259190611dd3565b60405180910390f35b61024860048036038101906102439190611dee565b610a65565b005b610264600480360381019061025f9190611d93565b610a86565b6040516102719190611dd3565b60405180910390f35b610294600480360381019061028f9190611dee565b610b47565b005b61029e610bca565b6040516102ab9190611dd3565b60405180910390f35b6102bc610bd0565b6040516102c99190611e2e565b60405180910390f35b6102ec60048036038101906102e79190611e49565b610bf6565b6040516102f99190611af5565b60405180910390f35b61030a61106c565b6040516103179190611dd3565b60405180910390f35b610328611072565b6040516103359190611dd3565b60405180910390f35b61035860048036038101906103539190611dee565b6111f1565b6040516103659190611af5565b60405180910390f35b61037661125b565b6040516103839190611f47565b60405180910390f35b6103946112b3565b6040516103a19190611d4c565b60405180910390f35b6103c460048036038101906103bf9190611b46565b6112ba565b6040516103d19190611dd3565b60405180910390f35b6103f460048036038101906103ef9190611dee565b61137a565b005b610410600480360381019061040b9190611b46565b61139b565b60405161041d9190611dd3565b60405180910390f35b610440600480360381019061043b9190611b46565b6113bf565b60405161044d9190611af5565b60405180910390f35b610470600480360381019061046b9190611f69565b6114c1565b60405161047d9190611af5565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104f957506104f88261151b565b5b9050919050565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060020154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60606001600083815260200190815260200160002060000160009054906101000a900460ff166105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b390611ff3565b60405180910390fd5b6001600083815260200190815260200160002060030180548060200260200160405190810160405280929190818152602001828054801561065257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610608575b50505050509050919050565b6000806000838152602001908152602001600020600101549050919050565b60008060001b61068c81611585565b6001600085815260200190815260200160002060000160009054906101000a900460ff166106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e690611ff3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600086815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078b9061205f565b60405180910390fd5b826001600086815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060646001600087815260200190815260200160002060020154600454606461081391906120ae565b61081d91906120e2565b6108279190612153565b9050600081600160008881526020019081526020016000206002015461084d91906120ae565b9050600160008781526020019081526020016000206002015482826108729190612184565b146108b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a990612204565b60405180910390fd5b600082101580156108c4575060008110155b80156108e757506000600160008881526020019081526020016000206002015410155b610926576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091d90612270565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86846040518363ffffffff1660e01b8152600401610983929190612290565b6020604051808303816000875af11580156109a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c691906122e5565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc9061235e565b60405180910390fd5b8060056000828254610a179190612184565b925050819055507f3b6f6a175407b0e278b9798f8be45bcc2cdba01a995bf768f528b457d7e27e85858383604051610a519392919061237e565b60405180910390a181935050505092915050565b610a6e8261065e565b610a7781611585565b610a818383611599565b505050565b60006001600084815260200190815260200160002060000160009054906101000a900460ff16610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae290611ff3565b60405180910390fd5b6001600084815260200190815260200160002060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610b4f611679565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb390612427565b60405180910390fd5b610bc68282611681565b5050565b60055481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001600084815260200190815260200160002060000160009054906101000a900460ff16610c5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5290611ff3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600085815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf79061205f565b60405180910390fd5b81600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610d5c9190611e2e565b602060405180830381865afa158015610d79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9d919061245c565b1015610dde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd5906124d5565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610e3d939291906124f5565b6020604051808303816000875af1158015610e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8091906122e5565b610ebf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb690612578565b60405180910390fd5b60006001600085815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610f925760016000848152602001908152602001600020600301339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b816001600085815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ff59190612184565b92505081905550816001600085815260200190815260200160002060020160008282546110229190612184565b925050819055507ffb4c42ca2d93f0a673c2125aaa3c7b3fbeee9533e34b1f2c0f8f5c4d4d8bf106338360405161105a929190612290565b60405180910390a16001905092915050565b60045481565b60008060001b61108181611585565b6000600554116110c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bd906125e4565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336005546040518363ffffffff1660e01b8152600401611125929190612290565b6020604051808303816000875af1158015611144573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116891906122e5565b6111a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119e90612650565b60405180910390fd5b600554915060006005819055507f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433836040516111e5929190612290565b60405180910390a15090565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060028054806020026020016040519081016040528092919081815260200182805480156112a957602002820191906000526020600020905b815481526020019060010190808311611295575b5050505050905090565b6000801b81565b60006001600083815260200190815260200160002060000160009054906101000a900460ff1661131f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131690611ff3565b60405180910390fd5b6001600083815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6113838261065e565b61138c81611585565b6113968383611681565b505050565b600281815481106113ab57600080fd5b906000526020600020016000915090505481565b60008015156001600084815260200190815260200160002060000160009054906101000a900460ff1615151461142a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611421906126bc565b60405180910390fd5b600180600084815260200190815260200160002060000160006101000a81548160ff02191690831515021790555060028290806001815401808255809150506001900390600052602060002001600090919091909150557fb5e8a4470f7bcac7f2c0f3e23471bd7016a9f6f049884cd27dfa8960f361287b826040516114b09190611dd3565b60405180910390a160019050919050565b60008060001b6114d081611585565b82600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61159681611591611679565b611762565b50565b6115a382826111f1565b61167557600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061161a611679565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b61168b82826111f1565b1561175e57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611703611679565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b61176c82826111f1565b6117e357611779816117e7565b6117878360001c6020611814565b6040516020016117989291906127e5565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117da9190612869565b60405180910390fd5b5050565b606061180d8273ffffffffffffffffffffffffffffffffffffffff16601460ff16611814565b9050919050565b60606000600283600261182791906120e2565b6118319190612184565b67ffffffffffffffff81111561184a5761184961288b565b5b6040519080825280601f01601f19166020018201604052801561187c5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106118b4576118b36128ba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611918576119176128ba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261195891906120e2565b6119629190612184565b90505b6001811115611a02577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106119a4576119a36128ba565b5b1a60f81b8282815181106119bb576119ba6128ba565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806119fb906128e9565b9050611965565b5060008414611a46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3d9061295e565b60405180910390fd5b8091505092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a8a81611a55565b8114611a9557600080fd5b50565b600081359050611aa781611a81565b92915050565b600060208284031215611ac357611ac2611a50565b5b6000611ad184828501611a98565b91505092915050565b60008115159050919050565b611aef81611ada565b82525050565b6000602082019050611b0a6000830184611ae6565b92915050565b6000819050919050565b611b2381611b10565b8114611b2e57600080fd5b50565b600081359050611b4081611b1a565b92915050565b600060208284031215611b5c57611b5b611a50565b5b6000611b6a84828501611b31565b91505092915050565b611b7c81611b10565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bad82611b82565b9050919050565b611bbd81611ba2565b82525050565b6000606082019050611bd86000830186611ae6565b611be56020830185611b73565b611bf26040830184611bb4565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611c2f81611ba2565b82525050565b6000611c418383611c26565b60208301905092915050565b6000602082019050919050565b6000611c6582611bfa565b611c6f8185611c05565b9350611c7a83611c16565b8060005b83811015611cab578151611c928882611c35565b9750611c9d83611c4d565b925050600181019050611c7e565b5085935050505092915050565b60006020820190508181036000830152611cd28184611c5a565b905092915050565b6000819050919050565b611ced81611cda565b8114611cf857600080fd5b50565b600081359050611d0a81611ce4565b92915050565b600060208284031215611d2657611d25611a50565b5b6000611d3484828501611cfb565b91505092915050565b611d4681611cda565b82525050565b6000602082019050611d616000830184611d3d565b92915050565b611d7081611ba2565b8114611d7b57600080fd5b50565b600081359050611d8d81611d67565b92915050565b60008060408385031215611daa57611da9611a50565b5b6000611db885828601611b31565b9250506020611dc985828601611d7e565b9150509250929050565b6000602082019050611de86000830184611b73565b92915050565b60008060408385031215611e0557611e04611a50565b5b6000611e1385828601611cfb565b9250506020611e2485828601611d7e565b9150509250929050565b6000602082019050611e436000830184611bb4565b92915050565b60008060408385031215611e6057611e5f611a50565b5b6000611e6e85828601611b31565b9250506020611e7f85828601611b31565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611ebe81611b10565b82525050565b6000611ed08383611eb5565b60208301905092915050565b6000602082019050919050565b6000611ef482611e89565b611efe8185611e94565b9350611f0983611ea5565b8060005b83811015611f3a578151611f218882611ec4565b9750611f2c83611edc565b925050600181019050611f0d565b5085935050505092915050565b60006020820190508181036000830152611f618184611ee9565b905092915050565b600060208284031215611f7f57611f7e611a50565b5b6000611f8d84828501611d7e565b91505092915050565b600082825260208201905092915050565b7f47616d6520496e697469616c697a656400000000000000000000000000000000600082015250565b6000611fdd601083611f96565b9150611fe882611fa7565b602082019050919050565b6000602082019050818103600083015261200c81611fd0565b9050919050565b7f46696e6973686564000000000000000000000000000000000000000000000000600082015250565b6000612049600883611f96565b915061205482612013565b602082019050919050565b600060208201905081810360008301526120788161203c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120b982611b10565b91506120c483611b10565b92508282039050818111156120dc576120db61207f565b5b92915050565b60006120ed82611b10565b91506120f883611b10565b925082820261210681611b10565b9150828204841483151761211d5761211c61207f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061215e82611b10565b915061216983611b10565b92508261217957612178612124565b5b828204905092915050565b600061218f82611b10565b915061219a83611b10565b92508282019050808211156121b2576121b161207f565b5b92915050565b7f726577617264202b20666565203d20746f74616c000000000000000000000000600082015250565b60006121ee601483611f96565b91506121f9826121b8565b602082019050919050565b6000602082019050818103600083015261221d816121e1565b9050919050565b7f616c6c20706f7369746976650000000000000000000000000000000000000000600082015250565b600061225a600c83611f96565b915061226582612224565b602082019050919050565b600060208201905081810360008301526122898161224d565b9050919050565b60006040820190506122a56000830185611bb4565b6122b26020830184611b73565b9392505050565b6122c281611ada565b81146122cd57600080fd5b50565b6000815190506122df816122b9565b92915050565b6000602082840312156122fb576122fa611a50565b5b6000612309848285016122d0565b91505092915050565b7f5265776172642073686f756c6420737563636573730000000000000000000000600082015250565b6000612348601583611f96565b915061235382612312565b602082019050919050565b600060208201905081810360008301526123778161233b565b9050919050565b60006060820190506123936000830186611bb4565b6123a06020830185611b73565b6123ad6040830184611b73565b949350505050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000612411602f83611f96565b915061241c826123b5565b604082019050919050565b6000602082019050818103600083015261244081612404565b9050919050565b60008151905061245681611b1a565b92915050565b60006020828403121561247257612471611a50565b5b600061248084828501612447565b91505092915050565b7f456e6f7567682062616c616e6365000000000000000000000000000000000000600082015250565b60006124bf600e83611f96565b91506124ca82612489565b602082019050919050565b600060208201905081810360008301526124ee816124b2565b9050919050565b600060608201905061250a6000830186611bb4565b6125176020830185611bb4565b6125246040830184611b73565b949350505050565b7f5472616e736665722073686f756c642073756363657373000000000000000000600082015250565b6000612562601783611f96565b915061256d8261252c565b602082019050919050565b6000602082019050818103600083015261259181612555565b9050919050565b7f4e6f206665650000000000000000000000000000000000000000000000000000600082015250565b60006125ce600683611f96565b91506125d982612598565b602082019050919050565b600060208201905081810360008301526125fd816125c1565b9050919050565b7f7472616e73666572206665650000000000000000000000000000000000000000600082015250565b600061263a600c83611f96565b915061264582612604565b602082019050919050565b600060208201905081810360008301526126698161262d565b9050919050565b7f47616d6520657869737473000000000000000000000000000000000000000000600082015250565b60006126a6600b83611f96565b91506126b182612670565b602082019050919050565b600060208201905081810360008301526126d581612699565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b600061271d6017836126dc565b9150612728826126e7565b601782019050919050565b600081519050919050565b60005b8381101561275c578082015181840152602081019050612741565b60008484015250505050565b600061277382612733565b61277d81856126dc565b935061278d81856020860161273e565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006127cf6011836126dc565b91506127da82612799565b601182019050919050565b60006127f082612710565b91506127fc8285612768565b9150612807826127c2565b91506128138284612768565b91508190509392505050565b6000601f19601f8301169050919050565b600061283b82612733565b6128458185611f96565b935061285581856020860161273e565b61285e8161281f565b840191505092915050565b600060208201905081810360008301526128838184612830565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006128f482611b10565b9150600082036129075761290661207f565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000612948602083611f96565b915061295382612912565b602082019050919050565b600060208201905081810360008301526129778161293b565b905091905056fea264697066735822122041b6a348127c6714813c41f366c3695ad91cb6195fb1c0bdb3ddbcb468135ff264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FFCC719 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xCE33BD74 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xD82C13F0 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xE5ED1D59 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xEE9B80A4 EQ PUSH2 0x456 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x6FFCC719 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x7FD6F15C EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x9BC01B36 EQ PUSH2 0x36E JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x34FCC3E7 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x37BFC1EF EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x55A373D6 EQ PUSH2 0x2B4 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x117A5B90 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x16B169C4 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x2C32B187 EQ PUSH2 0x1FE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x67D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH2 0xA65 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29E PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH2 0x106C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH2 0x1072 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH2 0x11F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x376 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x1F47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x394 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH2 0x137A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x139B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x470 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4F9 JUMPI POP PUSH2 0x4F8 DUP3 PUSH2 0x151B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B3 SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x608 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SHL PUSH2 0x68C DUP2 PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E6 SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x794 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78B SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x4 SLOAD PUSH1 0x64 PUSH2 0x813 SWAP2 SWAP1 PUSH2 0x20AE JUMP JUMPDEST PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0x827 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x84D SWAP2 SWAP1 PUSH2 0x20AE JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 DUP3 PUSH2 0x872 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST EQ PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A9 SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x8C4 JUMPI POP PUSH1 0x0 DUP2 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x8E7 JUMPI POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD LT ISZERO JUMPDEST PUSH2 0x926 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91D SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x983 SWAP3 SWAP2 SWAP1 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0x22E5 JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x235E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA17 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x3B6F6A175407B0E278B9798F8BE45BCC2CDBA01A995BF768F528B457D7E27E85 DUP6 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA51 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x237E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA6E DUP3 PUSH2 0x65E JUMP JUMPDEST PUSH2 0xA77 DUP2 PUSH2 0x1585 JUMP JUMPDEST PUSH2 0xA81 DUP4 DUP4 PUSH2 0x1599 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB4F PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB3 SWAP1 PUSH2 0x2427 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBC6 DUP3 DUP3 PUSH2 0x1681 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC52 SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF7 SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5C SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD79 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD9D SWAP2 SWAP1 PUSH2 0x245C JUMP JUMPDEST LT ISZERO PUSH2 0xDDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD5 SWAP1 PUSH2 0x24D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE80 SWAP2 SWAP1 PUSH2 0x22E5 JUMP JUMPDEST PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB6 SWAP1 PUSH2 0x2578 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0xF92 JUMPI PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1022 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xFB4C42CA2D93F0A673C2125AAA3C7B3FBEEE9533E34B1F2C0F8F5C4D4D8BF106 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x105A SWAP3 SWAP2 SWAP1 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SHL PUSH2 0x1081 DUP2 PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD GT PUSH2 0x10C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BD SWAP1 PUSH2 0x25E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1125 SWAP3 SWAP2 SWAP1 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1144 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x22E5 JUMP JUMPDEST PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119E SWAP1 PUSH2 0x2650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD SWAP2 POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x11E5 SWAP3 SWAP2 SWAP1 PUSH2 0x2290 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x12A9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1295 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x131F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1316 SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1383 DUP3 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x138C DUP2 PUSH2 0x1585 JUMP JUMPDEST PUSH2 0x1396 DUP4 DUP4 PUSH2 0x1681 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x142A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1421 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH32 0xB5E8A4470F7BCAC7F2C0F3E23471BD7016A9F6F049884CD27DFA8960F361287B DUP3 PUSH1 0x40 MLOAD PUSH2 0x14B0 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SHL PUSH2 0x14D0 DUP2 PUSH2 0x1585 JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1596 DUP2 PUSH2 0x1591 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x1762 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x15A3 DUP3 DUP3 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x1675 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x161A PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x168B DUP3 DUP3 PUSH2 0x11F1 JUMP JUMPDEST ISZERO PUSH2 0x175E JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1703 PUSH2 0x1679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x176C DUP3 DUP3 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x17E3 JUMPI PUSH2 0x1779 DUP2 PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0x1787 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1798 SWAP3 SWAP2 SWAP1 PUSH2 0x27E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17DA SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x180D DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x1814 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x1827 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0x1831 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x184A JUMPI PUSH2 0x1849 PUSH2 0x288B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x187C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x18B4 JUMPI PUSH2 0x18B3 PUSH2 0x28BA JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1918 JUMPI PUSH2 0x1917 PUSH2 0x28BA JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1958 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0x1962 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A02 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x19A4 JUMPI PUSH2 0x19A3 PUSH2 0x28BA JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x19BB JUMPI PUSH2 0x19BA PUSH2 0x28BA JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x19FB SWAP1 PUSH2 0x28E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1965 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1A46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3D SWAP1 PUSH2 0x295E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8A DUP2 PUSH2 0x1A55 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AA7 DUP2 PUSH2 0x1A81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC3 JUMPI PUSH2 0x1AC2 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AD1 DUP5 DUP3 DUP6 ADD PUSH2 0x1A98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEF DUP2 PUSH2 0x1ADA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B23 DUP2 PUSH2 0x1B10 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B40 DUP2 PUSH2 0x1B1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B5C JUMPI PUSH2 0x1B5B PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B6A DUP5 DUP3 DUP6 ADD PUSH2 0x1B31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B7C DUP2 PUSH2 0x1B10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BAD DUP3 PUSH2 0x1B82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BBD DUP2 PUSH2 0x1BA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BD8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x1BE5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x1BF2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BB4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C2F DUP2 PUSH2 0x1BA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C41 DUP4 DUP4 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C65 DUP3 PUSH2 0x1BFA JUMP JUMPDEST PUSH2 0x1C6F DUP2 DUP6 PUSH2 0x1C05 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C7A DUP4 PUSH2 0x1C16 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CAB JUMPI DUP2 MLOAD PUSH2 0x1C92 DUP9 DUP3 PUSH2 0x1C35 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C9D DUP4 PUSH2 0x1C4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C7E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD2 DUP2 DUP5 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CED DUP2 PUSH2 0x1CDA JUMP JUMPDEST DUP2 EQ PUSH2 0x1CF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D0A DUP2 PUSH2 0x1CE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D26 JUMPI PUSH2 0x1D25 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D34 DUP5 DUP3 DUP6 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D46 DUP2 PUSH2 0x1CDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D70 DUP2 PUSH2 0x1BA2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D8D DUP2 PUSH2 0x1D67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DAA JUMPI PUSH2 0x1DA9 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DB8 DUP6 DUP3 DUP7 ADD PUSH2 0x1B31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DC9 DUP6 DUP3 DUP7 ADD PUSH2 0x1D7E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DE8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E05 JUMPI PUSH2 0x1E04 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E13 DUP6 DUP3 DUP7 ADD PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E24 DUP6 DUP3 DUP7 ADD PUSH2 0x1D7E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E43 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E60 JUMPI PUSH2 0x1E5F PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E6E DUP6 DUP3 DUP7 ADD PUSH2 0x1B31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E7F DUP6 DUP3 DUP7 ADD PUSH2 0x1B31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EBE DUP2 PUSH2 0x1B10 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED0 DUP4 DUP4 PUSH2 0x1EB5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF4 DUP3 PUSH2 0x1E89 JUMP JUMPDEST PUSH2 0x1EFE DUP2 DUP6 PUSH2 0x1E94 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F09 DUP4 PUSH2 0x1EA5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F3A JUMPI DUP2 MLOAD PUSH2 0x1F21 DUP9 DUP3 PUSH2 0x1EC4 JUMP JUMPDEST SWAP8 POP PUSH2 0x1F2C DUP4 PUSH2 0x1EDC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1F0D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F61 DUP2 DUP5 PUSH2 0x1EE9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F7F JUMPI PUSH2 0x1F7E PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F8D DUP5 DUP3 DUP6 ADD PUSH2 0x1D7E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x47616D6520496E697469616C697A656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDD PUSH1 0x10 DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE8 DUP3 PUSH2 0x1FA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x200C DUP2 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46696E6973686564000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2049 PUSH1 0x8 DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x2054 DUP3 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2078 DUP2 PUSH2 0x203C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20B9 DUP3 PUSH2 0x1B10 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C4 DUP4 PUSH2 0x1B10 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x20DC JUMPI PUSH2 0x20DB PUSH2 0x207F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20ED DUP3 PUSH2 0x1B10 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F8 DUP4 PUSH2 0x1B10 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2106 DUP2 PUSH2 0x1B10 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x211D JUMPI PUSH2 0x211C PUSH2 0x207F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x215E DUP3 PUSH2 0x1B10 JUMP JUMPDEST SWAP2 POP PUSH2 0x2169 DUP4 PUSH2 0x1B10 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2179 JUMPI PUSH2 0x2178 PUSH2 0x2124 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x218F DUP3 PUSH2 0x1B10 JUMP JUMPDEST SWAP2 POP PUSH2 0x219A DUP4 PUSH2 0x1B10 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x21B2 JUMPI PUSH2 0x21B1 PUSH2 0x207F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x726577617264202B20666565203D20746F74616C000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21EE PUSH1 0x14 DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F9 DUP3 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x221D DUP2 PUSH2 0x21E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C6C20706F7369746976650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x225A PUSH1 0xC DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x2265 DUP3 PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2289 DUP2 PUSH2 0x224D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22A5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1BB4 JUMP JUMPDEST PUSH2 0x22B2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B73 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x22C2 DUP2 PUSH2 0x1ADA JUMP JUMPDEST DUP2 EQ PUSH2 0x22CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22DF DUP2 PUSH2 0x22B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22FB JUMPI PUSH2 0x22FA PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2309 DUP5 DUP3 DUP6 ADD PUSH2 0x22D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265776172642073686F756C6420737563636573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2348 PUSH1 0x15 DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x2353 DUP3 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2377 DUP2 PUSH2 0x233B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2393 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1BB4 JUMP JUMPDEST PUSH2 0x23A0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x23AD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B73 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2411 PUSH1 0x2F DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x241C DUP3 PUSH2 0x23B5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2440 DUP2 PUSH2 0x2404 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2456 DUP2 PUSH2 0x1B1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2472 JUMPI PUSH2 0x2471 PUSH2 0x1A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2480 DUP5 DUP3 DUP6 ADD PUSH2 0x2447 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456E6F7567682062616C616E6365000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24BF PUSH1 0xE DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x24CA DUP3 PUSH2 0x2489 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24EE DUP2 PUSH2 0x24B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x250A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1BB4 JUMP JUMPDEST PUSH2 0x2517 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BB4 JUMP JUMPDEST PUSH2 0x2524 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B73 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5472616E736665722073686F756C642073756363657373000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2562 PUSH1 0x17 DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x256D DUP3 PUSH2 0x252C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2591 DUP2 PUSH2 0x2555 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206665650000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25CE PUSH1 0x6 DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x25D9 DUP3 PUSH2 0x2598 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25FD DUP2 PUSH2 0x25C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7472616E73666572206665650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x263A PUSH1 0xC DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x2645 DUP3 PUSH2 0x2604 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2669 DUP2 PUSH2 0x262D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D6520657869737473000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26A6 PUSH1 0xB DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x26B1 DUP3 PUSH2 0x2670 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26D5 DUP2 PUSH2 0x2699 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271D PUSH1 0x17 DUP4 PUSH2 0x26DC JUMP JUMPDEST SWAP2 POP PUSH2 0x2728 DUP3 PUSH2 0x26E7 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x275C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2773 DUP3 PUSH2 0x2733 JUMP JUMPDEST PUSH2 0x277D DUP2 DUP6 PUSH2 0x26DC JUMP JUMPDEST SWAP4 POP PUSH2 0x278D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x273E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27CF PUSH1 0x11 DUP4 PUSH2 0x26DC JUMP JUMPDEST SWAP2 POP PUSH2 0x27DA DUP3 PUSH2 0x2799 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F0 DUP3 PUSH2 0x2710 JUMP JUMPDEST SWAP2 POP PUSH2 0x27FC DUP3 DUP6 PUSH2 0x2768 JUMP JUMPDEST SWAP2 POP PUSH2 0x2807 DUP3 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2813 DUP3 DUP5 PUSH2 0x2768 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x283B DUP3 PUSH2 0x2733 JUMP JUMPDEST PUSH2 0x2845 DUP2 DUP6 PUSH2 0x1F96 JUMP JUMPDEST SWAP4 POP PUSH2 0x2855 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x273E JUMP JUMPDEST PUSH2 0x285E DUP2 PUSH2 0x281F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2883 DUP2 DUP5 PUSH2 0x2830 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x28F4 DUP3 PUSH2 0x1B10 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x2907 JUMPI PUSH2 0x2906 PUSH2 0x207F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2948 PUSH1 0x20 DUP4 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 POP PUSH2 0x2953 DUP3 PUSH2 0x2912 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2977 DUP2 PUSH2 0x293B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xB6 LOG3 BASEFEE SLT PUSH29 0x6714813C41F366C3695AD91CB6195FB1C0BDB3DDBCB468135FF264736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "1006:3613:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1438:34:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3716:181;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4504:129:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2922:786:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4929:145:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3905:197:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6038:214:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1576:24:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1507:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2223:691;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1542:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4302:314;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3021:145:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2123:92:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2153:49:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4110:184:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5354:147:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1479:21:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1860:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1694:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2732:202:1;2817:4;2855:32;2840:47;;;:11;:47;;;;:87;;;;2891:36;2915:11;2891:23;:36::i;:::-;2840:87;2833:94;;2732:202;;;:::o;1438:34:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3716:181::-;3769:16;3806:5;:13;3812:6;3806:13;;;;;;;;;;;:25;;;;;;;;;;;;3798:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3870:5;:13;3876:6;3870:13;;;;;;;;;;;:19;;3863:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3716:181;;;:::o;4504:129:1:-;4578:7;4604:6;:12;4611:4;4604:12;;;;;;;;;;;:22;;;4597:29;;4504:129;;;:::o;2922:786:0:-;3012:4;2198::1;2983:18:0;;2631:16:1;2642:4;2631:10;:16::i;:::-;3037:5:0::1;:13;3043:6;3037:13;;;;;;;;;;;:25;;;;;;;;;;;;3029:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3134:1;3102:34;;:5;:13;3108:6;3102:13;;;;;;;;;;;:20;;;;;;;;;;;;:34;;;3094:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3183:6;3160:5;:13;3166:6;3160:13;;;;;;;;;;;:20;;;:29;;;;;;;;;;;;;;;;;;3200:11;3267:3;3236:5;:13;3242:6;3236:13;;;;;;;;;;;:27;;;3222:10;;3216:3;:16;;;;:::i;:::-;3215:48;;;;:::i;:::-;3214:56;;;;:::i;:::-;3200:70;;3281:8;3322:6;3292:5;:13;3298:6;3292:13;;;;;;;;;;;:27;;;:36;;;;:::i;:::-;3281:47;;3363:5;:13;3369:6;3363:13;;;;;;;;;;;:27;;;3353:6;3347:3;:12;;;;:::i;:::-;:43;3339:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;3444:1;3434:6;:11;;:23;;;;;3456:1;3449:3;:8;;3434:23;:59;;;;;3492:1;3461:5;:13;3467:6;3461:13;;;;;;;;;;;:27;;;:32;;3434:59;3426:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;3538:13;;;;;;;;;;;3531:30;;;3562:6;3570;3531:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3523:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;3626:3;3614:8;;:15;;;;;;;:::i;:::-;;;;;;;;3645:31;3656:6;3664;3672:3;3645:31;;;;;;;;:::i;:::-;;;;;;;;3694:6;3687:13;;;;2922:786:::0;;;;;:::o;4929:145:1:-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;3905:197:0:-;3975:4;4000:5;:13;4006:6;4000:13;;;;;;;;;;;:25;;;;;;;;;;;;3992:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;4064:5;:13;4070:6;4064:13;;;;;;;;;;;:22;;:30;4087:6;4064:30;;;;;;;;;;;;;;;;4057:37;;3905:197;;;;:::o;6038:214:1:-;6144:12;:10;:12::i;:::-;6133:23;;:7;:23;;;6125:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;1576:24:0:-;;;;:::o;1507:28::-;;;;;;;;;;;;;:::o;2223:691::-;2278:4;2303:5;:13;2309:6;2303:13;;;;;;;;;;;:25;;;;;;;;;;;;2295:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2400:1;2368:34;;:5;:13;2374:6;2368:13;;;;;;;;;;;:20;;;;;;;;;;;;:34;;;2360:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2481:6;2441:13;;;;;;;;;;;2434:31;;;2466:10;2434:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;2426:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2534:13;;;;;;;;;;;2527:34;;;2562:10;2582:4;2589:6;2527:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2519:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;2677:1;2639:5;:13;2645:6;2639:13;;;;;;;;;;;:22;;:34;2662:10;2639:34;;;;;;;;;;;;;;;;:39;2635:108;;2695:5;:13;2701:6;2695:13;;;;;;;;;;;:19;;2720:10;2695:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2635:108;2791:6;2753:5;:13;2759:6;2753:13;;;;;;;;;;;:22;;:34;2776:10;2753:34;;;;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;;;;;;;;2839:6;2808:5;:13;2814:6;2808:13;;;;;;;;;;;:27;;;:37;;;;;;;:::i;:::-;;;;;;;;2861:23;2865:10;2877:6;2861:23;;;;;;;:::i;:::-;;;;;;;;2902:4;2895:11;;2223:691;;;;:::o;1542:27::-;;;;:::o;4302:314::-;4370:11;2198:4:1;4341:18:0;;2631:16:1;2642:4;2631:10;:16::i;:::-;4413:1:0::1;4402:8;;:12;4394:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;4451:13;;;;;;;;;;;4444:30;;;4475:10;4487:8;;4444:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4436:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;4533:8;;4524:17;;4563:1;4552:8;:12;;;;4580:28;4589:10;4601:6;4580:28;;;;;;;:::i;:::-;;;;;;;;4302:314:::0;;:::o;3021:145:1:-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;2123:92:0:-;2167:13;2200:7;2193:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2123:92;:::o;2153:49:1:-;2198:4;2153:49;;;:::o;4110:184:0:-;4163:4;4188:5;:13;4194:6;4188:13;;;;;;;;;;;:25;;;;;;;;;;;;4180:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;4252:5;:13;4258:6;4252:13;;;;;;;;;;;:22;;:34;4275:10;4252:34;;;;;;;;;;;;;;;;4245:41;;4110:184;;;:::o;5354:147:1:-;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;:::-;5354:147:::0;;;:::o;1479:21:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1860:255::-;1907:4;1960:5;1932:33;;:5;:12;1938:5;1932:12;;;;;;;;;;;:24;;;;;;;;;;;;:33;;;1924:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2019:4;1992:5;:12;1998:5;1992:12;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;2034:7;2047:5;2034:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2069:16;2079:5;2069:16;;;;;;:::i;:::-;;;;;;;;2103:4;2096:11;;1860:255;;;:::o;1694:158::-;1778:4;2198::1;1749:18:0;;2631:16:1;2642:4;2631:10;:16::i;:::-;1811:11:0::1;1795:13;;:27;;;;;;;;;;;;;;;;;;1840:4;1833:11;;1694:158:::0;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3460:103:1:-;3526:30;3537:4;3543:12;:10;:12::i;:::-;3526:10;:30::i;:::-;3460:103;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;:12::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;7991:234:1:-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:6;:12;8119:4;8112:12;;;;;;;;;;;:20;;:29;8133:7;8112:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8195:12;:10;:12::i;:::-;8168:40;;8186:7;8168:40;;8180:4;8168:40;;;;;;;;;;8070:149;7991:234;;:::o;3844:479::-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4234:13;;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3970:336;;;;;;;;;;;:::i;:::-;;;;;;;;3927:390;3844:479;;:::o;2407:149:7:-;2465:13;2497:52;2525:4;2509:22;;343:2;2497:52;;:11;:52::i;:::-;2490:59;;2407:149;;;:::o;1818:437::-;1893:13;1918:19;1963:1;1954:6;1950:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2030:9;2055:1;2046:6;2042:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2113:3;2105:5;:11;2096:21;;;;;;;:::i;:::-;;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2141:1;2131:11;;;;;2065:3;;;;:::i;:::-;;;2025:128;;;;2179:1;2170:5;:10;2162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:6;2227:21;;;1818:437;;;;:::o;88:117:12:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:126::-;2370:7;2410:42;2403:5;2399:54;2388:65;;2333:126;;;:::o;2465:96::-;2502:7;2531:24;2549:5;2531:24;:::i;:::-;2520:35;;2465:96;;;:::o;2567:118::-;2654:24;2672:5;2654:24;:::i;:::-;2649:3;2642:37;2567:118;;:::o;2691:430::-;2834:4;2872:2;2861:9;2857:18;2849:26;;2885:65;2947:1;2936:9;2932:17;2923:6;2885:65;:::i;:::-;2960:72;3028:2;3017:9;3013:18;3004:6;2960:72;:::i;:::-;3042;3110:2;3099:9;3095:18;3086:6;3042:72;:::i;:::-;2691:430;;;;;;:::o;3127:114::-;3194:6;3228:5;3222:12;3212:22;;3127:114;;;:::o;3247:184::-;3346:11;3380:6;3375:3;3368:19;3420:4;3415:3;3411:14;3396:29;;3247:184;;;;:::o;3437:132::-;3504:4;3527:3;3519:11;;3557:4;3552:3;3548:14;3540:22;;3437:132;;;:::o;3575:108::-;3652:24;3670:5;3652:24;:::i;:::-;3647:3;3640:37;3575:108;;:::o;3689:179::-;3758:10;3779:46;3821:3;3813:6;3779:46;:::i;:::-;3857:4;3852:3;3848:14;3834:28;;3689:179;;;;:::o;3874:113::-;3944:4;3976;3971:3;3967:14;3959:22;;3874:113;;;:::o;4023:732::-;4142:3;4171:54;4219:5;4171:54;:::i;:::-;4241:86;4320:6;4315:3;4241:86;:::i;:::-;4234:93;;4351:56;4401:5;4351:56;:::i;:::-;4430:7;4461:1;4446:284;4471:6;4468:1;4465:13;4446:284;;;4547:6;4541:13;4574:63;4633:3;4618:13;4574:63;:::i;:::-;4567:70;;4660:60;4713:6;4660:60;:::i;:::-;4650:70;;4506:224;4493:1;4490;4486:9;4481:14;;4446:284;;;4450:14;4746:3;4739:10;;4147:608;;;4023:732;;;;:::o;4761:373::-;4904:4;4942:2;4931:9;4927:18;4919:26;;4991:9;4985:4;4981:20;4977:1;4966:9;4962:17;4955:47;5019:108;5122:4;5113:6;5019:108;:::i;:::-;5011:116;;4761:373;;;;:::o;5140:77::-;5177:7;5206:5;5195:16;;5140:77;;;:::o;5223:122::-;5296:24;5314:5;5296:24;:::i;:::-;5289:5;5286:35;5276:63;;5335:1;5332;5325:12;5276:63;5223:122;:::o;5351:139::-;5397:5;5435:6;5422:20;5413:29;;5451:33;5478:5;5451:33;:::i;:::-;5351:139;;;;:::o;5496:329::-;5555:6;5604:2;5592:9;5583:7;5579:23;5575:32;5572:119;;;5610:79;;:::i;:::-;5572:119;5730:1;5755:53;5800:7;5791:6;5780:9;5776:22;5755:53;:::i;:::-;5745:63;;5701:117;5496:329;;;;:::o;5831:118::-;5918:24;5936:5;5918:24;:::i;:::-;5913:3;5906:37;5831:118;;:::o;5955:222::-;6048:4;6086:2;6075:9;6071:18;6063:26;;6099:71;6167:1;6156:9;6152:17;6143:6;6099:71;:::i;:::-;5955:222;;;;:::o;6183:122::-;6256:24;6274:5;6256:24;:::i;:::-;6249:5;6246:35;6236:63;;6295:1;6292;6285:12;6236:63;6183:122;:::o;6311:139::-;6357:5;6395:6;6382:20;6373:29;;6411:33;6438:5;6411:33;:::i;:::-;6311:139;;;;:::o;6456:474::-;6524:6;6532;6581:2;6569:9;6560:7;6556:23;6552:32;6549:119;;;6587:79;;:::i;:::-;6549:119;6707:1;6732:53;6777:7;6768:6;6757:9;6753:22;6732:53;:::i;:::-;6722:63;;6678:117;6834:2;6860:53;6905:7;6896:6;6885:9;6881:22;6860:53;:::i;:::-;6850:63;;6805:118;6456:474;;;;;:::o;6936:222::-;7029:4;7067:2;7056:9;7052:18;7044:26;;7080:71;7148:1;7137:9;7133:17;7124:6;7080:71;:::i;:::-;6936:222;;;;:::o;7164:474::-;7232:6;7240;7289:2;7277:9;7268:7;7264:23;7260:32;7257:119;;;7295:79;;:::i;:::-;7257:119;7415:1;7440:53;7485:7;7476:6;7465:9;7461:22;7440:53;:::i;:::-;7430:63;;7386:117;7542:2;7568:53;7613:7;7604:6;7593:9;7589:22;7568:53;:::i;:::-;7558:63;;7513:118;7164:474;;;;;:::o;7644:222::-;7737:4;7775:2;7764:9;7760:18;7752:26;;7788:71;7856:1;7845:9;7841:17;7832:6;7788:71;:::i;:::-;7644:222;;;;:::o;7872:474::-;7940:6;7948;7997:2;7985:9;7976:7;7972:23;7968:32;7965:119;;;8003:79;;:::i;:::-;7965:119;8123:1;8148:53;8193:7;8184:6;8173:9;8169:22;8148:53;:::i;:::-;8138:63;;8094:117;8250:2;8276:53;8321:7;8312:6;8301:9;8297:22;8276:53;:::i;:::-;8266:63;;8221:118;7872:474;;;;;:::o;8352:114::-;8419:6;8453:5;8447:12;8437:22;;8352:114;;;:::o;8472:184::-;8571:11;8605:6;8600:3;8593:19;8645:4;8640:3;8636:14;8621:29;;8472:184;;;;:::o;8662:132::-;8729:4;8752:3;8744:11;;8782:4;8777:3;8773:14;8765:22;;8662:132;;;:::o;8800:108::-;8877:24;8895:5;8877:24;:::i;:::-;8872:3;8865:37;8800:108;;:::o;8914:179::-;8983:10;9004:46;9046:3;9038:6;9004:46;:::i;:::-;9082:4;9077:3;9073:14;9059:28;;8914:179;;;;:::o;9099:113::-;9169:4;9201;9196:3;9192:14;9184:22;;9099:113;;;:::o;9248:732::-;9367:3;9396:54;9444:5;9396:54;:::i;:::-;9466:86;9545:6;9540:3;9466:86;:::i;:::-;9459:93;;9576:56;9626:5;9576:56;:::i;:::-;9655:7;9686:1;9671:284;9696:6;9693:1;9690:13;9671:284;;;9772:6;9766:13;9799:63;9858:3;9843:13;9799:63;:::i;:::-;9792:70;;9885:60;9938:6;9885:60;:::i;:::-;9875:70;;9731:224;9718:1;9715;9711:9;9706:14;;9671:284;;;9675:14;9971:3;9964:10;;9372:608;;;9248:732;;;;:::o;9986:373::-;10129:4;10167:2;10156:9;10152:18;10144:26;;10216:9;10210:4;10206:20;10202:1;10191:9;10187:17;10180:47;10244:108;10347:4;10338:6;10244:108;:::i;:::-;10236:116;;9986:373;;;;:::o;10365:329::-;10424:6;10473:2;10461:9;10452:7;10448:23;10444:32;10441:119;;;10479:79;;:::i;:::-;10441:119;10599:1;10624:53;10669:7;10660:6;10649:9;10645:22;10624:53;:::i;:::-;10614:63;;10570:117;10365:329;;;;:::o;10700:169::-;10784:11;10818:6;10813:3;10806:19;10858:4;10853:3;10849:14;10834:29;;10700:169;;;;:::o;10875:166::-;11015:18;11011:1;11003:6;10999:14;10992:42;10875:166;:::o;11047:366::-;11189:3;11210:67;11274:2;11269:3;11210:67;:::i;:::-;11203:74;;11286:93;11375:3;11286:93;:::i;:::-;11404:2;11399:3;11395:12;11388:19;;11047:366;;;:::o;11419:419::-;11585:4;11623:2;11612:9;11608:18;11600:26;;11672:9;11666:4;11662:20;11658:1;11647:9;11643:17;11636:47;11700:131;11826:4;11700:131;:::i;:::-;11692:139;;11419:419;;;:::o;11844:158::-;11984:10;11980:1;11972:6;11968:14;11961:34;11844:158;:::o;12008:365::-;12150:3;12171:66;12235:1;12230:3;12171:66;:::i;:::-;12164:73;;12246:93;12335:3;12246:93;:::i;:::-;12364:2;12359:3;12355:12;12348:19;;12008:365;;;:::o;12379:419::-;12545:4;12583:2;12572:9;12568:18;12560:26;;12632:9;12626:4;12622:20;12618:1;12607:9;12603:17;12596:47;12660:131;12786:4;12660:131;:::i;:::-;12652:139;;12379:419;;;:::o;12804:180::-;12852:77;12849:1;12842:88;12949:4;12946:1;12939:15;12973:4;12970:1;12963:15;12990:194;13030:4;13050:20;13068:1;13050:20;:::i;:::-;13045:25;;13084:20;13102:1;13084:20;:::i;:::-;13079:25;;13128:1;13125;13121:9;13113:17;;13152:1;13146:4;13143:11;13140:37;;;13157:18;;:::i;:::-;13140:37;12990:194;;;;:::o;13190:410::-;13230:7;13253:20;13271:1;13253:20;:::i;:::-;13248:25;;13287:20;13305:1;13287:20;:::i;:::-;13282:25;;13342:1;13339;13335:9;13364:30;13382:11;13364:30;:::i;:::-;13353:41;;13543:1;13534:7;13530:15;13527:1;13524:22;13504:1;13497:9;13477:83;13454:139;;13573:18;;:::i;:::-;13454:139;13238:362;13190:410;;;;:::o;13606:180::-;13654:77;13651:1;13644:88;13751:4;13748:1;13741:15;13775:4;13772:1;13765:15;13792:185;13832:1;13849:20;13867:1;13849:20;:::i;:::-;13844:25;;13883:20;13901:1;13883:20;:::i;:::-;13878:25;;13922:1;13912:35;;13927:18;;:::i;:::-;13912:35;13969:1;13966;13962:9;13957:14;;13792:185;;;;:::o;13983:191::-;14023:3;14042:20;14060:1;14042:20;:::i;:::-;14037:25;;14076:20;14094:1;14076:20;:::i;:::-;14071:25;;14119:1;14116;14112:9;14105:16;;14140:3;14137:1;14134:10;14131:36;;;14147:18;;:::i;:::-;14131:36;13983:191;;;;:::o;14180:170::-;14320:22;14316:1;14308:6;14304:14;14297:46;14180:170;:::o;14356:366::-;14498:3;14519:67;14583:2;14578:3;14519:67;:::i;:::-;14512:74;;14595:93;14684:3;14595:93;:::i;:::-;14713:2;14708:3;14704:12;14697:19;;14356:366;;;:::o;14728:419::-;14894:4;14932:2;14921:9;14917:18;14909:26;;14981:9;14975:4;14971:20;14967:1;14956:9;14952:17;14945:47;15009:131;15135:4;15009:131;:::i;:::-;15001:139;;14728:419;;;:::o;15153:162::-;15293:14;15289:1;15281:6;15277:14;15270:38;15153:162;:::o;15321:366::-;15463:3;15484:67;15548:2;15543:3;15484:67;:::i;:::-;15477:74;;15560:93;15649:3;15560:93;:::i;:::-;15678:2;15673:3;15669:12;15662:19;;15321:366;;;:::o;15693:419::-;15859:4;15897:2;15886:9;15882:18;15874:26;;15946:9;15940:4;15936:20;15932:1;15921:9;15917:17;15910:47;15974:131;16100:4;15974:131;:::i;:::-;15966:139;;15693:419;;;:::o;16118:332::-;16239:4;16277:2;16266:9;16262:18;16254:26;;16290:71;16358:1;16347:9;16343:17;16334:6;16290:71;:::i;:::-;16371:72;16439:2;16428:9;16424:18;16415:6;16371:72;:::i;:::-;16118:332;;;;;:::o;16456:116::-;16526:21;16541:5;16526:21;:::i;:::-;16519:5;16516:32;16506:60;;16562:1;16559;16552:12;16506:60;16456:116;:::o;16578:137::-;16632:5;16663:6;16657:13;16648:22;;16679:30;16703:5;16679:30;:::i;:::-;16578:137;;;;:::o;16721:345::-;16788:6;16837:2;16825:9;16816:7;16812:23;16808:32;16805:119;;;16843:79;;:::i;:::-;16805:119;16963:1;16988:61;17041:7;17032:6;17021:9;17017:22;16988:61;:::i;:::-;16978:71;;16934:125;16721:345;;;;:::o;17072:171::-;17212:23;17208:1;17200:6;17196:14;17189:47;17072:171;:::o;17249:366::-;17391:3;17412:67;17476:2;17471:3;17412:67;:::i;:::-;17405:74;;17488:93;17577:3;17488:93;:::i;:::-;17606:2;17601:3;17597:12;17590:19;;17249:366;;;:::o;17621:419::-;17787:4;17825:2;17814:9;17810:18;17802:26;;17874:9;17868:4;17864:20;17860:1;17849:9;17845:17;17838:47;17902:131;18028:4;17902:131;:::i;:::-;17894:139;;17621:419;;;:::o;18046:442::-;18195:4;18233:2;18222:9;18218:18;18210:26;;18246:71;18314:1;18303:9;18299:17;18290:6;18246:71;:::i;:::-;18327:72;18395:2;18384:9;18380:18;18371:6;18327:72;:::i;:::-;18409;18477:2;18466:9;18462:18;18453:6;18409:72;:::i;:::-;18046:442;;;;;;:::o;18494:234::-;18634:34;18630:1;18622:6;18618:14;18611:58;18703:17;18698:2;18690:6;18686:15;18679:42;18494:234;:::o;18734:366::-;18876:3;18897:67;18961:2;18956:3;18897:67;:::i;:::-;18890:74;;18973:93;19062:3;18973:93;:::i;:::-;19091:2;19086:3;19082:12;19075:19;;18734:366;;;:::o;19106:419::-;19272:4;19310:2;19299:9;19295:18;19287:26;;19359:9;19353:4;19349:20;19345:1;19334:9;19330:17;19323:47;19387:131;19513:4;19387:131;:::i;:::-;19379:139;;19106:419;;;:::o;19531:143::-;19588:5;19619:6;19613:13;19604:22;;19635:33;19662:5;19635:33;:::i;:::-;19531:143;;;;:::o;19680:351::-;19750:6;19799:2;19787:9;19778:7;19774:23;19770:32;19767:119;;;19805:79;;:::i;:::-;19767:119;19925:1;19950:64;20006:7;19997:6;19986:9;19982:22;19950:64;:::i;:::-;19940:74;;19896:128;19680:351;;;;:::o;20037:164::-;20177:16;20173:1;20165:6;20161:14;20154:40;20037:164;:::o;20207:366::-;20349:3;20370:67;20434:2;20429:3;20370:67;:::i;:::-;20363:74;;20446:93;20535:3;20446:93;:::i;:::-;20564:2;20559:3;20555:12;20548:19;;20207:366;;;:::o;20579:419::-;20745:4;20783:2;20772:9;20768:18;20760:26;;20832:9;20826:4;20822:20;20818:1;20807:9;20803:17;20796:47;20860:131;20986:4;20860:131;:::i;:::-;20852:139;;20579:419;;;:::o;21004:442::-;21153:4;21191:2;21180:9;21176:18;21168:26;;21204:71;21272:1;21261:9;21257:17;21248:6;21204:71;:::i;:::-;21285:72;21353:2;21342:9;21338:18;21329:6;21285:72;:::i;:::-;21367;21435:2;21424:9;21420:18;21411:6;21367:72;:::i;:::-;21004:442;;;;;;:::o;21452:173::-;21592:25;21588:1;21580:6;21576:14;21569:49;21452:173;:::o;21631:366::-;21773:3;21794:67;21858:2;21853:3;21794:67;:::i;:::-;21787:74;;21870:93;21959:3;21870:93;:::i;:::-;21988:2;21983:3;21979:12;21972:19;;21631:366;;;:::o;22003:419::-;22169:4;22207:2;22196:9;22192:18;22184:26;;22256:9;22250:4;22246:20;22242:1;22231:9;22227:17;22220:47;22284:131;22410:4;22284:131;:::i;:::-;22276:139;;22003:419;;;:::o;22428:156::-;22568:8;22564:1;22556:6;22552:14;22545:32;22428:156;:::o;22590:365::-;22732:3;22753:66;22817:1;22812:3;22753:66;:::i;:::-;22746:73;;22828:93;22917:3;22828:93;:::i;:::-;22946:2;22941:3;22937:12;22930:19;;22590:365;;;:::o;22961:419::-;23127:4;23165:2;23154:9;23150:18;23142:26;;23214:9;23208:4;23204:20;23200:1;23189:9;23185:17;23178:47;23242:131;23368:4;23242:131;:::i;:::-;23234:139;;22961:419;;;:::o;23386:162::-;23526:14;23522:1;23514:6;23510:14;23503:38;23386:162;:::o;23554:366::-;23696:3;23717:67;23781:2;23776:3;23717:67;:::i;:::-;23710:74;;23793:93;23882:3;23793:93;:::i;:::-;23911:2;23906:3;23902:12;23895:19;;23554:366;;;:::o;23926:419::-;24092:4;24130:2;24119:9;24115:18;24107:26;;24179:9;24173:4;24169:20;24165:1;24154:9;24150:17;24143:47;24207:131;24333:4;24207:131;:::i;:::-;24199:139;;23926:419;;;:::o;24351:161::-;24491:13;24487:1;24479:6;24475:14;24468:37;24351:161;:::o;24518:366::-;24660:3;24681:67;24745:2;24740:3;24681:67;:::i;:::-;24674:74;;24757:93;24846:3;24757:93;:::i;:::-;24875:2;24870:3;24866:12;24859:19;;24518:366;;;:::o;24890:419::-;25056:4;25094:2;25083:9;25079:18;25071:26;;25143:9;25137:4;25133:20;25129:1;25118:9;25114:17;25107:47;25171:131;25297:4;25171:131;:::i;:::-;25163:139;;24890:419;;;:::o;25315:148::-;25417:11;25454:3;25439:18;;25315:148;;;;:::o;25469:173::-;25609:25;25605:1;25597:6;25593:14;25586:49;25469:173;:::o;25648:402::-;25808:3;25829:85;25911:2;25906:3;25829:85;:::i;:::-;25822:92;;25923:93;26012:3;25923:93;:::i;:::-;26041:2;26036:3;26032:12;26025:19;;25648:402;;;:::o;26056:99::-;26108:6;26142:5;26136:12;26126:22;;26056:99;;;:::o;26161:246::-;26242:1;26252:113;26266:6;26263:1;26260:13;26252:113;;;26351:1;26346:3;26342:11;26336:18;26332:1;26327:3;26323:11;26316:39;26288:2;26285:1;26281:10;26276:15;;26252:113;;;26399:1;26390:6;26385:3;26381:16;26374:27;26223:184;26161:246;;;:::o;26413:390::-;26519:3;26547:39;26580:5;26547:39;:::i;:::-;26602:89;26684:6;26679:3;26602:89;:::i;:::-;26595:96;;26700:65;26758:6;26753:3;26746:4;26739:5;26735:16;26700:65;:::i;:::-;26790:6;26785:3;26781:16;26774:23;;26523:280;26413:390;;;;:::o;26809:167::-;26949:19;26945:1;26937:6;26933:14;26926:43;26809:167;:::o;26982:402::-;27142:3;27163:85;27245:2;27240:3;27163:85;:::i;:::-;27156:92;;27257:93;27346:3;27257:93;:::i;:::-;27375:2;27370:3;27366:12;27359:19;;26982:402;;;:::o;27390:967::-;27772:3;27794:148;27938:3;27794:148;:::i;:::-;27787:155;;27959:95;28050:3;28041:6;27959:95;:::i;:::-;27952:102;;28071:148;28215:3;28071:148;:::i;:::-;28064:155;;28236:95;28327:3;28318:6;28236:95;:::i;:::-;28229:102;;28348:3;28341:10;;27390:967;;;;;:::o;28363:102::-;28404:6;28455:2;28451:7;28446:2;28439:5;28435:14;28431:28;28421:38;;28363:102;;;:::o;28471:377::-;28559:3;28587:39;28620:5;28587:39;:::i;:::-;28642:71;28706:6;28701:3;28642:71;:::i;:::-;28635:78;;28722:65;28780:6;28775:3;28768:4;28761:5;28757:16;28722:65;:::i;:::-;28812:29;28834:6;28812:29;:::i;:::-;28807:3;28803:39;28796:46;;28563:285;28471:377;;;;:::o;28854:313::-;28967:4;29005:2;28994:9;28990:18;28982:26;;29054:9;29048:4;29044:20;29040:1;29029:9;29025:17;29018:47;29082:78;29155:4;29146:6;29082:78;:::i;:::-;29074:86;;28854:313;;;;:::o;29173:180::-;29221:77;29218:1;29211:88;29318:4;29315:1;29308:15;29342:4;29339:1;29332:15;29359:180;29407:77;29404:1;29397:88;29504:4;29501:1;29494:15;29528:4;29525:1;29518:15;29545:171;29584:3;29607:24;29625:5;29607:24;:::i;:::-;29598:33;;29653:4;29646:5;29643:15;29640:41;;29661:18;;:::i;:::-;29640:41;29708:1;29701:5;29697:13;29690:20;;29545:171;;;:::o;29722:182::-;29862:34;29858:1;29850:6;29846:14;29839:58;29722:182;:::o;29910:366::-;30052:3;30073:67;30137:2;30132:3;30073:67;:::i;:::-;30066:74;;30149:93;30238:3;30149:93;:::i;:::-;30267:2;30262:3;30258:12;30251:19;;29910:366;;;:::o;30282:419::-;30448:4;30486:2;30475:9;30471:18;30463:26;;30535:9;30529:4;30525:20;30521:1;30510:9;30506:17;30499:47;30563:131;30689:4;30563:131;:::i;:::-;30555:139;;30282:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2135200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "357",
								"bet(uint256,uint256)": "infinite",
								"feePercent()": "2474",
								"feeTotal()": "2518",
								"finish(uint256,address)": "infinite",
								"gameIds(uint256)": "infinite",
								"gameUsers(uint256)": "infinite",
								"games(uint256)": "infinite",
								"getBetting(uint256,address)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3229",
								"listGameIds()": "infinite",
								"myBetting(uint256)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setErc20(address)": "infinite",
								"startGame(uint256)": "infinite",
								"supportsInterface(bytes4)": "751",
								"tokenContract()": "2625",
								"withdrawAll()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1006,
									"end": 4619,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1006,
									"end": 4619,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1006,
									"end": 4619,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1567,
									"end": 1569,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1542,
									"end": 1569,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1542,
									"end": 1569,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1599,
									"end": 1600,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1576,
									"end": 1600,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1576,
									"end": 1600,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1609,
									"end": 1684,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1609,
									"end": 1684,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1609,
									"end": 1684,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1609,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1609,
									"end": 1684,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1609,
									"end": 1684,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1609,
									"end": 1684,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1609,
									"end": 1684,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1609,
									"end": 1684,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1609,
									"end": 1684,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1609,
									"end": 1684,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1634,
									"end": 1676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2198,
									"end": 2202,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1645,
									"end": 1663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 1663,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1665,
									"end": 1675,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1634,
									"end": 1644,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1634,
									"end": 1644,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1634,
									"end": 1644,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1634,
									"end": 1676,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1634,
									"end": 1676,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1634,
									"end": 1676,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1634,
									"end": 1676,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1634,
									"end": 1676,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 4619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1006,
									"end": 4619,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6937,
									"end": 7047,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 6937,
									"end": 7047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7015,
									"end": 7040,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7026,
									"end": 7030,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7032,
									"end": 7039,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7015,
									"end": 7025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7015,
									"end": 7025,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7015,
									"end": 7025,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7015,
									"end": 7040,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7015,
									"end": 7040,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7015,
									"end": 7040,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7015,
									"end": 7040,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7015,
									"end": 7040,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6937,
									"end": 7047,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6937,
									"end": 7047,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6937,
									"end": 7047,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7678,
									"end": 7682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7684,
									"end": 7691,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7670,
									"end": 7677,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 7670,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7670,
									"end": 7677,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7670,
									"end": 7692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7740,
									"end": 7744,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 7714,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7715,
									"end": 7719,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7728,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7728,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7729,
									"end": 7736,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 7790,
									"end": 7800,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7790,
									"end": 7800,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7790,
									"end": 7800,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7790,
									"end": 7802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7781,
									"end": 7788,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7775,
									"end": 7779,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7587,
									"end": 7820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3107,
									"end": 3111,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3136,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3137,
									"end": 3141,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3150,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3150,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3158,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3123,
									"end": 3159,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3123,
									"end": 3159,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3021,
									"end": 3166,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1006,
									"end": 4619,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1006,
									"end": 4619,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 4619,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1006,
									"end": 4619,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 4619,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1006,
									"end": 4619,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1006,
									"end": 4619,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 4619,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1006,
									"end": 4619,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122041b6a348127c6714813c41f366c3695ad91cb6195fb1c0bdb3ddbcb468135ff264736f6c63430008120033",
									".code": [
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "6FFCC719"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "CE33BD74"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "D82C13F0"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "E5ED1D59"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "EE9B80A4"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "6FFCC719"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "7FD6F15C"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "853828B6"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "9BC01B36"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "34FCC3E7"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "37BFC1EF"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "55A373D6"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "117A5B90"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "16B169C4"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "2C32B187"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 4619,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1438,
											"end": 1472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1438,
											"end": 1472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1438,
											"end": 1472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3716,
											"end": 3897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3716,
											"end": 3897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3716,
											"end": 3897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2922,
											"end": 3708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2922,
											"end": 3708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2922,
											"end": 3708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3905,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3905,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3905,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1576,
											"end": 1600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1576,
											"end": 1600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1507,
											"end": 1535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1507,
											"end": 1535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2223,
											"end": 2914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2223,
											"end": 2914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2223,
											"end": 2914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1542,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1542,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4302,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4302,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2123,
											"end": 2215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2123,
											"end": 2215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2153,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2153,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4110,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4110,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4110,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1479,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1479,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1479,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1860,
											"end": 2115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1860,
											"end": 2115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1860,
											"end": 2115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1694,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1694,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1694,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2915,
											"end": 2926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2891,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3785,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3806,
											"end": 3811,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3806,
											"end": 3819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 3818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3819,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3831,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3806,
											"end": 3831,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3831,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3831,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3806,
											"end": 3831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3798,
											"end": 3852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3798,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3875,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3870,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3883,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3870,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4615,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4597,
											"end": 4626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4597,
											"end": 4626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3037,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3049,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3050,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3037,
											"end": 3050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3050,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3037,
											"end": 3050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3050,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3062,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3037,
											"end": 3062,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3062,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3037,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3037,
											"end": 3062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3029,
											"end": 3083,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3029,
											"end": 3083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3134,
											"end": 3135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3102,
											"end": 3136,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3102,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3114,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3115,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3102,
											"end": 3115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3115,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3102,
											"end": 3115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3115,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3102,
											"end": 3122,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3102,
											"end": 3122,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3122,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3102,
											"end": 3122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3102,
											"end": 3136,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3136,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3094,
											"end": 3149,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3094,
											"end": 3149,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3189,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3160,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3166,
											"end": 3172,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3173,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3160,
											"end": 3173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3173,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3173,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3160,
											"end": 3173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3173,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3160,
											"end": 3180,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3189,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3236,
											"end": 3241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3236,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3248,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3249,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3236,
											"end": 3249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3249,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3249,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3236,
											"end": 3249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3249,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3236,
											"end": 3263,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3263,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3222,
											"end": 3232,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3216,
											"end": 3219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3216,
											"end": 3232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3216,
											"end": 3232,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3216,
											"end": 3232,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3216,
											"end": 3232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3216,
											"end": 3232,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3216,
											"end": 3232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3216,
											"end": 3232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3215,
											"end": 3263,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3263,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3215,
											"end": 3263,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3263,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3215,
											"end": 3263,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3214,
											"end": 3270,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3214,
											"end": 3270,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3270,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3214,
											"end": 3270,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3270,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3281,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3328,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3292,
											"end": 3305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3304,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3305,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3305,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3305,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3305,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3305,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3305,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3305,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3305,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3292,
											"end": 3319,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3319,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3328,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3292,
											"end": 3328,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3328,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3328,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3292,
											"end": 3328,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3328,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3292,
											"end": 3328,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3281,
											"end": 3328,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3281,
											"end": 3328,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3363,
											"end": 3376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3375,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3376,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3376,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3363,
											"end": 3376,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3376,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3376,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3376,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3363,
											"end": 3376,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3363,
											"end": 3376,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3363,
											"end": 3390,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3390,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3359,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3350,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3347,
											"end": 3359,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3359,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3347,
											"end": 3359,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3359,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3347,
											"end": 3359,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3390,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3339,
											"end": 3415,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3339,
											"end": 3415,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3434,
											"end": 3440,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3445,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3445,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3457,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3457,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3434,
											"end": 3457,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3457,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3449,
											"end": 3452,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3457,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3449,
											"end": 3457,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3457,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3434,
											"end": 3457,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3493,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3493,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3434,
											"end": 3493,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3493,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3492,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3461,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3473,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3474,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3474,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3474,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3461,
											"end": 3488,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3488,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3493,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3493,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3434,
											"end": 3493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3426,
											"end": 3510,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3426,
											"end": 3510,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3538,
											"end": 3551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3551,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3538,
											"end": 3551,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3551,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3538,
											"end": 3551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3531,
											"end": 3561,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 3562,
											"end": 3568,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3576,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3531,
											"end": 3577,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3531,
											"end": 3577,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3531,
											"end": 3577,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3523,
											"end": 3603,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3523,
											"end": 3603,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3626,
											"end": 3629,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3614,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3614,
											"end": 3629,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3B6F6A175407B0E278B9798F8BE45BCC2CDBA01A995BF768F528B457D7E27E85"
										},
										{
											"begin": 3656,
											"end": 3662,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3664,
											"end": 3670,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3645,
											"end": 3676,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3676,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 3694,
											"end": 3700,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3700,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3700,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3700,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3700,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 3708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5025,
											"end": 5029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5012,
											"end": 5030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5053,
											"end": 5057,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5066,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5042,
											"end": 5052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5042,
											"end": 5067,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4000,
											"end": 4013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4012,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4000,
											"end": 4013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4000,
											"end": 4013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4013,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4000,
											"end": 4025,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3992,
											"end": 4046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3992,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4069,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4064,
											"end": 4077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4070,
											"end": 4076,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4077,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4064,
											"end": 4077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4077,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4064,
											"end": 4077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4077,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4086,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4064,
											"end": 4086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4093,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6144,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 6144,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 6144,
											"end": 6156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6144,
											"end": 6156,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 6144,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6125,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6231,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6219,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 6219,
											"end": 6245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2315,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2303,
											"end": 2328,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2328,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2303,
											"end": 2328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2295,
											"end": 2349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2295,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2400,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2373,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2368,
											"end": 2381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2380,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2381,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2388,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2368,
											"end": 2388,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2388,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2388,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2368,
											"end": 2402,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2360,
											"end": 2415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2360,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2481,
											"end": 2487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2454,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2441,
											"end": 2454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2454,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2441,
											"end": 2454,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2454,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2434,
											"end": 2465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2434,
											"end": 2477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2434,
											"end": 2477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2434,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2487,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2434,
											"end": 2487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2426,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2426,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2561,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2527,
											"end": 2561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2561,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 2562,
											"end": 2572,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2586,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2527,
											"end": 2596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2527,
											"end": 2596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2527,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2519,
											"end": 2624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2519,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2639,
											"end": 2652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2652,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2661,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2639,
											"end": 2661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2672,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2673,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2635,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2635,
											"end": 2743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2700,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2695,
											"end": 2708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2707,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2695,
											"end": 2708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2695,
											"end": 2708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2708,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2714,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2695,
											"end": 2714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2720,
											"end": 2730,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2635,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2635,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2753,
											"end": 2766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2766,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2775,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2753,
											"end": 2775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2786,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2753,
											"end": 2797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2813,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2808,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2808,
											"end": 2821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2808,
											"end": 2821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2821,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2808,
											"end": 2835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2808,
											"end": 2845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "PUSH",
											"source": 0,
											"value": "FB4C42CA2D93F0A673C2125AAA3C7B3FBEEE9533E34B1F2C0F8F5C4D4D8BF106"
										},
										{
											"begin": 2865,
											"end": 2875,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2877,
											"end": 2883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2861,
											"end": 2884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2902,
											"end": 2906,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2895,
											"end": 2906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4341,
											"end": 4359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4341,
											"end": 4359,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4402,
											"end": 4410,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4402,
											"end": 4414,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 4394,
											"end": 4425,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 4394,
											"end": 4425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4451,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4451,
											"end": 4464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4464,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4451,
											"end": 4464,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4464,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4451,
											"end": 4464,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4444,
											"end": 4474,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4475,
											"end": 4485,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4487,
											"end": 4495,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4444,
											"end": 4496,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 4444,
											"end": 4496,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4444,
											"end": 4496,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4436,
											"end": 4513,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 4436,
											"end": 4513,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4533,
											"end": 4541,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4541,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4541,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4552,
											"end": 4564,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4564,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4564,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 4589,
											"end": 4599,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4601,
											"end": 4607,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4580,
											"end": 4608,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4580,
											"end": 4608,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3111,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3141,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3158,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2167,
											"end": 2180,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2200,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4163,
											"end": 4167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4188,
											"end": 4213,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4213,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4188,
											"end": 4213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4180,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 4180,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4257,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4252,
											"end": 4265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4264,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4252,
											"end": 4265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4252,
											"end": 4265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 4265,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4252,
											"end": 4274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4285,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 5451,
											"end": 5455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5438,
											"end": 5456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 5480,
											"end": 5484,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5486,
											"end": 5493,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5468,
											"end": 5494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1937,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1932,
											"end": 1944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1943,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1944,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1956,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1932,
											"end": 1956,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1956,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1956,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1932,
											"end": 1956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1924,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2023,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1992,
											"end": 1997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2041,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2047,
											"end": 2052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2053,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "PUSH",
											"source": 0,
											"value": "B5E8A4470F7BCAC7F2C0F3E23471BD7016A9F6F049884CD27DFA8960F361287B"
										},
										{
											"begin": 2079,
											"end": 2084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2069,
											"end": 2085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2107,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2096,
											"end": 2107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 2115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1767,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1822,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1795,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1822,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1833,
											"end": 1844,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 3537,
											"end": 3541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3543,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3543,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3526,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 7678,
											"end": 7682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 7670,
											"end": 7692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7740,
											"end": 7744,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7715,
											"end": 7719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7729,
											"end": 7736,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7790,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7790,
											"end": 7802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 7779,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 8082,
											"end": 8086,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8074,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8074,
											"end": 8096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8144,
											"end": 8149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8118,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8133,
											"end": 8140,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 8195,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8195,
											"end": 8207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8186,
											"end": 8193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8180,
											"end": 8184,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7991,
											"end": 8225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3940,
											"end": 3944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 3953,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3932,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 4115,
											"end": 4143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4242,
											"end": 4246,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4234,
											"end": 4247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4247,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4251,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 4214,
											"end": 4252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4022,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3970,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2478,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2525,
											"end": 2529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2497,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1906,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 1937,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1950,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 1950,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1940,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 7,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 1975,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2008,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2000,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2043,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2042,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2042,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2104,
											"name": "PUSH",
											"source": 7,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2113,
											"end": 2116,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2116,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2096,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 7,
											"value": "F8"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2084,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2142,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 2065,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2162,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 2255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2459,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 2333,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2452,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2399,
											"end": 2453,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2453,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2459,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2459,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2459,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2465,
											"end": 2561,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 2465,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2502,
											"end": 2509,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 2549,
											"end": 2554,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 2531,
											"end": 2555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2555,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 2531,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2555,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2465,
											"end": 2561,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2465,
											"end": 2561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2465,
											"end": 2561,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2465,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2685,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 2567,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 2672,
											"end": 2677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 2654,
											"end": 2678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2678,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 2654,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2649,
											"end": 2652,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2642,
											"end": 2679,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2691,
											"end": 3121,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 2691,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2834,
											"end": 2838,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2874,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2857,
											"end": 2875,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2875,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2875,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 2947,
											"end": 2948,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2945,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2932,
											"end": 2949,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2929,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 2885,
											"end": 2950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2950,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 2885,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2960,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 3028,
											"end": 3030,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3017,
											"end": 3026,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3013,
											"end": 3031,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2960,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 2960,
											"end": 3032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2960,
											"end": 3032,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 2960,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 3110,
											"end": 3112,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3108,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3086,
											"end": 3092,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 3042,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3114,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 3042,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2691,
											"end": 3121,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2691,
											"end": 3121,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2691,
											"end": 3121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2691,
											"end": 3121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2691,
											"end": 3121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2691,
											"end": 3121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2691,
											"end": 3121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3127,
											"end": 3241,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 3127,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3194,
											"end": 3200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3212,
											"end": 3234,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3212,
											"end": 3234,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3127,
											"end": 3241,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3127,
											"end": 3241,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3127,
											"end": 3241,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3127,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3247,
											"end": 3431,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 3247,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3346,
											"end": 3357,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3375,
											"end": 3378,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 3387,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3424,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3415,
											"end": 3418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3396,
											"end": 3425,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3396,
											"end": 3425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3247,
											"end": 3431,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3247,
											"end": 3431,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3247,
											"end": 3431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3247,
											"end": 3431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3247,
											"end": 3431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3437,
											"end": 3569,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 3437,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3530,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3530,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3557,
											"end": 3561,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3552,
											"end": 3555,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3562,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3437,
											"end": 3569,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3437,
											"end": 3569,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3437,
											"end": 3569,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3437,
											"end": 3569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3575,
											"end": 3683,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 3575,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3652,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 3670,
											"end": 3675,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3652,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 3652,
											"end": 3676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3652,
											"end": 3676,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 3652,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3647,
											"end": 3650,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3677,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3575,
											"end": 3683,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3575,
											"end": 3683,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3575,
											"end": 3683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3689,
											"end": 3868,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 3689,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3758,
											"end": 3768,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 3821,
											"end": 3824,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3813,
											"end": 3819,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3779,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 3779,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3779,
											"end": 3825,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 3779,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3857,
											"end": 3861,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3852,
											"end": 3855,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3848,
											"end": 3862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3834,
											"end": 3862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3834,
											"end": 3862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3689,
											"end": 3868,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3689,
											"end": 3868,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3689,
											"end": 3868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3689,
											"end": 3868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3689,
											"end": 3868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3874,
											"end": 3987,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 3874,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3944,
											"end": 3948,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3971,
											"end": 3974,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3967,
											"end": 3981,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3981,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3874,
											"end": 3987,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3874,
											"end": 3987,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3874,
											"end": 3987,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3874,
											"end": 3987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4755,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 4023,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4145,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 4219,
											"end": 4224,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 4171,
											"end": 4225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4241,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 4320,
											"end": 4326,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4315,
											"end": 4318,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4241,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4241,
											"end": 4327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4241,
											"end": 4327,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 4241,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4234,
											"end": 4327,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4234,
											"end": 4327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4351,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 4401,
											"end": 4406,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4351,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 4351,
											"end": 4407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4351,
											"end": 4407,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 4351,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4430,
											"end": 4437,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4461,
											"end": 4462,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4446,
											"end": 4730,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 4446,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4471,
											"end": 4477,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4465,
											"end": 4478,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4730,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 4446,
											"end": 4730,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4547,
											"end": 4553,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4554,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4574,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 4633,
											"end": 4636,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4618,
											"end": 4631,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4574,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 4574,
											"end": 4637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4574,
											"end": 4637,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 4574,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4567,
											"end": 4637,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 4567,
											"end": 4637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4660,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 4713,
											"end": 4719,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4660,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 4660,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4660,
											"end": 4720,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 4660,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4650,
											"end": 4720,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4650,
											"end": 4720,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4493,
											"end": 4494,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4490,
											"end": 4491,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4486,
											"end": 4495,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 4446,
											"end": 4730,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4730,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 4446,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4450,
											"end": 4464,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 4749,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4739,
											"end": 4749,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4739,
											"end": 4749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4147,
											"end": 4755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4147,
											"end": 4755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4147,
											"end": 4755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4755,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4755,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4761,
											"end": 5134,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 4761,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4908,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4942,
											"end": 4944,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4931,
											"end": 4940,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4927,
											"end": 4945,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4919,
											"end": 4945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4919,
											"end": 4945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4991,
											"end": 5000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4985,
											"end": 4989,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4981,
											"end": 5001,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4977,
											"end": 4978,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4962,
											"end": 4979,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4955,
											"end": 5002,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5019,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 5122,
											"end": 5126,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5019,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 5019,
											"end": 5127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5019,
											"end": 5127,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 5019,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5011,
											"end": 5127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5011,
											"end": 5127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4761,
											"end": 5134,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4761,
											"end": 5134,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4761,
											"end": 5134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4761,
											"end": 5134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4761,
											"end": 5134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5217,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 5140,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5177,
											"end": 5184,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5211,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5195,
											"end": 5211,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5195,
											"end": 5211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5217,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5217,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5223,
											"end": 5345,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 5223,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5296,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 5314,
											"end": 5319,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5296,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 5296,
											"end": 5320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5296,
											"end": 5320,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 5296,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5289,
											"end": 5294,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5286,
											"end": 5321,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5276,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 5276,
											"end": 5339,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5325,
											"end": 5337,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5276,
											"end": 5339,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 5276,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5223,
											"end": 5345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5223,
											"end": 5345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5351,
											"end": 5490,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 5351,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5402,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5435,
											"end": 5441,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5422,
											"end": 5442,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5413,
											"end": 5442,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5413,
											"end": 5442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5451,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 5478,
											"end": 5483,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5451,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 5451,
											"end": 5484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5451,
											"end": 5484,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 5451,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5351,
											"end": 5490,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5351,
											"end": 5490,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5351,
											"end": 5490,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5351,
											"end": 5490,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5351,
											"end": 5490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5496,
											"end": 5825,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 5496,
											"end": 5825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5561,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5601,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5583,
											"end": 5590,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5579,
											"end": 5602,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5575,
											"end": 5607,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5572,
											"end": 5691,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5572,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 5572,
											"end": 5691,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5610,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 5610,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 5610,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5610,
											"end": 5689,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 5610,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5572,
											"end": 5691,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 5572,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5730,
											"end": 5731,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 5800,
											"end": 5807,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5780,
											"end": 5789,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5776,
											"end": 5798,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5755,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 5755,
											"end": 5808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5755,
											"end": 5808,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 5755,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5745,
											"end": 5808,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5745,
											"end": 5808,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5701,
											"end": 5818,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5496,
											"end": 5825,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5496,
											"end": 5825,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5496,
											"end": 5825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5496,
											"end": 5825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5496,
											"end": 5825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5831,
											"end": 5949,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 5831,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 5936,
											"end": 5941,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 5918,
											"end": 5942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 5918,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 5916,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5906,
											"end": 5943,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5831,
											"end": 5949,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5831,
											"end": 5949,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5831,
											"end": 5949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 6177,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 5955,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6048,
											"end": 6052,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6088,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6075,
											"end": 6084,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6071,
											"end": 6089,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6063,
											"end": 6089,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6063,
											"end": 6089,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6099,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 6167,
											"end": 6168,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6165,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6099,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 6099,
											"end": 6170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6099,
											"end": 6170,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 6099,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 6177,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 6177,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 6177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 6177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 6177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6305,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 6183,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6256,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 6274,
											"end": 6279,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6256,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 6256,
											"end": 6280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6256,
											"end": 6280,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 6256,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6281,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6236,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 6236,
											"end": 6299,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6295,
											"end": 6296,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6293,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6285,
											"end": 6297,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6236,
											"end": 6299,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 6236,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6305,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6311,
											"end": 6450,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 6311,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6357,
											"end": 6362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6395,
											"end": 6401,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6382,
											"end": 6402,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6411,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 6438,
											"end": 6443,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6411,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 6411,
											"end": 6444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6411,
											"end": 6444,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 6411,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6311,
											"end": 6450,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6311,
											"end": 6450,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6311,
											"end": 6450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6311,
											"end": 6450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6311,
											"end": 6450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6930,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 6456,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6524,
											"end": 6530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6532,
											"end": 6538,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6581,
											"end": 6583,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6569,
											"end": 6578,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6567,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6579,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6552,
											"end": 6584,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6549,
											"end": 6668,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6549,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 6549,
											"end": 6668,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 6587,
											"end": 6666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 6587,
											"end": 6666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6666,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 6587,
											"end": 6666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6549,
											"end": 6668,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 6549,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6707,
											"end": 6708,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 6777,
											"end": 6784,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6774,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6757,
											"end": 6766,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6753,
											"end": 6775,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6732,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 6732,
											"end": 6785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6732,
											"end": 6785,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 6732,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6722,
											"end": 6785,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6722,
											"end": 6785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6678,
											"end": 6795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6834,
											"end": 6836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6860,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 6905,
											"end": 6912,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6896,
											"end": 6902,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6885,
											"end": 6894,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6881,
											"end": 6903,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6860,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 6860,
											"end": 6913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6860,
											"end": 6913,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 6860,
											"end": 6913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6850,
											"end": 6913,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6850,
											"end": 6913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 6923,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6930,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6930,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6930,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6930,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6930,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6936,
											"end": 7158,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 6936,
											"end": 7158,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7029,
											"end": 7033,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7069,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7056,
											"end": 7065,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7052,
											"end": 7070,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7044,
											"end": 7070,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7044,
											"end": 7070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7080,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 7148,
											"end": 7149,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7137,
											"end": 7146,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7133,
											"end": 7150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7124,
											"end": 7130,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7080,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 7080,
											"end": 7151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7080,
											"end": 7151,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 7080,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6936,
											"end": 7158,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6936,
											"end": 7158,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6936,
											"end": 7158,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6936,
											"end": 7158,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6936,
											"end": 7158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7164,
											"end": 7638,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 7164,
											"end": 7638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7232,
											"end": 7238,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7240,
											"end": 7246,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7291,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7277,
											"end": 7286,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7268,
											"end": 7275,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7264,
											"end": 7287,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7292,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7257,
											"end": 7376,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7257,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 7257,
											"end": 7376,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7295,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 7295,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 7295,
											"end": 7374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7295,
											"end": 7374,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 7295,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7257,
											"end": 7376,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 7257,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7415,
											"end": 7416,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7440,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 7485,
											"end": 7492,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7482,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7465,
											"end": 7474,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7461,
											"end": 7483,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7440,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 7440,
											"end": 7493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7440,
											"end": 7493,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 7440,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7386,
											"end": 7503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7544,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 7613,
											"end": 7620,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7604,
											"end": 7610,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7602,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7589,
											"end": 7611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 7568,
											"end": 7621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 7568,
											"end": 7621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7558,
											"end": 7621,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7558,
											"end": 7621,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7513,
											"end": 7631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7164,
											"end": 7638,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7164,
											"end": 7638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7164,
											"end": 7638,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7164,
											"end": 7638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7164,
											"end": 7638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7164,
											"end": 7638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7644,
											"end": 7866,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 7644,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7737,
											"end": 7741,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7777,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7764,
											"end": 7773,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7760,
											"end": 7778,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7752,
											"end": 7778,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7752,
											"end": 7778,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7788,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 7856,
											"end": 7857,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7854,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7841,
											"end": 7858,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7832,
											"end": 7838,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7788,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 7788,
											"end": 7859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7788,
											"end": 7859,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 7788,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7644,
											"end": 7866,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7644,
											"end": 7866,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7644,
											"end": 7866,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7644,
											"end": 7866,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7644,
											"end": 7866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7872,
											"end": 8346,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 7872,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7940,
											"end": 7946,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7954,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7997,
											"end": 7999,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7985,
											"end": 7994,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7976,
											"end": 7983,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7972,
											"end": 7995,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7968,
											"end": 8000,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7965,
											"end": 8084,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7965,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 7965,
											"end": 8084,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 8003,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 8003,
											"end": 8082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8082,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 8003,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7965,
											"end": 8084,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 7965,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8123,
											"end": 8124,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 8193,
											"end": 8200,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8184,
											"end": 8190,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8173,
											"end": 8182,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8191,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8148,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 8148,
											"end": 8201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8148,
											"end": 8201,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 8148,
											"end": 8201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8138,
											"end": 8201,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8138,
											"end": 8201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8094,
											"end": 8211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8250,
											"end": 8252,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8276,
											"end": 8329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 8321,
											"end": 8328,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8312,
											"end": 8318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8301,
											"end": 8310,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8297,
											"end": 8319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8276,
											"end": 8329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 8276,
											"end": 8329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8276,
											"end": 8329,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 8276,
											"end": 8329,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8266,
											"end": 8329,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8266,
											"end": 8329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8221,
											"end": 8339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7872,
											"end": 8346,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7872,
											"end": 8346,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7872,
											"end": 8346,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7872,
											"end": 8346,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7872,
											"end": 8346,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7872,
											"end": 8346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8352,
											"end": 8466,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 8352,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8419,
											"end": 8425,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8453,
											"end": 8458,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8447,
											"end": 8459,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8437,
											"end": 8459,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8437,
											"end": 8459,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8352,
											"end": 8466,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8352,
											"end": 8466,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8352,
											"end": 8466,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8352,
											"end": 8466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8472,
											"end": 8656,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 8472,
											"end": 8656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8571,
											"end": 8582,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8605,
											"end": 8611,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8600,
											"end": 8603,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8593,
											"end": 8612,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8645,
											"end": 8649,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8640,
											"end": 8643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8636,
											"end": 8650,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8621,
											"end": 8650,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8621,
											"end": 8650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8472,
											"end": 8656,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8472,
											"end": 8656,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8472,
											"end": 8656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8472,
											"end": 8656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8472,
											"end": 8656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8662,
											"end": 8794,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 8662,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8729,
											"end": 8733,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8752,
											"end": 8755,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8744,
											"end": 8755,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8744,
											"end": 8755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8782,
											"end": 8786,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8777,
											"end": 8780,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8773,
											"end": 8787,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8765,
											"end": 8787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8765,
											"end": 8787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8662,
											"end": 8794,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8662,
											"end": 8794,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8662,
											"end": 8794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8662,
											"end": 8794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8800,
											"end": 8908,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 8800,
											"end": 8908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8877,
											"end": 8901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 8895,
											"end": 8900,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8877,
											"end": 8901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 8877,
											"end": 8901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8877,
											"end": 8901,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 8877,
											"end": 8901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8872,
											"end": 8875,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8865,
											"end": 8902,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8800,
											"end": 8908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8800,
											"end": 8908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8800,
											"end": 8908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 9093,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 8914,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8983,
											"end": 8993,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9004,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 9046,
											"end": 9049,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9038,
											"end": 9044,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9004,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 9004,
											"end": 9050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9004,
											"end": 9050,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 9004,
											"end": 9050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9086,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9077,
											"end": 9080,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9087,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9059,
											"end": 9087,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9059,
											"end": 9087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 9093,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 9093,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 9093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 9093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 9093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9099,
											"end": 9212,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 9099,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9169,
											"end": 9173,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9205,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9196,
											"end": 9199,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9192,
											"end": 9206,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9184,
											"end": 9206,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9184,
											"end": 9206,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9099,
											"end": 9212,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9099,
											"end": 9212,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9099,
											"end": 9212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9099,
											"end": 9212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9248,
											"end": 9980,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 9248,
											"end": 9980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9367,
											"end": 9370,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9396,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 9444,
											"end": 9449,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9396,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 9396,
											"end": 9450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9396,
											"end": 9450,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 9396,
											"end": 9450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9466,
											"end": 9552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 9545,
											"end": 9551,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9540,
											"end": 9543,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9466,
											"end": 9552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 9466,
											"end": 9552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9466,
											"end": 9552,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 9466,
											"end": 9552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9552,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9576,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 9626,
											"end": 9631,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9576,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 9576,
											"end": 9632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9576,
											"end": 9632,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 9576,
											"end": 9632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9655,
											"end": 9662,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9686,
											"end": 9687,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9955,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 9671,
											"end": 9955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9696,
											"end": 9702,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9693,
											"end": 9694,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 9703,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9671,
											"end": 9955,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9671,
											"end": 9955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 9671,
											"end": 9955,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9772,
											"end": 9778,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9766,
											"end": 9779,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9799,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 9858,
											"end": 9861,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9843,
											"end": 9856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9799,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 9799,
											"end": 9862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9799,
											"end": 9862,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 9799,
											"end": 9862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9792,
											"end": 9862,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 9792,
											"end": 9862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9885,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 9938,
											"end": 9944,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9885,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 9885,
											"end": 9945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9885,
											"end": 9945,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 9885,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9875,
											"end": 9945,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9875,
											"end": 9945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9731,
											"end": 9955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9718,
											"end": 9719,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9715,
											"end": 9716,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9711,
											"end": 9720,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9706,
											"end": 9720,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9706,
											"end": 9720,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9671,
											"end": 9955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 9671,
											"end": 9955,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9671,
											"end": 9955,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 9671,
											"end": 9955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9675,
											"end": 9689,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9971,
											"end": 9974,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9964,
											"end": 9974,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9964,
											"end": 9974,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9248,
											"end": 9980,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9248,
											"end": 9980,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9248,
											"end": 9980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9248,
											"end": 9980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9248,
											"end": 9980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9986,
											"end": 10359,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 9986,
											"end": 10359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10133,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10167,
											"end": 10169,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10156,
											"end": 10165,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10152,
											"end": 10170,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10144,
											"end": 10170,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10144,
											"end": 10170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10216,
											"end": 10225,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10210,
											"end": 10214,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10206,
											"end": 10226,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10202,
											"end": 10203,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10187,
											"end": 10204,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10180,
											"end": 10227,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10244,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 10347,
											"end": 10351,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10338,
											"end": 10344,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10244,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 10244,
											"end": 10352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10244,
											"end": 10352,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 10244,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10236,
											"end": 10352,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10236,
											"end": 10352,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9986,
											"end": 10359,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9986,
											"end": 10359,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9986,
											"end": 10359,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9986,
											"end": 10359,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9986,
											"end": 10359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10365,
											"end": 10694,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 10365,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10424,
											"end": 10430,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10473,
											"end": 10475,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10461,
											"end": 10470,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10452,
											"end": 10459,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10448,
											"end": 10471,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10444,
											"end": 10476,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10560,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 10441,
											"end": 10560,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10479,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 10479,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 10479,
											"end": 10558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10479,
											"end": 10558,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 10479,
											"end": 10558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10441,
											"end": 10560,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 10441,
											"end": 10560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10599,
											"end": 10600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10624,
											"end": 10677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 10669,
											"end": 10676,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10660,
											"end": 10666,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10649,
											"end": 10658,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10645,
											"end": 10667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10624,
											"end": 10677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 10624,
											"end": 10677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10624,
											"end": 10677,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 10624,
											"end": 10677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10614,
											"end": 10677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10614,
											"end": 10677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10570,
											"end": 10687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10365,
											"end": 10694,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10365,
											"end": 10694,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10365,
											"end": 10694,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10365,
											"end": 10694,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10365,
											"end": 10694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10700,
											"end": 10869,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 10700,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10784,
											"end": 10795,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10818,
											"end": 10824,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10813,
											"end": 10816,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10806,
											"end": 10825,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10858,
											"end": 10862,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10853,
											"end": 10856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10849,
											"end": 10863,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10834,
											"end": 10863,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10834,
											"end": 10863,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10700,
											"end": 10869,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10700,
											"end": 10869,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10700,
											"end": 10869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10700,
											"end": 10869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10700,
											"end": 10869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10875,
											"end": 11041,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 10875,
											"end": 11041,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11015,
											"end": 11033,
											"name": "PUSH",
											"source": 12,
											"value": "47616D6520496E697469616C697A656400000000000000000000000000000000"
										},
										{
											"begin": 11011,
											"end": 11012,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11003,
											"end": 11009,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10999,
											"end": 11013,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10992,
											"end": 11034,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10875,
											"end": 11041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10875,
											"end": 11041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11047,
											"end": 11413,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 11047,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11189,
											"end": 11192,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11210,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 11274,
											"end": 11276,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 11269,
											"end": 11272,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11210,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 11210,
											"end": 11277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11210,
											"end": 11277,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 11210,
											"end": 11277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11203,
											"end": 11277,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11203,
											"end": 11277,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11286,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 11375,
											"end": 11378,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11286,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 11286,
											"end": 11379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11286,
											"end": 11379,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 11286,
											"end": 11379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11404,
											"end": 11406,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11399,
											"end": 11402,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11395,
											"end": 11407,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11388,
											"end": 11407,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11388,
											"end": 11407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11047,
											"end": 11413,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11047,
											"end": 11413,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11047,
											"end": 11413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11047,
											"end": 11413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11419,
											"end": 11838,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 11419,
											"end": 11838,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11585,
											"end": 11589,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11623,
											"end": 11625,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11612,
											"end": 11621,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11608,
											"end": 11626,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11600,
											"end": 11626,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11600,
											"end": 11626,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11672,
											"end": 11681,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11666,
											"end": 11670,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11662,
											"end": 11682,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11658,
											"end": 11659,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11647,
											"end": 11656,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11643,
											"end": 11660,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11636,
											"end": 11683,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11700,
											"end": 11831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 11826,
											"end": 11830,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11700,
											"end": 11831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 11700,
											"end": 11831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11700,
											"end": 11831,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 11700,
											"end": 11831,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11692,
											"end": 11831,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11692,
											"end": 11831,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11419,
											"end": 11838,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11419,
											"end": 11838,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11419,
											"end": 11838,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11419,
											"end": 11838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11844,
											"end": 12002,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 11844,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11984,
											"end": 11994,
											"name": "PUSH",
											"source": 12,
											"value": "46696E6973686564000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11980,
											"end": 11981,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11972,
											"end": 11978,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11968,
											"end": 11982,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11961,
											"end": 11995,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11844,
											"end": 12002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11844,
											"end": 12002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12008,
											"end": 12373,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 12008,
											"end": 12373,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12150,
											"end": 12153,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12171,
											"end": 12237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 12235,
											"end": 12236,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 12230,
											"end": 12233,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12171,
											"end": 12237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 12171,
											"end": 12237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12171,
											"end": 12237,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 12171,
											"end": 12237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12164,
											"end": 12237,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12164,
											"end": 12237,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12246,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 12335,
											"end": 12338,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12246,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 12246,
											"end": 12339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12246,
											"end": 12339,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 12246,
											"end": 12339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12364,
											"end": 12366,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12359,
											"end": 12362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12355,
											"end": 12367,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12348,
											"end": 12367,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12348,
											"end": 12367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12008,
											"end": 12373,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12008,
											"end": 12373,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12008,
											"end": 12373,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12008,
											"end": 12373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12798,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 12379,
											"end": 12798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12545,
											"end": 12549,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12583,
											"end": 12585,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12572,
											"end": 12581,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12568,
											"end": 12586,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12560,
											"end": 12586,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12560,
											"end": 12586,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12632,
											"end": 12641,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12626,
											"end": 12630,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12622,
											"end": 12642,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12618,
											"end": 12619,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12607,
											"end": 12616,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 12620,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12596,
											"end": 12643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12660,
											"end": 12791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 12786,
											"end": 12790,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12660,
											"end": 12791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 12660,
											"end": 12791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12660,
											"end": 12791,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 12660,
											"end": 12791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12652,
											"end": 12791,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12652,
											"end": 12791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12798,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12798,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12804,
											"end": 12984,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 12804,
											"end": 12984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12852,
											"end": 12929,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12849,
											"end": 12850,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12842,
											"end": 12930,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12949,
											"end": 12953,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 12946,
											"end": 12947,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12939,
											"end": 12954,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12973,
											"end": 12977,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12970,
											"end": 12971,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12963,
											"end": 12978,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12990,
											"end": 13184,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 12990,
											"end": 13184,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13030,
											"end": 13034,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13050,
											"end": 13070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 13068,
											"end": 13069,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13050,
											"end": 13070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 13050,
											"end": 13070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13050,
											"end": 13070,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 13050,
											"end": 13070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13045,
											"end": 13070,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13045,
											"end": 13070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13084,
											"end": 13104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 13102,
											"end": 13103,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13084,
											"end": 13104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 13084,
											"end": 13104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13084,
											"end": 13104,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 13084,
											"end": 13104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13079,
											"end": 13104,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13079,
											"end": 13104,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13128,
											"end": 13129,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13125,
											"end": 13126,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13121,
											"end": 13130,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13113,
											"end": 13130,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13113,
											"end": 13130,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13152,
											"end": 13153,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13146,
											"end": 13150,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13143,
											"end": 13154,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13140,
											"end": 13177,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13140,
											"end": 13177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 13140,
											"end": 13177,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13157,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 13157,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 13157,
											"end": 13175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13157,
											"end": 13175,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 13157,
											"end": 13175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13140,
											"end": 13177,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 13140,
											"end": 13177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12990,
											"end": 13184,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12990,
											"end": 13184,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12990,
											"end": 13184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12990,
											"end": 13184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12990,
											"end": 13184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13190,
											"end": 13600,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 13190,
											"end": 13600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13230,
											"end": 13237,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13253,
											"end": 13273,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 13271,
											"end": 13272,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13253,
											"end": 13273,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 13253,
											"end": 13273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13253,
											"end": 13273,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 13253,
											"end": 13273,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13248,
											"end": 13273,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13248,
											"end": 13273,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13287,
											"end": 13307,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 13305,
											"end": 13306,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13287,
											"end": 13307,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 13287,
											"end": 13307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13287,
											"end": 13307,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 13287,
											"end": 13307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13282,
											"end": 13307,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13282,
											"end": 13307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13342,
											"end": 13343,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13339,
											"end": 13340,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13335,
											"end": 13344,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 13364,
											"end": 13394,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 13382,
											"end": 13393,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13364,
											"end": 13394,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 13364,
											"end": 13394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13364,
											"end": 13394,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 13364,
											"end": 13394,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13353,
											"end": 13394,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13353,
											"end": 13394,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13543,
											"end": 13544,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13534,
											"end": 13541,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13530,
											"end": 13545,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 13527,
											"end": 13528,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13524,
											"end": 13546,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 13504,
											"end": 13505,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13497,
											"end": 13506,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13477,
											"end": 13560,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 13454,
											"end": 13593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 13454,
											"end": 13593,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13573,
											"end": 13591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 13573,
											"end": 13591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 13573,
											"end": 13591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13573,
											"end": 13591,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 13573,
											"end": 13591,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13454,
											"end": 13593,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 13454,
											"end": 13593,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13238,
											"end": 13600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13190,
											"end": 13600,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13190,
											"end": 13600,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13190,
											"end": 13600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13190,
											"end": 13600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13190,
											"end": 13600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13606,
											"end": 13786,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 13606,
											"end": 13786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13654,
											"end": 13731,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13651,
											"end": 13652,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13644,
											"end": 13732,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13751,
											"end": 13755,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 13748,
											"end": 13749,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13741,
											"end": 13756,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13775,
											"end": 13779,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13772,
											"end": 13773,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13765,
											"end": 13780,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 13977,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 13792,
											"end": 13977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13832,
											"end": 13833,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13849,
											"end": 13869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 13867,
											"end": 13868,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13849,
											"end": 13869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 13849,
											"end": 13869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13849,
											"end": 13869,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 13849,
											"end": 13869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13844,
											"end": 13869,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13844,
											"end": 13869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13883,
											"end": 13903,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 13901,
											"end": 13902,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13883,
											"end": 13903,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 13883,
											"end": 13903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13883,
											"end": 13903,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 13883,
											"end": 13903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13878,
											"end": 13903,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13878,
											"end": 13903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13922,
											"end": 13923,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 13912,
											"end": 13947,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13927,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 13927,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 13927,
											"end": 13945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13927,
											"end": 13945,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 13927,
											"end": 13945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 13947,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 13912,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13969,
											"end": 13970,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13966,
											"end": 13967,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13962,
											"end": 13971,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 13957,
											"end": 13971,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13957,
											"end": 13971,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 13977,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 13977,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 13977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 13977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13792,
											"end": 13977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13983,
											"end": 14174,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 13983,
											"end": 14174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14023,
											"end": 14026,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14042,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 14060,
											"end": 14061,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14042,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 14042,
											"end": 14062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14042,
											"end": 14062,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 14042,
											"end": 14062,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14037,
											"end": 14062,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14037,
											"end": 14062,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14076,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 14094,
											"end": 14095,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14076,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 14076,
											"end": 14096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14076,
											"end": 14096,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 14076,
											"end": 14096,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14071,
											"end": 14096,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14071,
											"end": 14096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14119,
											"end": 14120,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14117,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14112,
											"end": 14121,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14105,
											"end": 14121,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14105,
											"end": 14121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14140,
											"end": 14143,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14137,
											"end": 14138,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14134,
											"end": 14144,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14131,
											"end": 14167,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14131,
											"end": 14167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 14131,
											"end": 14167,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 14147,
											"end": 14165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14131,
											"end": 14167,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 14131,
											"end": 14167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13983,
											"end": 14174,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13983,
											"end": 14174,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13983,
											"end": 14174,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13983,
											"end": 14174,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13983,
											"end": 14174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14180,
											"end": 14350,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 14180,
											"end": 14350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14320,
											"end": 14342,
											"name": "PUSH",
											"source": 12,
											"value": "726577617264202B20666565203D20746F74616C000000000000000000000000"
										},
										{
											"begin": 14316,
											"end": 14317,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14308,
											"end": 14314,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14304,
											"end": 14318,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14297,
											"end": 14343,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14180,
											"end": 14350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14180,
											"end": 14350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14356,
											"end": 14722,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 14356,
											"end": 14722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14498,
											"end": 14501,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14519,
											"end": 14586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 14583,
											"end": 14585,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 14578,
											"end": 14581,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14519,
											"end": 14586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 14519,
											"end": 14586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14519,
											"end": 14586,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 14519,
											"end": 14586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14512,
											"end": 14586,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14512,
											"end": 14586,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14595,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 14684,
											"end": 14687,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14595,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 14595,
											"end": 14688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14595,
											"end": 14688,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 14595,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14713,
											"end": 14715,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14708,
											"end": 14711,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14704,
											"end": 14716,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14697,
											"end": 14716,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14697,
											"end": 14716,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14356,
											"end": 14722,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14356,
											"end": 14722,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14356,
											"end": 14722,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14356,
											"end": 14722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14728,
											"end": 15147,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 14728,
											"end": 15147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14894,
											"end": 14898,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14932,
											"end": 14934,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14921,
											"end": 14930,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14917,
											"end": 14935,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14909,
											"end": 14935,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14909,
											"end": 14935,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14981,
											"end": 14990,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14975,
											"end": 14979,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14971,
											"end": 14991,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14967,
											"end": 14968,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14956,
											"end": 14965,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14952,
											"end": 14969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14945,
											"end": 14992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15009,
											"end": 15140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 15135,
											"end": 15139,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15009,
											"end": 15140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 15009,
											"end": 15140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15009,
											"end": 15140,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 15009,
											"end": 15140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15001,
											"end": 15140,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15001,
											"end": 15140,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14728,
											"end": 15147,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14728,
											"end": 15147,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14728,
											"end": 15147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14728,
											"end": 15147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15153,
											"end": 15315,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 15153,
											"end": 15315,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15293,
											"end": 15307,
											"name": "PUSH",
											"source": 12,
											"value": "616C6C20706F7369746976650000000000000000000000000000000000000000"
										},
										{
											"begin": 15289,
											"end": 15290,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15281,
											"end": 15287,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15277,
											"end": 15291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15270,
											"end": 15308,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15153,
											"end": 15315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15153,
											"end": 15315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15321,
											"end": 15687,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 15321,
											"end": 15687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15463,
											"end": 15466,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15484,
											"end": 15551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 15548,
											"end": 15550,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 15543,
											"end": 15546,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15484,
											"end": 15551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 15484,
											"end": 15551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15484,
											"end": 15551,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 15484,
											"end": 15551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15477,
											"end": 15551,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15477,
											"end": 15551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15560,
											"end": 15653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 15649,
											"end": 15652,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15560,
											"end": 15653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 15560,
											"end": 15653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15560,
											"end": 15653,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 15560,
											"end": 15653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15678,
											"end": 15680,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15673,
											"end": 15676,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15669,
											"end": 15681,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15662,
											"end": 15681,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15662,
											"end": 15681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15321,
											"end": 15687,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15321,
											"end": 15687,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15321,
											"end": 15687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15321,
											"end": 15687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15693,
											"end": 16112,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 15693,
											"end": 16112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15859,
											"end": 15863,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15897,
											"end": 15899,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15886,
											"end": 15895,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15882,
											"end": 15900,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15874,
											"end": 15900,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15874,
											"end": 15900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15946,
											"end": 15955,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15940,
											"end": 15944,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15936,
											"end": 15956,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15932,
											"end": 15933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15921,
											"end": 15930,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15917,
											"end": 15934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15910,
											"end": 15957,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15974,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 16100,
											"end": 16104,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15974,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 15974,
											"end": 16105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15974,
											"end": 16105,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 15974,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15966,
											"end": 16105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15966,
											"end": 16105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15693,
											"end": 16112,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15693,
											"end": 16112,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15693,
											"end": 16112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15693,
											"end": 16112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16118,
											"end": 16450,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 16118,
											"end": 16450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16239,
											"end": 16243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16277,
											"end": 16279,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16266,
											"end": 16275,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16262,
											"end": 16280,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16254,
											"end": 16280,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16254,
											"end": 16280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16290,
											"end": 16361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 16358,
											"end": 16359,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16347,
											"end": 16356,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16343,
											"end": 16360,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16334,
											"end": 16340,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16290,
											"end": 16361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 16290,
											"end": 16361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16290,
											"end": 16361,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 16290,
											"end": 16361,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16371,
											"end": 16443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 16439,
											"end": 16441,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16428,
											"end": 16437,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16424,
											"end": 16442,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16415,
											"end": 16421,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16371,
											"end": 16443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 16371,
											"end": 16443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16371,
											"end": 16443,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 16371,
											"end": 16443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16118,
											"end": 16450,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16118,
											"end": 16450,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16118,
											"end": 16450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16118,
											"end": 16450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16118,
											"end": 16450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16118,
											"end": 16450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16456,
											"end": 16572,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 16456,
											"end": 16572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16526,
											"end": 16547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 16541,
											"end": 16546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16526,
											"end": 16547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 16526,
											"end": 16547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16526,
											"end": 16547,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 16526,
											"end": 16547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16519,
											"end": 16524,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16516,
											"end": 16548,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 16506,
											"end": 16566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16562,
											"end": 16563,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16559,
											"end": 16560,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16552,
											"end": 16564,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16566,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 16506,
											"end": 16566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16456,
											"end": 16572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16456,
											"end": 16572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16715,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 16578,
											"end": 16715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16632,
											"end": 16637,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16663,
											"end": 16669,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16657,
											"end": 16670,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16648,
											"end": 16670,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16648,
											"end": 16670,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16679,
											"end": 16709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 16703,
											"end": 16708,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16679,
											"end": 16709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 16679,
											"end": 16709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16679,
											"end": 16709,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 16679,
											"end": 16709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16715,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16715,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16721,
											"end": 17066,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 16721,
											"end": 17066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16788,
											"end": 16794,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16837,
											"end": 16839,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16825,
											"end": 16834,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16816,
											"end": 16823,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16812,
											"end": 16835,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16808,
											"end": 16840,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16924,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 16805,
											"end": 16924,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16843,
											"end": 16922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 16843,
											"end": 16922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 16843,
											"end": 16922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16843,
											"end": 16922,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 16843,
											"end": 16922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16805,
											"end": 16924,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 16805,
											"end": 16924,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16963,
											"end": 16964,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16988,
											"end": 17049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 17041,
											"end": 17048,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17032,
											"end": 17038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17021,
											"end": 17030,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17017,
											"end": 17039,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16988,
											"end": 17049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 16988,
											"end": 17049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16988,
											"end": 17049,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 16988,
											"end": 17049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16978,
											"end": 17049,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16978,
											"end": 17049,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16934,
											"end": 17059,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16721,
											"end": 17066,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16721,
											"end": 17066,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16721,
											"end": 17066,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16721,
											"end": 17066,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16721,
											"end": 17066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17072,
											"end": 17243,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 17072,
											"end": 17243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17212,
											"end": 17235,
											"name": "PUSH",
											"source": 12,
											"value": "5265776172642073686F756C6420737563636573730000000000000000000000"
										},
										{
											"begin": 17208,
											"end": 17209,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17200,
											"end": 17206,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17196,
											"end": 17210,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17189,
											"end": 17236,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17072,
											"end": 17243,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17072,
											"end": 17243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17249,
											"end": 17615,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 17249,
											"end": 17615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17391,
											"end": 17394,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17412,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 17476,
											"end": 17478,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 17471,
											"end": 17474,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17412,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 17412,
											"end": 17479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17412,
											"end": 17479,
											"name": "tag",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 17412,
											"end": 17479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17405,
											"end": 17479,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17405,
											"end": 17479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17488,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 17577,
											"end": 17580,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17488,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 17488,
											"end": 17581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17488,
											"end": 17581,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 17488,
											"end": 17581,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17606,
											"end": 17608,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17601,
											"end": 17604,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17597,
											"end": 17609,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17590,
											"end": 17609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17249,
											"end": 17615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17249,
											"end": 17615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17249,
											"end": 17615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17249,
											"end": 17615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17621,
											"end": 18040,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 17621,
											"end": 18040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17787,
											"end": 17791,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17825,
											"end": 17827,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17814,
											"end": 17823,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17810,
											"end": 17828,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17802,
											"end": 17828,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17802,
											"end": 17828,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17874,
											"end": 17883,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17868,
											"end": 17872,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17864,
											"end": 17884,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17860,
											"end": 17861,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17849,
											"end": 17858,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17845,
											"end": 17862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17838,
											"end": 17885,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17902,
											"end": 18033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 18028,
											"end": 18032,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17902,
											"end": 18033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 17902,
											"end": 18033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17902,
											"end": 18033,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 17902,
											"end": 18033,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17894,
											"end": 18033,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17894,
											"end": 18033,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17621,
											"end": 18040,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17621,
											"end": 18040,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17621,
											"end": 18040,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17621,
											"end": 18040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18046,
											"end": 18488,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 18046,
											"end": 18488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18195,
											"end": 18199,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18233,
											"end": 18235,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 18222,
											"end": 18231,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18218,
											"end": 18236,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18210,
											"end": 18236,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18210,
											"end": 18236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18246,
											"end": 18317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 18314,
											"end": 18315,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18303,
											"end": 18312,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18299,
											"end": 18316,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18290,
											"end": 18296,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18246,
											"end": 18317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 18246,
											"end": 18317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18246,
											"end": 18317,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 18246,
											"end": 18317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18327,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 18395,
											"end": 18397,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18384,
											"end": 18393,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18380,
											"end": 18398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18371,
											"end": 18377,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18327,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 18327,
											"end": 18399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18327,
											"end": 18399,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 18327,
											"end": 18399,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18409,
											"end": 18481,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 18477,
											"end": 18479,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18466,
											"end": 18475,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18462,
											"end": 18480,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18453,
											"end": 18459,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18409,
											"end": 18481,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 18409,
											"end": 18481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18409,
											"end": 18481,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 18409,
											"end": 18481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18046,
											"end": 18488,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 18046,
											"end": 18488,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18046,
											"end": 18488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18046,
											"end": 18488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18046,
											"end": 18488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18046,
											"end": 18488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18046,
											"end": 18488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18494,
											"end": 18728,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 18494,
											"end": 18728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18634,
											"end": 18668,
											"name": "PUSH",
											"source": 12,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 18630,
											"end": 18631,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18622,
											"end": 18628,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18618,
											"end": 18632,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18611,
											"end": 18669,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18703,
											"end": 18720,
											"name": "PUSH",
											"source": 12,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 18698,
											"end": 18700,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18690,
											"end": 18696,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18686,
											"end": 18701,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18679,
											"end": 18721,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18494,
											"end": 18728,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18494,
											"end": 18728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18734,
											"end": 19100,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 18734,
											"end": 19100,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18876,
											"end": 18879,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18897,
											"end": 18964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 18961,
											"end": 18963,
											"name": "PUSH",
											"source": 12,
											"value": "2F"
										},
										{
											"begin": 18956,
											"end": 18959,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18897,
											"end": 18964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 18897,
											"end": 18964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18897,
											"end": 18964,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 18897,
											"end": 18964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18890,
											"end": 18964,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18890,
											"end": 18964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18973,
											"end": 19066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 19062,
											"end": 19065,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18973,
											"end": 19066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 18973,
											"end": 19066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18973,
											"end": 19066,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 18973,
											"end": 19066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19091,
											"end": 19093,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19086,
											"end": 19089,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19082,
											"end": 19094,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19075,
											"end": 19094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19075,
											"end": 19094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18734,
											"end": 19100,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18734,
											"end": 19100,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18734,
											"end": 19100,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18734,
											"end": 19100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19106,
											"end": 19525,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 19106,
											"end": 19525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19272,
											"end": 19276,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19310,
											"end": 19312,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19299,
											"end": 19308,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19295,
											"end": 19313,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19287,
											"end": 19313,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19287,
											"end": 19313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19359,
											"end": 19368,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19353,
											"end": 19357,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19349,
											"end": 19369,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19345,
											"end": 19346,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19334,
											"end": 19343,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19330,
											"end": 19347,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19323,
											"end": 19370,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19387,
											"end": 19518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 19513,
											"end": 19517,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19387,
											"end": 19518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 19387,
											"end": 19518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19387,
											"end": 19518,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 19387,
											"end": 19518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19379,
											"end": 19518,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19379,
											"end": 19518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19106,
											"end": 19525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19106,
											"end": 19525,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19106,
											"end": 19525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19106,
											"end": 19525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19531,
											"end": 19674,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 19531,
											"end": 19674,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19588,
											"end": 19593,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19619,
											"end": 19625,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19613,
											"end": 19626,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19604,
											"end": 19626,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19604,
											"end": 19626,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19635,
											"end": 19668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 19662,
											"end": 19667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19635,
											"end": 19668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 19635,
											"end": 19668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19635,
											"end": 19668,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 19635,
											"end": 19668,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19531,
											"end": 19674,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19531,
											"end": 19674,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19531,
											"end": 19674,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19531,
											"end": 19674,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19531,
											"end": 19674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19680,
											"end": 20031,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 19680,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19750,
											"end": 19756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19799,
											"end": 19801,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19787,
											"end": 19796,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19778,
											"end": 19785,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19774,
											"end": 19797,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19770,
											"end": 19802,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 19767,
											"end": 19886,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19767,
											"end": 19886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 19767,
											"end": 19886,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19805,
											"end": 19884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 19805,
											"end": 19884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 19805,
											"end": 19884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19805,
											"end": 19884,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 19805,
											"end": 19884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19767,
											"end": 19886,
											"name": "tag",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 19767,
											"end": 19886,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19925,
											"end": 19926,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19950,
											"end": 20014,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 20006,
											"end": 20013,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19997,
											"end": 20003,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19986,
											"end": 19995,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19982,
											"end": 20004,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19950,
											"end": 20014,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 19950,
											"end": 20014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19950,
											"end": 20014,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 19950,
											"end": 20014,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19940,
											"end": 20014,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19940,
											"end": 20014,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19896,
											"end": 20024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19680,
											"end": 20031,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19680,
											"end": 20031,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19680,
											"end": 20031,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19680,
											"end": 20031,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19680,
											"end": 20031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20037,
											"end": 20201,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 20037,
											"end": 20201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20177,
											"end": 20193,
											"name": "PUSH",
											"source": 12,
											"value": "456E6F7567682062616C616E6365000000000000000000000000000000000000"
										},
										{
											"begin": 20173,
											"end": 20174,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20165,
											"end": 20171,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20161,
											"end": 20175,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20154,
											"end": 20194,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20037,
											"end": 20201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20037,
											"end": 20201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20207,
											"end": 20573,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 20207,
											"end": 20573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20349,
											"end": 20352,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20370,
											"end": 20437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 20434,
											"end": 20436,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 20429,
											"end": 20432,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20370,
											"end": 20437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 20370,
											"end": 20437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20370,
											"end": 20437,
											"name": "tag",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 20370,
											"end": 20437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20363,
											"end": 20437,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20363,
											"end": 20437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20446,
											"end": 20539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 20535,
											"end": 20538,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20446,
											"end": 20539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 20446,
											"end": 20539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20446,
											"end": 20539,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 20446,
											"end": 20539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20564,
											"end": 20566,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20559,
											"end": 20562,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20555,
											"end": 20567,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20548,
											"end": 20567,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20548,
											"end": 20567,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20207,
											"end": 20573,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20207,
											"end": 20573,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20207,
											"end": 20573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20207,
											"end": 20573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20579,
											"end": 20998,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 20579,
											"end": 20998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20745,
											"end": 20749,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20783,
											"end": 20785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20772,
											"end": 20781,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20768,
											"end": 20786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20760,
											"end": 20786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20760,
											"end": 20786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20832,
											"end": 20841,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20826,
											"end": 20830,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20822,
											"end": 20842,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20818,
											"end": 20819,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20807,
											"end": 20816,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20803,
											"end": 20820,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20796,
											"end": 20843,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20860,
											"end": 20991,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 20986,
											"end": 20990,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20860,
											"end": 20991,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 20860,
											"end": 20991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20860,
											"end": 20991,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 20860,
											"end": 20991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20852,
											"end": 20991,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20852,
											"end": 20991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20579,
											"end": 20998,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20579,
											"end": 20998,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20579,
											"end": 20998,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20579,
											"end": 20998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21004,
											"end": 21446,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 21004,
											"end": 21446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21153,
											"end": 21157,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21191,
											"end": 21193,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 21180,
											"end": 21189,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21176,
											"end": 21194,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21168,
											"end": 21194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21168,
											"end": 21194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21204,
											"end": 21275,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 21272,
											"end": 21273,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21261,
											"end": 21270,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21257,
											"end": 21274,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21248,
											"end": 21254,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21204,
											"end": 21275,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 21204,
											"end": 21275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21204,
											"end": 21275,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 21204,
											"end": 21275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21285,
											"end": 21357,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 21353,
											"end": 21355,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21342,
											"end": 21351,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21338,
											"end": 21356,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21329,
											"end": 21335,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21285,
											"end": 21357,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 21285,
											"end": 21357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21285,
											"end": 21357,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 21285,
											"end": 21357,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21367,
											"end": 21439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 21435,
											"end": 21437,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21424,
											"end": 21433,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21420,
											"end": 21438,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21411,
											"end": 21417,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21367,
											"end": 21439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 21367,
											"end": 21439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21367,
											"end": 21439,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 21367,
											"end": 21439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21004,
											"end": 21446,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 21004,
											"end": 21446,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 21004,
											"end": 21446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21004,
											"end": 21446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21004,
											"end": 21446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21004,
											"end": 21446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21004,
											"end": 21446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21452,
											"end": 21625,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 21452,
											"end": 21625,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21592,
											"end": 21617,
											"name": "PUSH",
											"source": 12,
											"value": "5472616E736665722073686F756C642073756363657373000000000000000000"
										},
										{
											"begin": 21588,
											"end": 21589,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21580,
											"end": 21586,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21576,
											"end": 21590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21569,
											"end": 21618,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21452,
											"end": 21625,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21452,
											"end": 21625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21631,
											"end": 21997,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 21631,
											"end": 21997,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21773,
											"end": 21776,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21794,
											"end": 21861,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 21858,
											"end": 21860,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 21853,
											"end": 21856,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21794,
											"end": 21861,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 21794,
											"end": 21861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21794,
											"end": 21861,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 21794,
											"end": 21861,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21787,
											"end": 21861,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21787,
											"end": 21861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21870,
											"end": 21963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 21959,
											"end": 21962,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21870,
											"end": 21963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 21870,
											"end": 21963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21870,
											"end": 21963,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 21870,
											"end": 21963,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21988,
											"end": 21990,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21983,
											"end": 21986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21979,
											"end": 21991,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21972,
											"end": 21991,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21972,
											"end": 21991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21631,
											"end": 21997,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21631,
											"end": 21997,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21631,
											"end": 21997,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21631,
											"end": 21997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22003,
											"end": 22422,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 22003,
											"end": 22422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22169,
											"end": 22173,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22207,
											"end": 22209,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22196,
											"end": 22205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22192,
											"end": 22210,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22184,
											"end": 22210,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22184,
											"end": 22210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22256,
											"end": 22265,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22250,
											"end": 22254,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22246,
											"end": 22266,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22242,
											"end": 22243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22231,
											"end": 22240,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22227,
											"end": 22244,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22220,
											"end": 22267,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22284,
											"end": 22415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 22410,
											"end": 22414,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22284,
											"end": 22415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 22284,
											"end": 22415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22284,
											"end": 22415,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 22284,
											"end": 22415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22276,
											"end": 22415,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22276,
											"end": 22415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22003,
											"end": 22422,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22003,
											"end": 22422,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22003,
											"end": 22422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22003,
											"end": 22422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22428,
											"end": 22584,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 22428,
											"end": 22584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22568,
											"end": 22576,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F206665650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22564,
											"end": 22565,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22556,
											"end": 22562,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22552,
											"end": 22566,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22545,
											"end": 22577,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22428,
											"end": 22584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22428,
											"end": 22584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22590,
											"end": 22955,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 22590,
											"end": 22955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22732,
											"end": 22735,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22753,
											"end": 22819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 22817,
											"end": 22818,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 22812,
											"end": 22815,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22753,
											"end": 22819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 22753,
											"end": 22819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22753,
											"end": 22819,
											"name": "tag",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 22753,
											"end": 22819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22746,
											"end": 22819,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22746,
											"end": 22819,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22828,
											"end": 22921,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 22917,
											"end": 22920,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22828,
											"end": 22921,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 22828,
											"end": 22921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22828,
											"end": 22921,
											"name": "tag",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 22828,
											"end": 22921,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22946,
											"end": 22948,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22941,
											"end": 22944,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22937,
											"end": 22949,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22930,
											"end": 22949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22930,
											"end": 22949,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22590,
											"end": 22955,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22590,
											"end": 22955,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22590,
											"end": 22955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22590,
											"end": 22955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22961,
											"end": 23380,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 22961,
											"end": 23380,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23127,
											"end": 23131,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23165,
											"end": 23167,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23154,
											"end": 23163,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23150,
											"end": 23168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23142,
											"end": 23168,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23142,
											"end": 23168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23214,
											"end": 23223,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23208,
											"end": 23212,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23204,
											"end": 23224,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 23200,
											"end": 23201,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23189,
											"end": 23198,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23185,
											"end": 23202,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23178,
											"end": 23225,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23242,
											"end": 23373,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 23368,
											"end": 23372,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23242,
											"end": 23373,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 23242,
											"end": 23373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23242,
											"end": 23373,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 23242,
											"end": 23373,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23234,
											"end": 23373,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23234,
											"end": 23373,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22961,
											"end": 23380,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22961,
											"end": 23380,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22961,
											"end": 23380,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22961,
											"end": 23380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23386,
											"end": 23548,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 23386,
											"end": 23548,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23526,
											"end": 23540,
											"name": "PUSH",
											"source": 12,
											"value": "7472616E73666572206665650000000000000000000000000000000000000000"
										},
										{
											"begin": 23522,
											"end": 23523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23514,
											"end": 23520,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23510,
											"end": 23524,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23503,
											"end": 23541,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23386,
											"end": 23548,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23386,
											"end": 23548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23554,
											"end": 23920,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 23554,
											"end": 23920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23696,
											"end": 23699,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23717,
											"end": 23784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 23781,
											"end": 23783,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 23776,
											"end": 23779,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23717,
											"end": 23784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 23717,
											"end": 23784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23717,
											"end": 23784,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 23717,
											"end": 23784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23710,
											"end": 23784,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23710,
											"end": 23784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23793,
											"end": 23886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 23882,
											"end": 23885,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23793,
											"end": 23886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 23793,
											"end": 23886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23793,
											"end": 23886,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 23793,
											"end": 23886,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23911,
											"end": 23913,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23906,
											"end": 23909,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23902,
											"end": 23914,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23895,
											"end": 23914,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23895,
											"end": 23914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23554,
											"end": 23920,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23554,
											"end": 23920,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23554,
											"end": 23920,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23554,
											"end": 23920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23926,
											"end": 24345,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 23926,
											"end": 24345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24092,
											"end": 24096,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24130,
											"end": 24132,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24119,
											"end": 24128,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24115,
											"end": 24133,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24107,
											"end": 24133,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24107,
											"end": 24133,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24179,
											"end": 24188,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24173,
											"end": 24177,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24169,
											"end": 24189,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24165,
											"end": 24166,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24154,
											"end": 24163,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24150,
											"end": 24167,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24143,
											"end": 24190,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24207,
											"end": 24338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 24333,
											"end": 24337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24207,
											"end": 24338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 24207,
											"end": 24338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24207,
											"end": 24338,
											"name": "tag",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 24207,
											"end": 24338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24199,
											"end": 24338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24199,
											"end": 24338,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23926,
											"end": 24345,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23926,
											"end": 24345,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23926,
											"end": 24345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23926,
											"end": 24345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24351,
											"end": 24512,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 24351,
											"end": 24512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24491,
											"end": 24504,
											"name": "PUSH",
											"source": 12,
											"value": "47616D6520657869737473000000000000000000000000000000000000000000"
										},
										{
											"begin": 24487,
											"end": 24488,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24479,
											"end": 24485,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24475,
											"end": 24489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24468,
											"end": 24505,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24351,
											"end": 24512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24351,
											"end": 24512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24518,
											"end": 24884,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 24518,
											"end": 24884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24660,
											"end": 24663,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24681,
											"end": 24748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 24745,
											"end": 24747,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 24740,
											"end": 24743,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24681,
											"end": 24748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 24681,
											"end": 24748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24681,
											"end": 24748,
											"name": "tag",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 24681,
											"end": 24748,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24674,
											"end": 24748,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24674,
											"end": 24748,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24757,
											"end": 24850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 24846,
											"end": 24849,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24757,
											"end": 24850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 24757,
											"end": 24850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24757,
											"end": 24850,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 24757,
											"end": 24850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24875,
											"end": 24877,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24870,
											"end": 24873,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24866,
											"end": 24878,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24859,
											"end": 24878,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24859,
											"end": 24878,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24518,
											"end": 24884,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24518,
											"end": 24884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24518,
											"end": 24884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24518,
											"end": 24884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24890,
											"end": 25309,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 24890,
											"end": 25309,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25056,
											"end": 25060,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25094,
											"end": 25096,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25083,
											"end": 25092,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25079,
											"end": 25097,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25071,
											"end": 25097,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25071,
											"end": 25097,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25143,
											"end": 25152,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25137,
											"end": 25141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25133,
											"end": 25153,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 25129,
											"end": 25130,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25118,
											"end": 25127,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25114,
											"end": 25131,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25107,
											"end": 25154,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25171,
											"end": 25302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 25297,
											"end": 25301,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25171,
											"end": 25302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 25171,
											"end": 25302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25171,
											"end": 25302,
											"name": "tag",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 25171,
											"end": 25302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25163,
											"end": 25302,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25163,
											"end": 25302,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24890,
											"end": 25309,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24890,
											"end": 25309,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24890,
											"end": 25309,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24890,
											"end": 25309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25315,
											"end": 25463,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 25315,
											"end": 25463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25417,
											"end": 25428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25454,
											"end": 25457,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25439,
											"end": 25457,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25439,
											"end": 25457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25315,
											"end": 25463,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25315,
											"end": 25463,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25315,
											"end": 25463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25315,
											"end": 25463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25315,
											"end": 25463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25469,
											"end": 25642,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 25469,
											"end": 25642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25609,
											"end": 25634,
											"name": "PUSH",
											"source": 12,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 25605,
											"end": 25606,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25597,
											"end": 25603,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25593,
											"end": 25607,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25586,
											"end": 25635,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25469,
											"end": 25642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25469,
											"end": 25642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25648,
											"end": 26050,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 25648,
											"end": 26050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25808,
											"end": 25811,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25829,
											"end": 25914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 25911,
											"end": 25913,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 25906,
											"end": 25909,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25829,
											"end": 25914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 25829,
											"end": 25914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25829,
											"end": 25914,
											"name": "tag",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 25829,
											"end": 25914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25822,
											"end": 25914,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25822,
											"end": 25914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25923,
											"end": 26016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 26012,
											"end": 26015,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25923,
											"end": 26016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 25923,
											"end": 26016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25923,
											"end": 26016,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 25923,
											"end": 26016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26041,
											"end": 26043,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 26036,
											"end": 26039,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26032,
											"end": 26044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26025,
											"end": 26044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26025,
											"end": 26044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25648,
											"end": 26050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25648,
											"end": 26050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25648,
											"end": 26050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25648,
											"end": 26050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26056,
											"end": 26155,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 26056,
											"end": 26155,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26108,
											"end": 26114,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26142,
											"end": 26147,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26136,
											"end": 26148,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 26126,
											"end": 26148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26126,
											"end": 26148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26056,
											"end": 26155,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26056,
											"end": 26155,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26056,
											"end": 26155,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26056,
											"end": 26155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26161,
											"end": 26407,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 26161,
											"end": 26407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26242,
											"end": 26243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26252,
											"end": 26365,
											"name": "tag",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 26252,
											"end": 26365,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26266,
											"end": 26272,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26263,
											"end": 26264,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26260,
											"end": 26273,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 26252,
											"end": 26365,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 26252,
											"end": 26365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 26252,
											"end": 26365,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 26351,
											"end": 26352,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 26346,
											"end": 26349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26342,
											"end": 26353,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26336,
											"end": 26354,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 26332,
											"end": 26333,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26327,
											"end": 26330,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 26323,
											"end": 26334,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26316,
											"end": 26355,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26288,
											"end": 26290,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26285,
											"end": 26286,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26281,
											"end": 26291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26276,
											"end": 26291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26276,
											"end": 26291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26252,
											"end": 26365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 26252,
											"end": 26365,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26252,
											"end": 26365,
											"name": "tag",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 26252,
											"end": 26365,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26399,
											"end": 26400,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26390,
											"end": 26396,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 26385,
											"end": 26388,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 26381,
											"end": 26397,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26374,
											"end": 26401,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26223,
											"end": 26407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26161,
											"end": 26407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26161,
											"end": 26407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26161,
											"end": 26407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26161,
											"end": 26407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26413,
											"end": 26803,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 26413,
											"end": 26803,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26519,
											"end": 26522,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26547,
											"end": 26586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 26580,
											"end": 26585,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26547,
											"end": 26586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 26547,
											"end": 26586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26547,
											"end": 26586,
											"name": "tag",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 26547,
											"end": 26586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26602,
											"end": 26691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 26684,
											"end": 26690,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26679,
											"end": 26682,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 26602,
											"end": 26691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 26602,
											"end": 26691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26602,
											"end": 26691,
											"name": "tag",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 26602,
											"end": 26691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26595,
											"end": 26691,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 26595,
											"end": 26691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26700,
											"end": 26765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 26758,
											"end": 26764,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26753,
											"end": 26756,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 26746,
											"end": 26750,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26739,
											"end": 26744,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 26735,
											"end": 26751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26700,
											"end": 26765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 26700,
											"end": 26765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26700,
											"end": 26765,
											"name": "tag",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 26700,
											"end": 26765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26790,
											"end": 26796,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 26785,
											"end": 26788,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 26781,
											"end": 26797,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26774,
											"end": 26797,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26774,
											"end": 26797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26523,
											"end": 26803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26413,
											"end": 26803,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 26413,
											"end": 26803,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26413,
											"end": 26803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26413,
											"end": 26803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26413,
											"end": 26803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26809,
											"end": 26976,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 26809,
											"end": 26976,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26949,
											"end": 26968,
											"name": "PUSH",
											"source": 12,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 26945,
											"end": 26946,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26937,
											"end": 26943,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26933,
											"end": 26947,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26926,
											"end": 26969,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26809,
											"end": 26976,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26809,
											"end": 26976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26982,
											"end": 27384,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 26982,
											"end": 27384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27142,
											"end": 27145,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27163,
											"end": 27248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 27245,
											"end": 27247,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 27240,
											"end": 27243,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27163,
											"end": 27248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 27163,
											"end": 27248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27163,
											"end": 27248,
											"name": "tag",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 27163,
											"end": 27248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27156,
											"end": 27248,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27156,
											"end": 27248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27257,
											"end": 27350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 27346,
											"end": 27349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27257,
											"end": 27350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 27257,
											"end": 27350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27257,
											"end": 27350,
											"name": "tag",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 27257,
											"end": 27350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27375,
											"end": 27377,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 27370,
											"end": 27373,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27366,
											"end": 27378,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27359,
											"end": 27378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27359,
											"end": 27378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26982,
											"end": 27384,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26982,
											"end": 27384,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26982,
											"end": 27384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26982,
											"end": 27384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27390,
											"end": 28357,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 27390,
											"end": 28357,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27772,
											"end": 27775,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27794,
											"end": 27942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 27938,
											"end": 27941,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27794,
											"end": 27942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 27794,
											"end": 27942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27794,
											"end": 27942,
											"name": "tag",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 27794,
											"end": 27942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27787,
											"end": 27942,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27787,
											"end": 27942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27959,
											"end": 28054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 28050,
											"end": 28053,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28041,
											"end": 28047,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 27959,
											"end": 28054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 27959,
											"end": 28054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27959,
											"end": 28054,
											"name": "tag",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 27959,
											"end": 28054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27952,
											"end": 28054,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27952,
											"end": 28054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28071,
											"end": 28219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 28215,
											"end": 28218,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28071,
											"end": 28219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 28071,
											"end": 28219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28071,
											"end": 28219,
											"name": "tag",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 28071,
											"end": 28219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28064,
											"end": 28219,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28064,
											"end": 28219,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28236,
											"end": 28331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 28327,
											"end": 28330,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28318,
											"end": 28324,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 28236,
											"end": 28331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 28236,
											"end": 28331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28236,
											"end": 28331,
											"name": "tag",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 28236,
											"end": 28331,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28229,
											"end": 28331,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28229,
											"end": 28331,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28348,
											"end": 28351,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28341,
											"end": 28351,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28341,
											"end": 28351,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27390,
											"end": 28357,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 27390,
											"end": 28357,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 27390,
											"end": 28357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27390,
											"end": 28357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27390,
											"end": 28357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27390,
											"end": 28357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28363,
											"end": 28465,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 28363,
											"end": 28465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28404,
											"end": 28410,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28455,
											"end": 28457,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 28451,
											"end": 28458,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 28446,
											"end": 28448,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 28439,
											"end": 28444,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28435,
											"end": 28449,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28431,
											"end": 28459,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 28421,
											"end": 28459,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28421,
											"end": 28459,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28363,
											"end": 28465,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28363,
											"end": 28465,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28363,
											"end": 28465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28363,
											"end": 28465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28471,
											"end": 28848,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 28471,
											"end": 28848,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28559,
											"end": 28562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28587,
											"end": 28626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 28620,
											"end": 28625,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28587,
											"end": 28626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 28587,
											"end": 28626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28587,
											"end": 28626,
											"name": "tag",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 28587,
											"end": 28626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28642,
											"end": 28713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "635"
										},
										{
											"begin": 28706,
											"end": 28712,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28701,
											"end": 28704,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 28642,
											"end": 28713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 28642,
											"end": 28713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28642,
											"end": 28713,
											"name": "tag",
											"source": 12,
											"value": "635"
										},
										{
											"begin": 28642,
											"end": 28713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28635,
											"end": 28713,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 28635,
											"end": 28713,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28722,
											"end": 28787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 28780,
											"end": 28786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28775,
											"end": 28778,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 28768,
											"end": 28772,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28761,
											"end": 28766,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 28757,
											"end": 28773,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28722,
											"end": 28787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 28722,
											"end": 28787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28722,
											"end": 28787,
											"name": "tag",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 28722,
											"end": 28787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28812,
											"end": 28841,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "637"
										},
										{
											"begin": 28834,
											"end": 28840,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28812,
											"end": 28841,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 28812,
											"end": 28841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28812,
											"end": 28841,
											"name": "tag",
											"source": 12,
											"value": "637"
										},
										{
											"begin": 28812,
											"end": 28841,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28807,
											"end": 28810,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 28803,
											"end": 28842,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28796,
											"end": 28842,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28796,
											"end": 28842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28563,
											"end": 28848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28471,
											"end": 28848,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28471,
											"end": 28848,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28471,
											"end": 28848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28471,
											"end": 28848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28471,
											"end": 28848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28854,
											"end": 29167,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 28854,
											"end": 29167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28967,
											"end": 28971,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29005,
											"end": 29007,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28994,
											"end": 29003,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28990,
											"end": 29008,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28982,
											"end": 29008,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28982,
											"end": 29008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29054,
											"end": 29063,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29048,
											"end": 29052,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29044,
											"end": 29064,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 29040,
											"end": 29041,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29029,
											"end": 29038,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29025,
											"end": 29042,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29018,
											"end": 29065,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 29082,
											"end": 29160,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 29155,
											"end": 29159,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29146,
											"end": 29152,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 29082,
											"end": 29160,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 29082,
											"end": 29160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29082,
											"end": 29160,
											"name": "tag",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 29082,
											"end": 29160,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29074,
											"end": 29160,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29074,
											"end": 29160,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28854,
											"end": 29167,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28854,
											"end": 29167,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28854,
											"end": 29167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28854,
											"end": 29167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28854,
											"end": 29167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29173,
											"end": 29353,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 29173,
											"end": 29353,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29221,
											"end": 29298,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29218,
											"end": 29219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29211,
											"end": 29299,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 29318,
											"end": 29322,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 29315,
											"end": 29316,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 29308,
											"end": 29323,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 29342,
											"end": 29346,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 29339,
											"end": 29340,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29332,
											"end": 29347,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 29359,
											"end": 29539,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 29359,
											"end": 29539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29407,
											"end": 29484,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29404,
											"end": 29405,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29397,
											"end": 29485,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 29504,
											"end": 29508,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 29501,
											"end": 29502,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 29494,
											"end": 29509,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 29528,
											"end": 29532,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 29525,
											"end": 29526,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29518,
											"end": 29533,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 29545,
											"end": 29716,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 29545,
											"end": 29716,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29584,
											"end": 29587,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29607,
											"end": 29631,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "643"
										},
										{
											"begin": 29625,
											"end": 29630,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29607,
											"end": 29631,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 29607,
											"end": 29631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29607,
											"end": 29631,
											"name": "tag",
											"source": 12,
											"value": "643"
										},
										{
											"begin": 29607,
											"end": 29631,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29598,
											"end": 29631,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29598,
											"end": 29631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29653,
											"end": 29657,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29646,
											"end": 29651,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29643,
											"end": 29658,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 29640,
											"end": 29681,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 29640,
											"end": 29681,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 29661,
											"end": 29679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 29661,
											"end": 29679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 29661,
											"end": 29679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29661,
											"end": 29679,
											"name": "tag",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 29661,
											"end": 29679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29640,
											"end": 29681,
											"name": "tag",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 29640,
											"end": 29681,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29708,
											"end": 29709,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 29701,
											"end": 29706,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29697,
											"end": 29710,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 29690,
											"end": 29710,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29690,
											"end": 29710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29545,
											"end": 29716,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29545,
											"end": 29716,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29545,
											"end": 29716,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29545,
											"end": 29716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29722,
											"end": 29904,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 29722,
											"end": 29904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29862,
											"end": 29896,
											"name": "PUSH",
											"source": 12,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 29858,
											"end": 29859,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29850,
											"end": 29856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29846,
											"end": 29860,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29839,
											"end": 29897,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 29722,
											"end": 29904,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29722,
											"end": 29904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29910,
											"end": 30276,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 29910,
											"end": 30276,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30052,
											"end": 30055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30073,
											"end": 30140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 30137,
											"end": 30139,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 30132,
											"end": 30135,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30073,
											"end": 30140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 30073,
											"end": 30140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30073,
											"end": 30140,
											"name": "tag",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 30073,
											"end": 30140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30066,
											"end": 30140,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 30066,
											"end": 30140,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30149,
											"end": 30242,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "649"
										},
										{
											"begin": 30238,
											"end": 30241,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30149,
											"end": 30242,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 30149,
											"end": 30242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30149,
											"end": 30242,
											"name": "tag",
											"source": 12,
											"value": "649"
										},
										{
											"begin": 30149,
											"end": 30242,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30267,
											"end": 30269,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 30262,
											"end": 30265,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30258,
											"end": 30270,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30251,
											"end": 30270,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30251,
											"end": 30270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29910,
											"end": 30276,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29910,
											"end": 30276,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29910,
											"end": 30276,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29910,
											"end": 30276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30282,
											"end": 30701,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 30282,
											"end": 30701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30448,
											"end": 30452,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30486,
											"end": 30488,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 30475,
											"end": 30484,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30471,
											"end": 30489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30463,
											"end": 30489,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30463,
											"end": 30489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30535,
											"end": 30544,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30529,
											"end": 30533,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30525,
											"end": 30545,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 30521,
											"end": 30522,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30510,
											"end": 30519,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30506,
											"end": 30523,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30499,
											"end": 30546,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 30563,
											"end": 30694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 30689,
											"end": 30693,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30563,
											"end": 30694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 30563,
											"end": 30694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30563,
											"end": 30694,
											"name": "tag",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 30563,
											"end": 30694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30555,
											"end": 30694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30555,
											"end": 30694,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30282,
											"end": 30701,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 30282,
											"end": 30701,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30282,
											"end": 30701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30282,
											"end": 30701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"contracts/4_Game.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/IAccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/interfaces/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"bet(uint256,uint256)": "6ffcc719",
							"feePercent()": "7fd6f15c",
							"feeTotal()": "37bfc1ef",
							"finish(uint256,address)": "2c32b187",
							"gameIds(uint256)": "d82c13f0",
							"gameUsers(uint256)": "16b169c4",
							"games(uint256)": "117a5b90",
							"getBetting(uint256,address)": "34fcc3e7",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"listGameIds()": "9bc01b36",
							"myBetting(uint256)": "ce33bd74",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setErc20(address)": "ee9b80a4",
							"startGame(uint256)": "e5ed1d59",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenContract()": "55a373d6",
							"withdrawAll()": "853828b6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"batter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Bat\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"GameFinish\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"GameStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"finish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gameIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"gameUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalBettings\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"better\",\"type\":\"address\"}],\"name\":\"getBetting\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listGameIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"myBetting\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"setErc20\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newId\",\"type\":\"uint256\"}],\"name\":\"startGame\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/4_Game.sol\":\"GameContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/4_Game.sol\":{\"keccak256\":\"0x2fce53c492c04b5f7ea62973e992926e84b7dc3b2dcc120f90172944fdb78c33\",\"urls\":[\"bzz-raw://e37507aa4ccad66dc866aebab0351fea5742c4b2c78f5bf5509dce899596c3da\",\"dweb:/ipfs/QmVF39aV8dKG6A2zTzF1kXYxpivHmqiAgwUQbscqh2BjmM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 502,
								"contract": "contracts/4_Game.sol:GameContract",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)497_storage)"
							},
							{
								"astId": 56,
								"contract": "contracts/4_Game.sol:GameContract",
								"label": "games",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(Game)27_storage)"
							},
							{
								"astId": 59,
								"contract": "contracts/4_Game.sol:GameContract",
								"label": "gameIds",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 61,
								"contract": "contracts/4_Game.sol:GameContract",
								"label": "tokenContract",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 64,
								"contract": "contracts/4_Game.sol:GameContract",
								"label": "feePercent",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 67,
								"contract": "contracts/4_Game.sol:GameContract",
								"label": "feeTotal",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)497_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)497_storage"
							},
							"t_mapping(t_uint256,t_struct(Game)27_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct GameContract.Game)",
								"numberOfBytes": "32",
								"value": "t_struct(Game)27_storage"
							},
							"t_struct(Game)27_storage": {
								"encoding": "inplace",
								"label": "struct GameContract.Game",
								"members": [
									{
										"astId": 15,
										"contract": "contracts/4_Game.sol:GameContract",
										"label": "initialized",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 19,
										"contract": "contracts/4_Game.sol:GameContract",
										"label": "bettings",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 21,
										"contract": "contracts/4_Game.sol:GameContract",
										"label": "totalBettings",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 24,
										"contract": "contracts/4_Game.sol:GameContract",
										"label": "users",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 26,
										"contract": "contracts/4_Game.sol:GameContract",
										"label": "winner",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(RoleData)497_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 494,
										"contract": "contracts/4_Game.sol:GameContract",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 496,
										"contract": "contracts/4_Game.sol:GameContract",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 502,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)497_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)497_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)497_storage"
							},
							"t_struct(RoleData)497_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 494,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 496,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 874,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f4d04fbae464e5fdeabf372f83559855562d3595f5722ad093fff14608df0f6764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4d04fbae464e5fdeabf372f83559855562d3595f5722ad093fff14608df0f6764736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xD0 0x4F 0xBA 0xE4 PUSH5 0xE5FDEABF37 0x2F DUP4 SSTORE SWAP9 SSTORE JUMP 0x2D CALLDATALOAD SWAP6 CREATE2 PUSH19 0x2AD093FFF14608DF0F6764736F6C6343000812 STOP CALLER ",
							"sourceMap": "220:2559:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4d04fbae464e5fdeabf372f83559855562d3595f5722ad093fff14608df0f6764736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xD0 0x4F 0xBA 0xE4 PUSH5 0xE5FDEABF37 0x2F DUP4 SSTORE SWAP9 SSTORE JUMP 0x2D CALLDATALOAD SWAP6 CREATE2 PUSH19 0x2AD093FFF14608DF0F6764736F6C6343000812 STOP CALLER ",
							"sourceMap": "220:2559:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f4d04fbae464e5fdeabf372f83559855562d3595f5722ad093fff14608df0f6764736f6c63430008120033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"contracts/4_Game.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/IAccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/interfaces/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000d2b8168983d1b7335781e76ffbaf521927610244825bb8364ec9db1bc5d8ac64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122000d2b8168983d1b7335781e76ffbaf521927610244825bb8364ec9db1bc5d8ac64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xD2 0xB8 AND DUP10 DUP4 0xD1 0xB7 CALLER JUMPI DUP2 0xE7 PUSH16 0xFBAF521927610244825BB8364EC9DB1B 0xC5 0xD8 0xAC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "202:12582:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122000d2b8168983d1b7335781e76ffbaf521927610244825bb8364ec9db1bc5d8ac64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xD2 0xB8 AND DUP10 DUP4 0xD1 0xB7 CALLER JUMPI DUP2 0xE7 PUSH16 0xFBAF521927610244825BB8364EC9DB1B 0xC5 0xD8 0xAC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "202:12582:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000d2b8168983d1b7335781e76ffbaf521927610244825bb8364ec9db1bc5d8ac64736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"contracts/4_Game.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/IAccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/interfaces/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122046c9e9e560c6be9f363b73ee561532e9679df0d0ea5e8e142ef4a413d00fc89064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122046c9e9e560c6be9f363b73ee561532e9679df0d0ea5e8e142ef4a413d00fc89064736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xC9 0xE9 0xE5 PUSH1 0xC6 0xBE SWAP16 CALLDATASIZE EXTCODESIZE PUSH20 0xEE561532E9679DF0D0EA5E8E142EF4A413D00FC8 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "215:1047:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122046c9e9e560c6be9f363b73ee561532e9679df0d0ea5e8e142ef4a413d00fc89064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xC9 0xE9 0xE5 PUSH1 0xC6 0xBE SWAP16 CALLDATASIZE EXTCODESIZE PUSH20 0xEE561532E9679DF0D0EA5E8E142EF4A413D00FC8 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "215:1047:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122046c9e9e560c6be9f363b73ee561532e9679df0d0ea5e8e142ef4a413d00fc89064736f6c63430008120033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/4_Game.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/IAccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/interfaces/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/4_Game.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/4_Game.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/4_Game.sol": {
				"ast": {
					"absolutePath": "contracts/4_Game.sol",
					"exportedSymbols": {
						"AccessControl": [
							793
						],
						"Context": [
							1082
						],
						"GameContract": [
							477
						],
						"IERC20": [
							1060
						],
						"Ownable": [
							979
						]
					},
					"id": 478,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/interfaces/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/interfaces/IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 478,
							"sourceUnit": 983,
							"src": "162:122:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1060,
										"src": "170:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 478,
							"sourceUnit": 1083,
							"src": "286:119:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1082,
										"src": "294:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 478,
							"sourceUnit": 980,
							"src": "407:120:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "415:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 478,
							"sourceUnit": 794,
							"src": "647:133:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "AccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 793,
										"src": "655:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1031:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1082,
										"src": "1031:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1031:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "AccessControl",
										"nameLocations": [
											"1040:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 793,
										"src": "1040:13:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "1040:13:0"
								}
							],
							"canonicalName": "GameContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477,
								793,
								1335,
								1347,
								866,
								1082
							],
							"name": "GameContract",
							"nameLocation": "1015:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "GameContract.Game",
									"id": 27,
									"members": [
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "initialized",
											"nameLocation": "1089:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "1084:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 14,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1084:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "bettings",
											"nameLocation": "1136:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "1111:33:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 18,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1111:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1130:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "totalBettings",
											"nameLocation": "1160:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "1155:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 20,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1155:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "users",
											"nameLocation": "1194:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "1184:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 23,
												"nodeType": "ArrayTypeName",
												"src": "1184:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 26,
											"mutability": "mutable",
											"name": "winner",
											"nameLocation": "1218:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "1210:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1210:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Game",
									"nameLocation": "1068:4:0",
									"nodeType": "StructDefinition",
									"scope": 477,
									"src": "1061:171:0",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b5e8a4470f7bcac7f2c0f3e23471bd7016a9f6f049884cd27dfa8960f361287b",
									"id": 31,
									"name": "GameStart",
									"nameLocation": "1246:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": false,
												"mutability": "mutable",
												"name": "gameId",
												"nameLocation": "1261:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1256:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:13:0"
									},
									"src": "1240:29:0"
								},
								{
									"anonymous": false,
									"eventSelector": "fb4c42ca2d93f0a673c2125aaa3c7b3fbeee9533e34b1f2c0f8f5c4d4d8bf106",
									"id": 37,
									"name": "Bat",
									"nameLocation": "1281:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "batter",
												"nameLocation": "1293:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1285:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1306:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1301:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1301:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:29:0"
									},
									"src": "1275:39:0"
								},
								{
									"anonymous": false,
									"eventSelector": "3b6f6a175407b0e278b9798f8be45bcc2cdba01a995bf768f528b457d7e27e85",
									"id": 45,
									"name": "GameFinish",
									"nameLocation": "1326:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"indexed": false,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "1345:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1358:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1353:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1353:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1371:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1366:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1366:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1336:39:0"
									},
									"src": "1320:56:0"
								},
								{
									"anonymous": false,
									"eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
									"id": 51,
									"name": "Withdraw",
									"nameLocation": "1388:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawer",
												"nameLocation": "1405:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1397:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1397:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1422:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1417:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1417:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:33:0"
									},
									"src": "1382:48:0"
								},
								{
									"constant": false,
									"functionSelector": "117a5b90",
									"id": 56,
									"mutability": "mutable",
									"name": "games",
									"nameLocation": "1467:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "1438:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
										"typeString": "mapping(uint256 => struct GameContract.Game)"
									},
									"typeName": {
										"id": 55,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 52,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1446:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1438:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
											"typeString": "mapping(uint256 => struct GameContract.Game)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 54,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 53,
												"name": "Game",
												"nameLocations": [
													"1454:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 27,
												"src": "1454:4:0"
											},
											"referencedDeclaration": 27,
											"src": "1454:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Game_$27_storage_ptr",
												"typeString": "struct GameContract.Game"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d82c13f0",
									"id": 59,
									"mutability": "mutable",
									"name": "gameIds",
									"nameLocation": "1493:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "1479:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 57,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1479:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 58,
										"nodeType": "ArrayTypeName",
										"src": "1479:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "55a373d6",
									"id": 61,
									"mutability": "mutable",
									"name": "tokenContract",
									"nameLocation": "1522:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "1507:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 60,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1507:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7fd6f15c",
									"id": 64,
									"mutability": "mutable",
									"name": "feePercent",
									"nameLocation": "1554:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "1542:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 62,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1542:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1567:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "37bfc1ef",
									"id": 67,
									"mutability": "mutable",
									"name": "feeTotal",
									"nameLocation": "1588:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 477,
									"src": "1576:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 65,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1576:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 66,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1599:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1623:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 71,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "1645:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 72,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1665:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1669:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1665:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 70,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "1634:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1634:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1634:42:0"
											}
										]
									},
									"id": 77,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1620:2:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1623:0:0"
									},
									"scope": 477,
									"src": "1609:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "1784:68:0",
										"statements": [
											{
												"expression": {
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 87,
														"name": "tokenContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "1795:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 88,
														"name": "newContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1811:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1795:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1795:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1840:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 86,
												"id": 92,
												"nodeType": "Return",
												"src": "1833:11:0"
											}
										]
									},
									"functionSelector": "ee9b80a4",
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 82,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 505,
													"src": "1749:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 83,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 81,
												"name": "onlyRole",
												"nameLocations": [
													"1740:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 516,
												"src": "1740:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1740:28:0"
										}
									],
									"name": "setErc20",
									"nameLocation": "1703:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "newContract",
												"nameLocation": "1720:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1712:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:21:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1778:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 84,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1778:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1777:6:0"
									},
									"scope": 477,
									"src": "1694:158:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1913:202:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 102,
																		"name": "games",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 56,
																		"src": "1932:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																			"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																		}
																	},
																	"id": 104,
																	"indexExpression": {
																		"id": 103,
																		"name": "newId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "1938:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1932:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Game_$27_storage",
																		"typeString": "struct GameContract.Game storage ref"
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1945:11:0",
																"memberName": "initialized",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 15,
																"src": "1932:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1960:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1932:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d6520657869737473",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1967:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23c3753c0f6fa973971f222b3e4423b5d431231c5fc06f10050747681f083f9f",
																"typeString": "literal_string \"Game exists\""
															},
															"value": "Game exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23c3753c0f6fa973971f222b3e4423b5d431231c5fc06f10050747681f083f9f",
																"typeString": "literal_string \"Game exists\""
															}
														],
														"id": 101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1924:57:0"
											},
											{
												"expression": {
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 111,
																"name": "games",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "1992:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																	"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																}
															},
															"id": 113,
															"indexExpression": {
																"id": 112,
																"name": "newId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "1998:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1992:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Game_$27_storage",
																"typeString": "struct GameContract.Game storage ref"
															}
														},
														"id": 114,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2005:11:0",
														"memberName": "initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 15,
														"src": "1992:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2019:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1992:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "1992:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 121,
															"name": "newId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "2047:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 118,
															"name": "gameIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "2034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2042:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2034:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2034:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "2034:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 125,
															"name": "newId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "2079:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 124,
														"name": "GameStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "2069:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "EmitStatement",
												"src": "2064:21:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2103:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 100,
												"id": 129,
												"nodeType": "Return",
												"src": "2096:11:0"
											}
										]
									},
									"functionSelector": "e5ed1d59",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startGame",
									"nameLocation": "1869:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "newId",
												"nameLocation": "1884:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1879:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1879:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1878:12:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1906:6:0"
									},
									"scope": 477,
									"src": "1860:255:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "2182:33:0",
										"statements": [
											{
												"expression": {
													"id": 137,
													"name": "gameIds",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 59,
													"src": "2200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 136,
												"id": 138,
												"nodeType": "Return",
												"src": "2193:14:0"
											}
										]
									},
									"functionSelector": "9bc01b36",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "listGameIds",
									"nameLocation": "2132:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2143:2:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2167:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 133,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2167:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 134,
													"nodeType": "ArrayTypeName",
													"src": "2167:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:15:0"
									},
									"scope": 477,
									"src": "2123:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "2284:630:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 150,
																	"name": "games",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "2303:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																		"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																	}
																},
																"id": 152,
																"indexExpression": {
																	"id": 151,
																	"name": "gameId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "2309:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2303:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Game_$27_storage",
																	"typeString": "struct GameContract.Game storage ref"
																}
															},
															"id": 153,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2317:11:0",
															"memberName": "initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "2303:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d6520496e697469616c697a6564",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2330:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7",
																"typeString": "literal_string \"Game Initialized\""
															},
															"value": "Game Initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7",
																"typeString": "literal_string \"Game Initialized\""
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2295:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2295:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "2295:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 158,
																		"name": "games",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 56,
																		"src": "2368:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																			"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																		}
																	},
																	"id": 160,
																	"indexExpression": {
																		"id": 159,
																		"name": "gameId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 142,
																		"src": "2374:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2368:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Game_$27_storage",
																		"typeString": "struct GameContract.Game storage ref"
																	}
																},
																"id": 161,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2382:6:0",
																"memberName": "winner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 26,
																"src": "2368:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2400:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2392:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 162,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2392:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2392:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2368:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46696e6973686564",
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2404:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8",
																"typeString": "literal_string \"Finished\""
															},
															"value": "Finished"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8",
																"typeString": "literal_string \"Finished\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2360:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2360:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "2360:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 175,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2466:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2470:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2466:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 172,
																				"name": "tokenContract",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 61,
																				"src": "2441:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 171,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "2434:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1060_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2434:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1060",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2456:9:0",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1017,
																	"src": "2434:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2434:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 178,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "2481:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2434:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456e6f7567682062616c616e6365",
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_579284958e00ccca8fac473d6ff2f4e7d7549c4c48cc4d5894e132ebb3661612",
																"typeString": "literal_string \"Enough balance\""
															},
															"value": "Enough balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_579284958e00ccca8fac473d6ff2f4e7d7549c4c48cc4d5894e132ebb3661612",
																"typeString": "literal_string \"Enough balance\""
															}
														],
														"id": 170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2426:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2426:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "2426:80:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 188,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2562:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2566:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2562:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 192,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2582:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_GameContract_$477",
																				"typeString": "contract GameContract"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_GameContract_$477",
																				"typeString": "contract GameContract"
																			}
																		],
																		"id": 191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 190,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2574:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2574:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 194,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "2589:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 185,
																			"name": "tokenContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "2534:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 184,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1060,
																		"src": "2527:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1060_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1060",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2549:12:0",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1059,
																"src": "2527:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2527:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e736665722073686f756c642073756363657373",
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2598:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32f15a745716df67b5b6c00ce98db178058e0917cf89b8509cdd41355d02fd89",
																"typeString": "literal_string \"Transfer should success\""
															},
															"value": "Transfer should success"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32f15a745716df67b5b6c00ce98db178058e0917cf89b8509cdd41355d02fd89",
																"typeString": "literal_string \"Transfer should success\""
															}
														],
														"id": 183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2519:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2519:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2519:105:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 199,
																	"name": "games",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "2639:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																		"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																	}
																},
																"id": 201,
																"indexExpression": {
																	"id": 200,
																	"name": "gameId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "2645:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2639:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Game_$27_storage",
																	"typeString": "struct GameContract.Game storage ref"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2653:8:0",
															"memberName": "bettings",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 19,
															"src": "2639:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 205,
														"indexExpression": {
															"expression": {
																"id": 203,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2662:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2666:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2662:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2639:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2677:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2639:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 218,
												"nodeType": "IfStatement",
												"src": "2635:108:0",
												"trueBody": {
													"id": 217,
													"nodeType": "Block",
													"src": "2680:63:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 213,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2720:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2724:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2720:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 208,
																				"name": "games",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 56,
																				"src": "2695:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																					"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																				}
																			},
																			"id": 210,
																			"indexExpression": {
																				"id": 209,
																				"name": "gameId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 142,
																				"src": "2701:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2695:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Game_$27_storage",
																				"typeString": "struct GameContract.Game storage ref"
																			}
																		},
																		"id": 211,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2709:5:0",
																		"memberName": "users",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 24,
																		"src": "2695:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2715:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2695:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2695:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 216,
															"nodeType": "ExpressionStatement",
															"src": "2695:36:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 219,
																	"name": "games",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "2753:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																		"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																	}
																},
																"id": 221,
																"indexExpression": {
																	"id": 220,
																	"name": "gameId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "2759:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2753:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Game_$27_storage",
																	"typeString": "struct GameContract.Game storage ref"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2767:8:0",
															"memberName": "bettings",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 19,
															"src": "2753:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 225,
														"indexExpression": {
															"expression": {
																"id": 223,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2776:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2780:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2776:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2753:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 226,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "2791:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2753:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "2753:44:0"
											},
											{
												"expression": {
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 229,
																"name": "games",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "2808:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																	"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																}
															},
															"id": 231,
															"indexExpression": {
																"id": 230,
																"name": "gameId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "2814:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2808:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Game_$27_storage",
																"typeString": "struct GameContract.Game storage ref"
															}
														},
														"id": 232,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2822:13:0",
														"memberName": "totalBettings",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "2808:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 233,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "2839:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2808:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "2808:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 237,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2865:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2869:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2865:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 239,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "2877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 236,
														"name": "Bat",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2861:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2861:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "EmitStatement",
												"src": "2856:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2902:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 148,
												"id": 243,
												"nodeType": "Return",
												"src": "2895:11:0"
											}
										]
									},
									"functionSelector": "6ffcc719",
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bet",
									"nameLocation": "2232:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "gameId",
												"nameLocation": "2241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2236:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2236:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2254:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2249:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2235:26:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2278:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2278:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2277:6:0"
									},
									"scope": 477,
									"src": "2223:691:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3018:690:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 258,
																	"name": "games",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "3037:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																		"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																	}
																},
																"id": 260,
																"indexExpression": {
																	"id": 259,
																	"name": "gameId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "3043:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3037:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Game_$27_storage",
																	"typeString": "struct GameContract.Game storage ref"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3051:11:0",
															"memberName": "initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "3037:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d6520496e697469616c697a6564",
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3064:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7",
																"typeString": "literal_string \"Game Initialized\""
															},
															"value": "Game Initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7",
																"typeString": "literal_string \"Game Initialized\""
															}
														],
														"id": 257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3029:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3029:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "3029:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 266,
																		"name": "games",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 56,
																		"src": "3102:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																			"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																		}
																	},
																	"id": 268,
																	"indexExpression": {
																		"id": 267,
																		"name": "gameId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 247,
																		"src": "3108:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3102:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Game_$27_storage",
																		"typeString": "struct GameContract.Game storage ref"
																	}
																},
																"id": 269,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3116:6:0",
																"memberName": "winner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 26,
																"src": "3102:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3126:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 270,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3126:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3126:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3102:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46696e6973686564",
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3138:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8",
																"typeString": "literal_string \"Finished\""
															},
															"value": "Finished"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c97116b3fdba9e18aaec97e9b506d9c8ffdc20857f6d213e79c5a13289dc6fc8",
																"typeString": "literal_string \"Finished\""
															}
														],
														"id": 265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3094:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3094:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "3094:55:0"
											},
											{
												"expression": {
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 278,
																"name": "games",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "3160:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																	"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																}
															},
															"id": 280,
															"indexExpression": {
																"id": 279,
																"name": "gameId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 247,
																"src": "3166:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3160:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Game_$27_storage",
																"typeString": "struct GameContract.Game storage ref"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3174:6:0",
														"memberName": "winner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "3160:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 282,
														"name": "winner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "3183:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3160:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "3160:29:0"
											},
											{
												"assignments": [
													286
												],
												"declarations": [
													{
														"constant": false,
														"id": 286,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3205:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 362,
														"src": "3200:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 285,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3200:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 299,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "313030",
																				"id": 287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3216:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 288,
																				"name": "feePercent",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 64,
																				"src": "3222:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3216:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 290,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3215:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 291,
																			"name": "games",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 56,
																			"src": "3236:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																				"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																			}
																		},
																		"id": 293,
																		"indexExpression": {
																			"id": 292,
																			"name": "gameId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "3242:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3236:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Game_$27_storage",
																			"typeString": "struct GameContract.Game storage ref"
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3250:13:0",
																	"memberName": "totalBettings",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 21,
																	"src": "3236:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3215:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 296,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3214:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3267:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3214:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3200:70:0"
											},
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3286:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 362,
														"src": "3281:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3281:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 308,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 302,
																"name": "games",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "3292:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																	"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																}
															},
															"id": 304,
															"indexExpression": {
																"id": 303,
																"name": "gameId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 247,
																"src": "3298:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3292:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Game_$27_storage",
																"typeString": "struct GameContract.Game storage ref"
															}
														},
														"id": 305,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3306:13:0",
														"memberName": "totalBettings",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "3292:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 306,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3322:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3292:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3281:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 310,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "3347:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 311,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "3353:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3347:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 313,
																		"name": "games",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 56,
																		"src": "3363:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																			"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																		}
																	},
																	"id": 315,
																	"indexExpression": {
																		"id": 314,
																		"name": "gameId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 247,
																		"src": "3369:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3363:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Game_$27_storage",
																		"typeString": "struct GameContract.Game storage ref"
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3377:13:0",
																"memberName": "totalBettings",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 21,
																"src": "3363:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3347:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "726577617264202b20666565203d20746f74616c",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3392:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d7746a167dffffe1eb54a58f0c273bed6be0e41a9a645fd32d7ecbd7a4b280e",
																"typeString": "literal_string \"reward + fee = total\""
															},
															"value": "reward + fee = total"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d7746a167dffffe1eb54a58f0c273bed6be0e41a9a645fd32d7ecbd7a4b280e",
																"typeString": "literal_string \"reward + fee = total\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3339:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3339:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "3339:76:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 322,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "3434:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3444:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3434:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 325,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 301,
																		"src": "3449:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3456:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3449:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3434:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 329,
																			"name": "games",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 56,
																			"src": "3461:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																				"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																			}
																		},
																		"id": 331,
																		"indexExpression": {
																			"id": 330,
																			"name": "gameId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "3467:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3461:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Game_$27_storage",
																			"typeString": "struct GameContract.Game storage ref"
																		}
																	},
																	"id": 332,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3475:13:0",
																	"memberName": "totalBettings",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 21,
																	"src": "3461:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3492:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3461:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3434:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c6c20706f736974697665",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3495:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b7f5333fcf849000ddaf31926abc3e2b6cbe5b6f210af0090bd9302a8e9fa97",
																"typeString": "literal_string \"all positive\""
															},
															"value": "all positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b7f5333fcf849000ddaf31926abc3e2b6cbe5b6f210af0090bd9302a8e9fa97",
																"typeString": "literal_string \"all positive\""
															}
														],
														"id": 321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3426:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3426:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "3426:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 344,
																	"name": "winner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "3562:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 345,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "3570:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 341,
																			"name": "tokenContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "3538:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 340,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1060,
																		"src": "3531:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1060_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3531:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1060",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3553:8:0",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1027,
																"src": "3531:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3531:46:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172642073686f756c642073756363657373",
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3579:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_278731ee9f545fa99055837db85c213f43f50f6dcdfa192dd137870e8447fbe8",
																"typeString": "literal_string \"Reward should success\""
															},
															"value": "Reward should success"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_278731ee9f545fa99055837db85c213f43f50f6dcdfa192dd137870e8447fbe8",
																"typeString": "literal_string \"Reward should success\""
															}
														],
														"id": 339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3523:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3523:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "3523:80:0"
											},
											{
												"expression": {
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 350,
														"name": "feeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "3614:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 351,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "3626:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3614:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "3614:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 355,
															"name": "winner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "3656:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "3664:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 357,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "3672:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 354,
														"name": "GameFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "3645:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3645:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "3640:36:0"
											},
											{
												"expression": {
													"id": 360,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 286,
													"src": "3694:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 256,
												"id": 361,
												"nodeType": "Return",
												"src": "3687:13:0"
											}
										]
									},
									"functionSelector": "2c32b187",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 252,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 505,
													"src": "2983:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 253,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 251,
												"name": "onlyRole",
												"nameLocations": [
													"2974:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 516,
												"src": "2974:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2974:28:0"
										}
									],
									"name": "finish",
									"nameLocation": "2931:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "gameId",
												"nameLocation": "2943:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2938:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2938:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "2959:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2951:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2937:29:0"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3012:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3012:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3011:6:0"
									},
									"scope": 477,
									"src": "2922:786:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3787:110:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 372,
																	"name": "games",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "3806:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																		"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																	}
																},
																"id": 374,
																"indexExpression": {
																	"id": 373,
																	"name": "gameId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "3812:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3806:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Game_$27_storage",
																	"typeString": "struct GameContract.Game storage ref"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3820:11:0",
															"memberName": "initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "3806:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d6520496e697469616c697a6564",
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3833:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7",
																"typeString": "literal_string \"Game Initialized\""
															},
															"value": "Game Initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7",
																"typeString": "literal_string \"Game Initialized\""
															}
														],
														"id": 371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3798:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3798:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "3798:54:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 379,
															"name": "games",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3870:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
															}
														},
														"id": 381,
														"indexExpression": {
															"id": 380,
															"name": "gameId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3876:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3870:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Game_$27_storage",
															"typeString": "struct GameContract.Game storage ref"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3884:5:0",
													"memberName": "users",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 24,
													"src": "3870:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 370,
												"id": 383,
												"nodeType": "Return",
												"src": "3863:26:0"
											}
										]
									},
									"functionSelector": "16b169c4",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gameUsers",
									"nameLocation": "3725:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "gameId",
												"nameLocation": "3740:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3735:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3735:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3734:13:0"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3769:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 367,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3769:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 368,
													"nodeType": "ArrayTypeName",
													"src": "3769:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3768:18:0"
									},
									"scope": 477,
									"src": "3716:181:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "3981:121:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 395,
																	"name": "games",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "4000:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																		"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																	}
																},
																"id": 397,
																"indexExpression": {
																	"id": 396,
																	"name": "gameId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "4006:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4000:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Game_$27_storage",
																	"typeString": "struct GameContract.Game storage ref"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4014:11:0",
															"memberName": "initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "4000:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d6520496e697469616c697a6564",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4027:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7",
																"typeString": "literal_string \"Game Initialized\""
															},
															"value": "Game Initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7",
																"typeString": "literal_string \"Game Initialized\""
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3992:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "3992:54:0"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 402,
																"name": "games",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "4064:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																	"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																}
															},
															"id": 404,
															"indexExpression": {
																"id": 403,
																"name": "gameId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "4070:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4064:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Game_$27_storage",
																"typeString": "struct GameContract.Game storage ref"
															}
														},
														"id": 405,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4078:8:0",
														"memberName": "bettings",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "4064:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 407,
													"indexExpression": {
														"id": 406,
														"name": "better",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "4087:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4064:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 393,
												"id": 408,
												"nodeType": "Return",
												"src": "4057:37:0"
											}
										]
									},
									"functionSelector": "34fcc3e7",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBetting",
									"nameLocation": "3914:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "gameId",
												"nameLocation": "3930:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3925:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3925:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "better",
												"nameLocation": "3946:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3938:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3924:29:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3975:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:0"
									},
									"scope": 477,
									"src": "3905:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "4169:125:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 418,
																	"name": "games",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "4188:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																		"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																	}
																},
																"id": 420,
																"indexExpression": {
																	"id": 419,
																	"name": "gameId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "4194:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4188:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Game_$27_storage",
																	"typeString": "struct GameContract.Game storage ref"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4202:11:0",
															"memberName": "initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "4188:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d6520496e697469616c697a6564",
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4215:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7",
																"typeString": "literal_string \"Game Initialized\""
															},
															"value": "Game Initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daba30853aee89c134c4ae0e9f7bb36d108fb18d7724a0f7d324de09af7bf9e7",
																"typeString": "literal_string \"Game Initialized\""
															}
														],
														"id": 417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4180:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4180:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "4180:54:0"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 425,
																"name": "games",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "4252:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$27_storage_$",
																	"typeString": "mapping(uint256 => struct GameContract.Game storage ref)"
																}
															},
															"id": 427,
															"indexExpression": {
																"id": 426,
																"name": "gameId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "4258:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4252:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Game_$27_storage",
																"typeString": "struct GameContract.Game storage ref"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4266:8:0",
														"memberName": "bettings",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "4252:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 431,
													"indexExpression": {
														"expression": {
															"id": 429,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4275:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4279:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4275:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4252:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 416,
												"id": 432,
												"nodeType": "Return",
												"src": "4245:41:0"
											}
										]
									},
									"functionSelector": "ce33bd74",
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "myBetting",
									"nameLocation": "4119:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "gameId",
												"nameLocation": "4134:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "4129:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4129:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4128:13:0"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "4163:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4163:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4162:6:0"
									},
									"scope": 477,
									"src": "4110:184:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "4383:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 443,
																"name": "feeTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "4402:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4413:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4402:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20666565",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4416:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b5b902ea75834fec35d744e6d2c06ffa21968444153844c582889f3d8e1d6f9",
																"typeString": "literal_string \"No fee\""
															},
															"value": "No fee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b5b902ea75834fec35d744e6d2c06ffa21968444153844c582889f3d8e1d6f9",
																"typeString": "literal_string \"No fee\""
															}
														],
														"id": 442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4394:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "4394:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 454,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4475:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4479:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4475:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 456,
																	"name": "feeTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "4487:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 451,
																			"name": "tokenContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "4451:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 450,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1060,
																		"src": "4444:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1060_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4444:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1060",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4466:8:0",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1027,
																"src": "4444:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4444:52:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472616e7366657220666565",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4498:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62b03ec8189bc1df71a370bda03dede89d84796e8b66b7e85e784c8b26377c33",
																"typeString": "literal_string \"transfer fee\""
															},
															"value": "transfer fee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62b03ec8189bc1df71a370bda03dede89d84796e8b66b7e85e784c8b26377c33",
																"typeString": "literal_string \"transfer fee\""
															}
														],
														"id": 449,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4436:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4436:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "4436:77:0"
											},
											{
												"expression": {
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 461,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "4524:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 462,
														"name": "feeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "4533:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4524:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "4524:17:0"
											},
											{
												"expression": {
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 465,
														"name": "feeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "4552:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4563:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4552:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "4552:12:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 470,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4589:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4593:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4589:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "4601:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 469,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "4580:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4580:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "EmitStatement",
												"src": "4575:33:0"
											}
										]
									},
									"functionSelector": "853828b6",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 437,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 505,
													"src": "4341:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 438,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 436,
												"name": "onlyRole",
												"nameLocations": [
													"4332:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 516,
												"src": "4332:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4332:28:0"
										}
									],
									"name": "withdrawAll",
									"nameLocation": "4311:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4322:2:0"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4375:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4370:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4370:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4369:13:0"
									},
									"scope": 477,
									"src": "4302:314:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 478,
							"src": "1006:3613:0",
							"usedErrors": []
						}
					],
					"src": "0:4619:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							793
						],
						"Context": [
							1082
						],
						"ERC165": [
							1335
						],
						"IAccessControl": [
							866
						],
						"IERC165": [
							1347
						],
						"Math": [
							2213
						],
						"SignedMath": [
							2318
						],
						"Strings": [
							1311
						]
					},
					"id": 794,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 480,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 794,
							"sourceUnit": 867,
							"src": "133:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 794,
							"sourceUnit": 1083,
							"src": "164:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 482,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 794,
							"sourceUnit": 1312,
							"src": "195:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 483,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 794,
							"sourceUnit": 1336,
							"src": "226:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 485,
										"name": "Context",
										"nameLocations": [
											"1967:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1082,
										"src": "1967:7:1"
									},
									"id": 486,
									"nodeType": "InheritanceSpecifier",
									"src": "1967:7:1"
								},
								{
									"baseName": {
										"id": 487,
										"name": "IAccessControl",
										"nameLocations": [
											"1976:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 866,
										"src": "1976:14:1"
									},
									"id": 488,
									"nodeType": "InheritanceSpecifier",
									"src": "1976:14:1"
								},
								{
									"baseName": {
										"id": 489,
										"name": "ERC165",
										"nameLocations": [
											"1992:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "1992:6:1"
									},
									"id": 490,
									"nodeType": "InheritanceSpecifier",
									"src": "1992:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 484,
								"nodeType": "StructuredDocumentation",
								"src": "271:1660:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 793,
							"linearizedBaseContracts": [
								793,
								1335,
								1347,
								866,
								1082
							],
							"name": "AccessControl",
							"nameLocation": "1950:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 497,
									"members": [
										{
											"constant": false,
											"id": 494,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "2056:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 497,
											"src": "2031:32:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 493,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2031:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 492,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2050:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 496,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2081:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 497,
											"src": "2073:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 495,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2073:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2012:8:1",
									"nodeType": "StructDefinition",
									"scope": 793,
									"src": "2005:92:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 502,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2140:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 793,
									"src": "2103:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$497_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 501,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 498,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2111:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2103:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$497_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 500,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 499,
												"name": "RoleData",
												"nameLocations": [
													"2122:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 497,
												"src": "2122:8:1"
											},
											"referencedDeclaration": 497,
											"src": "2122:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$497_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 505,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2177:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 793,
									"src": "2153:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 503,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2153:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 504,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2198:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "2621:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "2642:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 510,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															570,
															609
														],
														"referencedDeclaration": 570,
														"src": "2631:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2631:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "2631:16:1"
											},
											{
												"id": 514,
												"nodeType": "PlaceholderStatement",
												"src": "2657:1:1"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "2209:375:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 516,
									"name": "onlyRole",
									"nameLocation": "2598:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2615:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "2607:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 507,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:14:1"
									},
									"src": "2589:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1334
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "2823:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 525,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "2840:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 527,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "2860:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$866_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$866_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 526,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2855:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2855:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$866",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2876:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2855:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2840:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 533,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "2915:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 531,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2891:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$793_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2897:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1334,
															"src": "2891:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2891:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2840:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 524,
												"id": 536,
												"nodeType": "Return",
												"src": "2833:94:1"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "2671:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2741:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 521,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2799:8:1"
									},
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2766:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2759:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 518,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2759:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2758:20:1"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2817:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2817:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:6:1"
									},
									"scope": 793,
									"src": "2732:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										833
									],
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "3113:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 549,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "3130:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$497_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 551,
															"indexExpression": {
																"id": 550,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "3137:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3130:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$497_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3143:7:1",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "3130:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 554,
													"indexExpression": {
														"id": 553,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "3151:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3130:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 548,
												"id": 555,
												"nodeType": "Return",
												"src": "3123:36:1"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "2940:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3030:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 545,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3089:8:1"
									},
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3046:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3038:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 540,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3038:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3060:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3052:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3037:31:1"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3107:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 546,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3107:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:6:1"
									},
									"scope": 793,
									"src": "3021:145:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "3516:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "3537:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 565,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "3543:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3543:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 563,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															570,
															609
														],
														"referencedDeclaration": 609,
														"src": "3526:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3526:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3526:30:1"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "3172:283:1",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3469:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3488:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3480:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 559,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:14:1"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3516:0:1"
									},
									"scope": 793,
									"src": "3460:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "3917:406:1",
										"statements": [
											{
												"condition": {
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3931:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 579,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "3940:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 580,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "3946:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 578,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3932:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3932:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 607,
												"nodeType": "IfStatement",
												"src": "3927:390:1",
												"trueBody": {
													"id": 606,
													"nodeType": "Block",
													"src": "3956:361:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 588,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4064:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 591,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 575,
																								"src": "4135:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 589,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1311,
																								"src": "4115:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1311_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 590,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4123:11:1",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1285,
																							"src": "4115:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 592,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4115:28:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 593,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4169:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 598,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 573,
																										"src": "4242:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 597,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4234:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 596,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4234:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 599,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4234:13:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 600,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4249:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 594,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1311,
																								"src": "4214:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1311_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 595,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4222:11:1",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1265,
																							"src": "4214:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 601,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4214:38:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 586,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4022:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 587,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4026:12:1",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4022:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4022:252:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3994:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 584,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3994:6:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3994:298:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 583,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3970:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3970:336:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "3970:336:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "3569:270:1",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3853:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3872:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "3864:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 572,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3864:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3886:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "3878:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3878:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3863:31:1"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3917:0:1"
									},
									"scope": 793,
									"src": "3844:479:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										841
									],
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "4587:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 618,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4604:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$497_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 620,
														"indexExpression": {
															"id": 619,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "4611:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4604:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$497_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4617:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 496,
													"src": "4604:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 617,
												"id": 622,
												"nodeType": "Return",
												"src": "4597:29:1"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "4329:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4513:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 614,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4560:8:1"
									},
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4534:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "4526:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 611,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4525:14:1"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "4578:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 615,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4577:9:1"
									},
									"scope": 793,
									"src": "4504:129:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										849
									],
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "5032:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 639,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "5053:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 640,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "5059:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 638,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "5042:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "5042:25:1"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "4639:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 634,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "5025:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 633,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "5012:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5012:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 636,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 632,
												"name": "onlyRole",
												"nameLocations": [
													"5003:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 516,
												"src": "5003:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5003:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4938:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 631,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4994:8:1"
									},
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4956:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4948:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 626,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4948:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4970:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "4962:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4962:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4947:31:1"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5032:0:1"
									},
									"scope": 793,
									"src": "4929:145:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										857
									],
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "5458:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 659,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "5480:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 660,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "5486:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 658,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "5468:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5468:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "5468:26:1"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "5080:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 654,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "5451:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 653,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "5438:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5438:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 656,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 652,
												"name": "onlyRole",
												"nameLocations": [
													"5429:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 516,
												"src": "5429:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5429:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5363:10:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 651,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5420:8:1"
									},
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5382:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "5374:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 646,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5396:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "5388:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5388:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5373:31:1"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5458:0:1"
									},
									"scope": 793,
									"src": "5354:147:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										865
									],
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "6115:137:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 674,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "6133:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 675,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "6144:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6144:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6133:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6158:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6125:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6125:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "6125:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 682,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "6231:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 683,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "6237:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 681,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "6219:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6219:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "6219:26:1"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "5507:526:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6047:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 671,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6106:8:1"
									},
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6068:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "6060:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 666,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6082:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "6074:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6074:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6059:31:1"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6115:0:1"
									},
									"scope": 793,
									"src": "6038:214:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "7005:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 696,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "7026:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 697,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "7032:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 695,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "7015:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7015:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "7015:25:1"
											}
										]
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "6258:674:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6946:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6965:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "6957:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 689,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6957:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6979:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "6971:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6971:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6956:31:1"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7005:0:1"
									},
									"scope": 793,
									"src": "6937:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "7245:174:1",
										"statements": [
											{
												"assignments": [
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7263:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 728,
														"src": "7255:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 709,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7255:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 714,
												"initialValue": {
													"arguments": [
														{
															"id": 712,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "7296:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 711,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "7283:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7255:46:1"
											},
											{
												"expression": {
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 715,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "7311:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$497_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 717,
															"indexExpression": {
																"id": 716,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "7318:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7311:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$497_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7324:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 496,
														"src": "7311:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 719,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "7336:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7311:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "7311:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 723,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "7377:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 724,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "7383:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 725,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "7402:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 722,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "7360:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7360:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "EmitStatement",
												"src": "7355:57:1"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "7053:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7181:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7203:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "7195:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 703,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7195:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7217:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "7209:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 705,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7209:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7194:33:1"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7245:0:1"
									},
									"scope": 793,
									"src": "7172:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "7655:165:1",
										"statements": [
											{
												"condition": {
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7669:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 738,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "7678:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 739,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "7684:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 737,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "7670:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7670:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "7665:149:1",
												"trueBody": {
													"id": 758,
													"nodeType": "Block",
													"src": "7694:120:1",
													"statements": [
														{
															"expression": {
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 742,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "7708:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$497_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 744,
																			"indexExpression": {
																				"id": 743,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 732,
																				"src": "7715:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7708:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$497_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 745,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7721:7:1",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 494,
																		"src": "7708:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 747,
																	"indexExpression": {
																		"id": 746,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "7729:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7708:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7740:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7708:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 750,
															"nodeType": "ExpressionStatement",
															"src": "7708:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 752,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 732,
																		"src": "7775:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 753,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "7781:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 754,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1072,
																			"src": "7790:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7790:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 751,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "7763:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7763:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 757,
															"nodeType": "EmitStatement",
															"src": "7758:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "7425:157:1",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7596:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7615:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7607:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 731,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7607:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7621:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7621:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7606:31:1"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:1"
									},
									"scope": 793,
									"src": "7587:233:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "8060:165:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 770,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "8082:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 771,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "8088:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 769,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "8074:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8074:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 790,
												"nodeType": "IfStatement",
												"src": "8070:149:1",
												"trueBody": {
													"id": 789,
													"nodeType": "Block",
													"src": "8098:121:1",
													"statements": [
														{
															"expression": {
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 773,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "8112:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$497_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 775,
																			"indexExpression": {
																				"id": 774,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 764,
																				"src": "8119:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8112:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$497_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 776,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8125:7:1",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 494,
																		"src": "8112:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 778,
																	"indexExpression": {
																		"id": 777,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "8133:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8112:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8144:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8112:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 781,
															"nodeType": "ExpressionStatement",
															"src": "8112:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 783,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "8180:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 784,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "8186:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 785,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1072,
																			"src": "8195:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8195:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 782,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "8168:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8168:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 788,
															"nodeType": "EmitStatement",
															"src": "8163:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "7826:160:1",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8000:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8020:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8012:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 763,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8034:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8026:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8026:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8011:31:1"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8060:0:1"
									},
									"scope": 793,
									"src": "7991:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 794,
							"src": "1932:6295:1",
							"usedErrors": []
						}
					],
					"src": "108:8120:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							866
						]
					},
					"id": 867,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 795,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 796,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:2",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 866,
							"linearizedBaseContracts": [
								866
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 805,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "560:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 798,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "582:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 800,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "617:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 802,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:2"
									},
									"src": "537:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 814,
									"name": "RoleGranted",
									"nameLocation": "876:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "888:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 807,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "910:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "935:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:2"
									},
									"src": "870:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 823,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1263:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 816,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1285:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1310:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:2"
									},
									"src": "1245:89:2"
								},
								{
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 833,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "1438:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 825,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "1452:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:2"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "1492:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 830,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:2"
									},
									"scope": 866,
									"src": "1421:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1715:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 835,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:2"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "1752:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 838,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:2"
									},
									"scope": 866,
									"src": "1693:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "2030:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 843,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "2044:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:2"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:2"
									},
									"scope": 866,
									"src": "2011:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 857,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2324:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 851,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2338:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:2"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:2"
									},
									"scope": 866,
									"src": "2304:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 865,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2877:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 859,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2891:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:2"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:2"
									},
									"scope": 866,
									"src": "2855:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 867,
							"src": "209:2710:2",
							"usedErrors": []
						}
					],
					"src": "94:2826:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1082
						],
						"Ownable": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 868,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 869,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 980,
							"sourceUnit": 1083,
							"src": "127:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 871,
										"name": "Context",
										"nameLocations": [
											"683:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1082,
										"src": "683:7:3"
									},
									"id": 872,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:3"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 870,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979,
								1082
							],
							"name": "Ownable",
							"nameLocation": "672:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 874,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "697:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 873,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 880,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "753:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "784:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:3"
									},
									"src": "726:84:3"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "926:49:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 885,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "955:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 884,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "936:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "936:32:3"
											}
										]
									},
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:3",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 890,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:3"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:3"
									},
									"scope": 979,
									"src": "912:63:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "1084:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 893,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "1094:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:3"
											},
											{
												"id": 896,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:3"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 898,
									"name": "onlyOwner",
									"nameLocation": "1072:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:3"
									},
									"src": "1063:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "1256:30:3",
										"statements": [
											{
												"expression": {
													"id": 904,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 874,
													"src": "1273:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 903,
												"id": 905,
												"nodeType": "Return",
												"src": "1266:13:3"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:3"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1247:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:3"
									},
									"scope": 979,
									"src": "1201:85:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "1404:85:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 912,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "1422:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 914,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "1433:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:3"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:3",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:3"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:3"
									},
									"scope": 979,
									"src": "1359:130:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "1878:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 928,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 927,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1888:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:3"
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 925,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 924,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 898,
												"src": "1868:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:3"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:3"
									},
									"scope": 979,
									"src": "1824:101:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "2144:128:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 944,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "2162:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 945,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 943,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 954,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "2256:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 953,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "2237:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:3"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 941,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 940,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 898,
												"src": "2134:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "2101:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:3"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:3"
									},
									"scope": 979,
									"src": "2074:198:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "2489:124:3",
										"statements": [
											{
												"assignments": [
													965
												],
												"declarations": [
													{
														"constant": false,
														"id": 965,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 977,
														"src": "2499:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 964,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 967,
												"initialValue": {
													"id": 966,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 874,
													"src": "2518:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:3"
											},
											{
												"expression": {
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 968,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "2534:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 969,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "2543:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 973,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "2587:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "2597:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 972,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "2566:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "EmitStatement",
												"src": "2561:45:3"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2454:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:3"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:3"
									},
									"scope": 979,
									"src": "2426:187:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "654:1961:3",
							"usedErrors": []
						}
					],
					"src": "102:2514:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1060
						]
					},
					"id": 983,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 983,
							"sourceUnit": 1061,
							"src": "115:35:4",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "90:61:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1060
						]
					},
					"id": 1061,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 984,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 985,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1060,
							"linearizedBaseContracts": [
								1060
							],
							"name": "IERC20",
							"nameLocation": "212:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 994,
									"name": "Transfer",
									"nameLocation": "394:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "403:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "425:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "445:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:5"
									},
									"src": "388:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1003,
									"name": "Approval",
									"nameLocation": "625:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "634:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "657:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "682:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:5"
									},
									"src": "619:78:5"
								},
								{
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 1060,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1060,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1211:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:5"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1257:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:5"
									},
									"scope": 1060,
									"src": "1193:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "1557:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "1572:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:5"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "1612:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:5"
									},
									"scope": 1060,
									"src": "1538:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "2291:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "2308:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:5"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "2342:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1044,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:5"
									},
									"scope": 1060,
									"src": "2274:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:5",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1059,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "2668:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "2682:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "2694:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:5"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "2728:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1056,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:5"
									},
									"scope": 1060,
									"src": "2646:88:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1061,
							"src": "202:2534:5",
							"usedErrors": []
						}
					],
					"src": "106:2631:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1082
						]
					},
					"id": 1083,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1062,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1063,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1082,
							"linearizedBaseContracts": [
								1082
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1068,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1067,
												"id": 1070,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 1082,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1077,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1076,
												"id": 1079,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1074,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 1082,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1083,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2213
						],
						"SignedMath": [
							2318
						],
						"Strings": [
							1311
						]
					},
					"id": 1312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1084,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1085,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1312,
							"sourceUnit": 2214,
							"src": "126:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1086,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1312,
							"sourceUnit": 2319,
							"src": "152:31:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1087,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1311,
							"linearizedBaseContracts": [
								1311
							],
							"name": "Strings",
							"nameLocation": "228:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1090,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "242:54:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1088,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1089,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1093,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1311,
									"src": "302:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1091,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1092,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "518:625:7",
										"statements": [
											{
												"id": 1139,
												"nodeType": "UncheckedBlock",
												"src": "528:609:7",
												"statements": [
													{
														"assignments": [
															1102
														],
														"declarations": [
															{
																"constant": false,
																"id": 1102,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1139,
																"src": "552:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1101,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1109,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1105,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "580:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1103,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2213,
																		"src": "569:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2213_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2050,
																	"src": "569:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:7"
													},
													{
														"assignments": [
															1111
														],
														"declarations": [
															{
																"constant": false,
																"id": 1111,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1139,
																"src": "604:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1110,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1116,
														"initialValue": {
															"arguments": [
																{
																	"id": 1114,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "638:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1112,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:7"
													},
													{
														"assignments": [
															1118
														],
														"declarations": [
															{
																"constant": false,
																"id": 1118,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1139,
																"src": "659:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1117,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1119,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1111,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1102,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1118,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:7",
																"valueSize": 1
															}
														],
														"id": 1120,
														"nodeType": "InlineAssembly",
														"src": "731:76:7"
													},
													{
														"body": {
															"id": 1135,
															"nodeType": "Block",
															"src": "833:267:7",
															"statements": [
																{
																	"expression": {
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:7",
																		"subExpression": {
																			"id": 1122,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "851:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1124,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:7"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:7"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:7"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1090,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1118,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1096,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1125,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:7"
																},
																{
																	"expression": {
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1126,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1096,
																			"src": "1035:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1129,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1130,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1096,
																			"src": "1068:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1134,
																	"nodeType": "IfStatement",
																	"src": "1064:21:7",
																	"trueBody": {
																		"id": 1133,
																		"nodeType": "Break",
																		"src": "1080:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1136,
														"nodeType": "WhileStatement",
														"src": "820:280:7"
													},
													{
														"expression": {
															"id": 1137,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "1120:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1100,
														"id": 1138,
														"nodeType": "Return",
														"src": "1113:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "465:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:7"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "503:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1098,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:7"
									},
									"scope": 1311,
									"src": "447:696:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "1313:103:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1153,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1144,
																			"src": "1354:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:7",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1162,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1144,
																					"src": "1400:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1160,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2318,
																					"src": "1385:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2318_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:7",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2317,
																				"src": "1385:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1159,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1141,
																			1169
																		],
																		"referencedDeclaration": 1141,
																		"src": "1376:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1151,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:7",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1149,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1148,
												"id": 1167,
												"nodeType": "Return",
												"src": "1323:86:7"
											}
										]
									},
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1261:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1143,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:7"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1298:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1146,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:7"
									},
									"scope": 1311,
									"src": "1243:173:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "1595:100:7",
										"statements": [
											{
												"id": 1187,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1178,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "1648:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1181,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1172,
																				"src": "1667:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1179,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2213,
																				"src": "1655:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2213_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2173,
																			"src": "1655:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1177,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1189,
																	1265,
																	1285
																],
																"referencedDeclaration": 1265,
																"src": "1636:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1176,
														"id": 1186,
														"nodeType": "Return",
														"src": "1629:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "1542:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:7"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "1580:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:7"
									},
									"scope": 1311,
									"src": "1521:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "1908:347:7",
										"statements": [
											{
												"assignments": [
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1264,
														"src": "1918:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1199,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1209,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1204,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "1954:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1201,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:7"
											},
											{
												"expression": {
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1210,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "1975:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1212,
														"indexExpression": {
															"hexValue": "30",
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:7"
											},
											{
												"expression": {
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1216,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "2000:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1218,
														"indexExpression": {
															"hexValue": "31",
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:7"
											},
											{
												"body": {
													"id": 1250,
													"nodeType": "Block",
													"src": "2070:83:7",
													"statements": [
														{
															"expression": {
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1236,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1200,
																		"src": "2084:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1238,
																	"indexExpression": {
																		"id": 1237,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "2091:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1239,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "2096:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1243,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1240,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1192,
																			"src": "2105:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1245,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:7"
														},
														{
															"expression": {
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1246,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "2131:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1249,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1230,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "2058:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1251,
												"initializationExpression": {
													"assignments": [
														1223
													],
													"declarations": [
														{
															"constant": false,
															"id": 1223,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1251,
															"src": "2030:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1222,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1229,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1225,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1194,
																"src": "2046:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:7",
														"subExpression": {
															"id": 1233,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "2067:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1235,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1253,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "2170:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1261,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "2241:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1259,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1198,
												"id": 1263,
												"nodeType": "Return",
												"src": "2227:21:7"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1839:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1854:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:7"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1893:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1196,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:7"
									},
									"scope": 1311,
									"src": "1818:437:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "2480:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1278,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1268,
																			"src": "2525:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1276,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1274,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1281,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "2533:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1273,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1189,
															1265,
															1285
														],
														"referencedDeclaration": 1265,
														"src": "2497:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1272,
												"id": 1283,
												"nodeType": "Return",
												"src": "2490:59:7"
											}
										]
									},
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2428:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:7"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2465:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:7"
									},
									"scope": 1311,
									"src": "2407:149:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "2711:66:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1298,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1288,
																		"src": "2744:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1296,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1295,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1304,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1290,
																		"src": "2767:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1302,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1301,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1294,
												"id": 1308,
												"nodeType": "Return",
												"src": "2721:49:7"
											}
										]
									},
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "2648:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "2665:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:7"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "2705:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:7"
									},
									"scope": 1311,
									"src": "2633:144:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1312,
							"src": "220:2559:7",
							"usedErrors": []
						}
					],
					"src": "101:2679:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1335
						],
						"IERC165": [
							1347
						]
					},
					"id": 1336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1348,
							"src": "124:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1316,
										"name": "IERC165",
										"nameLocations": [
											"754:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1347,
										"src": "754:7:8"
									},
									"id": 1317,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1315,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1335,
							"linearizedBaseContracts": [
								1335,
								1347
							],
							"name": "ERC165",
							"nameLocation": "744:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1346
									],
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "920:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1326,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "937:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1328,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1347_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1347_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1327,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1347",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1325,
												"id": 1332,
												"nodeType": "Return",
												"src": "930:47:8"
											}
										]
									},
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1322,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:8"
									},
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "856:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1319,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:8"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "914:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:8"
									},
									"scope": 1335,
									"src": "829:155:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1336,
							"src": "726:260:8",
							"usedErrors": []
						}
					],
					"src": "99:888:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1347
						]
					},
					"id": 1348,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1338,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1347,
							"linearizedBaseContracts": [
								1347
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1340,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 1347,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1348,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2213
						]
					},
					"id": 2214,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1349,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1350,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2213,
							"linearizedBaseContracts": [
								2213
							],
							"name": "Math",
							"nameLocation": "210:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1354,
									"members": [
										{
											"id": 1351,
											"name": "Down",
											"nameLocation": "245:4:10",
											"nodeType": "EnumValue",
											"src": "245:4:10"
										},
										{
											"id": 1352,
											"name": "Up",
											"nameLocation": "287:2:10",
											"nodeType": "EnumValue",
											"src": "287:2:10"
										},
										{
											"id": 1353,
											"name": "Zero",
											"nameLocation": "318:4:10",
											"nodeType": "EnumValue",
											"src": "318:4:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:10",
									"nodeType": "EnumDefinition",
									"src": "221:122:10"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "480:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1364,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "497:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1365,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "501:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1368,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "509:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:10",
													"trueExpression": {
														"id": 1367,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "505:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1363,
												"id": 1370,
												"nodeType": "Return",
												"src": "490:20:10"
											}
										]
									},
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "426:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "437:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:10"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "471:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:10"
									},
									"scope": 2213,
									"src": "413:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "655:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1382,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "672:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1383,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "676:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1386,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "684:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:10",
													"trueExpression": {
														"id": 1385,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "680:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1381,
												"id": 1388,
												"nodeType": "Return",
												"src": "665:20:10"
											}
										]
									},
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "646:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:10"
									},
									"scope": 2213,
									"src": "588:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "876:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1400,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1401,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1395,
																	"src": "935:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1403,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1404,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1393,
																		"src": "941:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1405,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1395,
																		"src": "945:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1407,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1399,
												"id": 1411,
												"nodeType": "Return",
												"src": "923:28:10"
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "822:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "833:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:10"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "867:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:10"
									},
									"scope": 2213,
									"src": "805:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "1228:123:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1423,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "1316:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1427,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1416,
																			"src": "1330:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1430,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1431,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "1339:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1422,
												"id": 1436,
												"nodeType": "Return",
												"src": "1309:35:10"
											}
										]
									},
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "1174:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "1185:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:10"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "1219:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:10"
									},
									"scope": 2213,
									"src": "1157:194:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "1765:4115:10",
										"statements": [
											{
												"id": 1559,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:10",
												"statements": [
													{
														"assignments": [
															1451
														],
														"declarations": [
															{
																"constant": false,
																"id": 1451,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 1559,
																"src": "2096:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1450,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1452,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:10"
													},
													{
														"assignments": [
															1454
														],
														"declarations": [
															{
																"constant": false,
																"id": 1454,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 1559,
																"src": "2168:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1453,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1455,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1451,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1451,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1451,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1454,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1441,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1441,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1443,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1443,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:10",
																"valueSize": 1
															}
														],
														"id": 1456,
														"nodeType": "InlineAssembly",
														"src": "2239:166:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1457,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1454,
																"src": "2486:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1465,
														"nodeType": "IfStatement",
														"src": "2482:368:10",
														"trueBody": {
															"id": 1464,
															"nodeType": "Block",
															"src": "2498:352:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1460,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1451,
																			"src": "2816:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1461,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1445,
																			"src": "2824:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1449,
																	"id": 1463,
																	"nodeType": "Return",
																	"src": "2809:26:10"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1467,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1445,
																		"src": "2960:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1468,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "2974:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1466,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1472,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:10"
													},
													{
														"assignments": [
															1474
														],
														"declarations": [
															{
																"constant": false,
																"id": 1474,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 1559,
																"src": "3261:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1473,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1475,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:10"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:10"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1445,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1451,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1451,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1451,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1454,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1454,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1474,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1474,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1474,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1441,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1443,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:10",
																"valueSize": 1
															}
														],
														"id": 1476,
														"nodeType": "InlineAssembly",
														"src": "3292:300:10"
													},
													{
														"assignments": [
															1478
														],
														"declarations": [
															{
																"constant": false,
																"id": 1478,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 1559,
																"src": "3899:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1477,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1486,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1479,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "3914:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:10",
																			"subExpression": {
																				"id": 1480,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1445,
																				"src": "3930:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1484,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:10"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1445,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1445,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1451,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1451,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1478,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1478,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1478,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1478,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1478,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:10",
																"valueSize": 1
															}
														],
														"id": 1487,
														"nodeType": "InlineAssembly",
														"src": "3960:371:10"
													},
													{
														"expression": {
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1488,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1451,
																"src": "4397:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1489,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1454,
																	"src": "4406:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1490,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1478,
																	"src": "4414:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1493,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:10"
													},
													{
														"assignments": [
															1495
														],
														"declarations": [
															{
																"constant": false,
																"id": 1495,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 1559,
																"src": "4736:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1502,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1497,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1445,
																			"src": "4759:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1499,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:10"
													},
													{
														"expression": {
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1503,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "4992:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1505,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1445,
																		"src": "5007:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1506,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1495,
																		"src": "5021:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1510,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:10"
													},
													{
														"expression": {
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1511,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "5061:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1513,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1445,
																		"src": "5076:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1514,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1495,
																		"src": "5090:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1518,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:10"
													},
													{
														"expression": {
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1519,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "5131:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1521,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1445,
																		"src": "5146:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1522,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1495,
																		"src": "5160:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1526,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:10"
													},
													{
														"expression": {
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1527,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "5201:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1529,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1445,
																		"src": "5216:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1530,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1495,
																		"src": "5230:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1534,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:10"
													},
													{
														"expression": {
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1535,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "5271:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1537,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1445,
																		"src": "5286:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1538,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1495,
																		"src": "5300:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1542,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:10"
													},
													{
														"expression": {
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1543,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "5342:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1545,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1445,
																		"src": "5357:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1546,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1495,
																		"src": "5371:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1550,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:10"
													},
													{
														"expression": {
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1551,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1448,
																"src": "5812:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1552,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "5821:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1553,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1495,
																	"src": "5829:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1556,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:10"
													},
													{
														"expression": {
															"id": 1557,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "5857:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1449,
														"id": 1558,
														"nodeType": "Return",
														"src": "5850:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "1683:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "1694:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "1705:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:10"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "1749:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:10"
									},
									"scope": 2213,
									"src": "1667:4213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "6122:189:10",
										"statements": [
											{
												"assignments": [
													1577
												],
												"declarations": [
													{
														"constant": false,
														"id": 1577,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1604,
														"src": "6132:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1576,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1583,
												"initialValue": {
													"arguments": [
														{
															"id": 1579,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "6156:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1580,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "6159:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1581,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "6162:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1578,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1561,
															1605
														],
														"referencedDeclaration": 1561,
														"src": "6149:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1354",
															"typeString": "enum Math.Rounding"
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1584,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "6188:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1354",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1585,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "6200:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1354_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:10",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1352,
															"src": "6200:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1354",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1589,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1564,
																	"src": "6222:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1590,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "6225:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1591,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1568,
																	"src": "6228:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1588,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1601,
												"nodeType": "IfStatement",
												"src": "6184:98:10",
												"trueBody": {
													"id": 1600,
													"nodeType": "Block",
													"src": "6246:36:10",
													"statements": [
														{
															"expression": {
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1596,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "6260:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1599,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1602,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1577,
													"src": "6298:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1575,
												"id": 1603,
												"nodeType": "Return",
												"src": "6291:13:10"
											}
										]
									},
									"documentation": {
										"id": 1562,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "6028:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "6039:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "6050:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "6071:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1354",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1570,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1569,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1354,
														"src": "6071:8:10"
													},
													"referencedDeclaration": 1354,
													"src": "6071:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1354",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:10"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "6113:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:10"
									},
									"scope": 2213,
									"src": "6012:299:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "6587:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1613,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "6601:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1619,
												"nodeType": "IfStatement",
												"src": "6597:45:10",
												"trueBody": {
													"id": 1618,
													"nodeType": "Block",
													"src": "6609:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1612,
															"id": 1617,
															"nodeType": "Return",
															"src": "6623:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													1621
												],
												"declarations": [
													{
														"constant": false,
														"id": 1621,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "7321:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1620,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1630,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1624,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1608,
																			"src": "7349:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1623,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1885,
																			1921
																		],
																		"referencedDeclaration": 1885,
																		"src": "7344:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1628,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:10"
											},
											{
												"id": 1715,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:10",
												"statements": [
													{
														"expression": {
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1631,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "7782:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1632,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1621,
																				"src": "7792:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1633,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1608,
																					"src": "7801:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1634,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1621,
																					"src": "7805:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1637,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1641,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:10"
													},
													{
														"expression": {
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1642,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "7831:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1643,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1621,
																				"src": "7841:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1646,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1644,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1608,
																					"src": "7850:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1645,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1621,
																					"src": "7854:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1648,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1652,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:10"
													},
													{
														"expression": {
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1653,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "7880:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1654,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1621,
																				"src": "7890:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1655,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1608,
																					"src": "7899:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1656,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1621,
																					"src": "7903:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1659,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1663,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:10"
													},
													{
														"expression": {
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1664,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "7929:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1665,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1621,
																				"src": "7939:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1666,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1608,
																					"src": "7948:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1667,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1621,
																					"src": "7952:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1670,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1674,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:10"
													},
													{
														"expression": {
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1675,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "7978:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1676,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1621,
																				"src": "7988:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1679,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1677,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1608,
																					"src": "7997:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1678,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1621,
																					"src": "8001:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1681,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1685,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:10"
													},
													{
														"expression": {
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1686,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "8027:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1687,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1621,
																				"src": "8037:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1688,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1608,
																					"src": "8046:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1689,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1621,
																					"src": "8050:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1692,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1696,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:10"
													},
													{
														"expression": {
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1697,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "8076:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1698,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1621,
																				"src": "8086:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1699,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1608,
																					"src": "8095:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1700,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1621,
																					"src": "8099:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1703,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1707,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1709,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "8136:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1710,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "8144:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1711,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1621,
																		"src": "8148:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1708,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "8132:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1612,
														"id": 1714,
														"nodeType": "Return",
														"src": "8125:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "6544:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:10"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "6578:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:10"
									},
									"scope": 2213,
									"src": "6530:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1752,
										"nodeType": "Block",
										"src": "8348:161:10",
										"statements": [
											{
												"id": 1751,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:10",
												"statements": [
													{
														"assignments": [
															1729
														],
														"declarations": [
															{
																"constant": false,
																"id": 1729,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1751,
																"src": "8382:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1728,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1733,
														"initialValue": {
															"arguments": [
																{
																	"id": 1731,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1720,
																	"src": "8404:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1730,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1717,
																	1753
																],
																"referencedDeclaration": 1717,
																"src": "8399:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1734,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1729,
																"src": "8427:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1354",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1738,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1735,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1723,
																					"src": "8437:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1354",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1736,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1354,
																						"src": "8449:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1354_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1737,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1352,
																					"src": "8449:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1354",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1741,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1739,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1729,
																						"src": "8464:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1740,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1729,
																						"src": "8473:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1742,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1720,
																					"src": "8482:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1748,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1727,
														"id": 1750,
														"nodeType": "Return",
														"src": "8420:72:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "8286:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "8297:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1354",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1722,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1721,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1354,
														"src": "8297:8:10"
													},
													"referencedDeclaration": 1354,
													"src": "8297:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1354",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:10"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "8339:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:10"
									},
									"scope": 2213,
									"src": "8272:237:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1884,
										"nodeType": "Block",
										"src": "8694:922:10",
										"statements": [
											{
												"assignments": [
													1762
												],
												"declarations": [
													{
														"constant": false,
														"id": 1762,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1884,
														"src": "8704:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1764,
												"initialValue": {
													"hexValue": "30",
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:10"
											},
											{
												"id": 1881,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1765,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "8760:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1779,
														"nodeType": "IfStatement",
														"src": "8756:99:10",
														"trueBody": {
															"id": 1778,
															"nodeType": "Block",
															"src": "8778:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1770,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "8796:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1773,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:10"
																},
																{
																	"expression": {
																		"id": 1776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1774,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1762,
																			"src": "8827:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1777,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1780,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "8872:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1794,
														"nodeType": "IfStatement",
														"src": "8868:96:10",
														"trueBody": {
															"id": 1793,
															"nodeType": "Block",
															"src": "8889:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 1787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1785,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "8907:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1788,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:10"
																},
																{
																	"expression": {
																		"id": 1791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1789,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1762,
																			"src": "8937:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1792,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1795,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "8981:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1809,
														"nodeType": "IfStatement",
														"src": "8977:96:10",
														"trueBody": {
															"id": 1808,
															"nodeType": "Block",
															"src": "8998:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 1802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1800,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "9016:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1803,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:10"
																},
																{
																	"expression": {
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1804,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1762,
																			"src": "9046:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1807,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1810,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "9090:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1824,
														"nodeType": "IfStatement",
														"src": "9086:96:10",
														"trueBody": {
															"id": 1823,
															"nodeType": "Block",
															"src": "9107:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 1817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1815,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "9125:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1818,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:10"
																},
																{
																	"expression": {
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1819,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1762,
																			"src": "9155:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1822,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1825,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "9199:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1839,
														"nodeType": "IfStatement",
														"src": "9195:93:10",
														"trueBody": {
															"id": 1838,
															"nodeType": "Block",
															"src": "9215:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 1832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1830,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "9233:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1833,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:10"
																},
																{
																	"expression": {
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1834,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1762,
																			"src": "9262:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1837,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "9305:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1854,
														"nodeType": "IfStatement",
														"src": "9301:93:10",
														"trueBody": {
															"id": 1853,
															"nodeType": "Block",
															"src": "9321:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1845,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "9339:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1848,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:10"
																},
																{
																	"expression": {
																		"id": 1851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1849,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1762,
																			"src": "9368:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1852,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1855,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "9411:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1869,
														"nodeType": "IfStatement",
														"src": "9407:93:10",
														"trueBody": {
															"id": 1868,
															"nodeType": "Block",
															"src": "9427:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 1862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1860,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "9445:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1863,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:10"
																},
																{
																	"expression": {
																		"id": 1866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1864,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1762,
																			"src": "9474:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1867,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1870,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "9517:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1880,
														"nodeType": "IfStatement",
														"src": "9513:64:10",
														"trueBody": {
															"id": 1879,
															"nodeType": "Block",
															"src": "9533:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 1877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1875,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1762,
																			"src": "9551:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1878,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1882,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1762,
													"src": "9603:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1760,
												"id": 1883,
												"nodeType": "Return",
												"src": "9596:13:10"
											}
										]
									},
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:10",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "8647:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:10"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "8685:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:10"
									},
									"scope": 2213,
									"src": "8633:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1920,
										"nodeType": "Block",
										"src": "9849:165:10",
										"statements": [
											{
												"id": 1919,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:10",
												"statements": [
													{
														"assignments": [
															1897
														],
														"declarations": [
															{
																"constant": false,
																"id": 1897,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1919,
																"src": "9883:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1896,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1901,
														"initialValue": {
															"arguments": [
																{
																	"id": 1899,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1888,
																	"src": "9905:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1898,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1885,
																	1921
																],
																"referencedDeclaration": 1885,
																"src": "9900:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1902,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1897,
																"src": "9932:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1354",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1906,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1903,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "9942:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1354",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1904,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1354,
																						"src": "9954:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1354_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1905,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1352,
																					"src": "9954:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1354",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1909,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1907,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1908,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1897,
																						"src": "9974:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1910,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1888,
																					"src": "9983:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1916,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1895,
														"id": 1918,
														"nodeType": "Return",
														"src": "9925:72:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1886,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "9783:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "9798:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1354",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1890,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1889,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1354,
														"src": "9798:8:10"
													},
													"referencedDeclaration": 1354,
													"src": "9798:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1354",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:10"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "9840:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:10"
									},
									"scope": 2213,
									"src": "9769:245:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2049,
										"nodeType": "Block",
										"src": "10201:854:10",
										"statements": [
											{
												"assignments": [
													1930
												],
												"declarations": [
													{
														"constant": false,
														"id": 1930,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2049,
														"src": "10211:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1929,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1932,
												"initialValue": {
													"hexValue": "30",
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:10"
											},
											{
												"id": 2046,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1933,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "10267:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1949,
														"nodeType": "IfStatement",
														"src": "10263:103:10",
														"trueBody": {
															"id": 1948,
															"nodeType": "Block",
															"src": "10286:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 1942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1938,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1924,
																			"src": "10304:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1939,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1943,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:10"
																},
																{
																	"expression": {
																		"id": 1946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1944,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1930,
																			"src": "10339:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1947,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1950,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "10383:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1966,
														"nodeType": "IfStatement",
														"src": "10379:103:10",
														"trueBody": {
															"id": 1965,
															"nodeType": "Block",
															"src": "10402:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 1959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1955,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1924,
																			"src": "10420:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1956,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1960,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:10"
																},
																{
																	"expression": {
																		"id": 1963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1961,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1930,
																			"src": "10455:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1964,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1967,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "10499:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1983,
														"nodeType": "IfStatement",
														"src": "10495:103:10",
														"trueBody": {
															"id": 1982,
															"nodeType": "Block",
															"src": "10518:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 1976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1972,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1924,
																			"src": "10536:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1973,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1977,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:10"
																},
																{
																	"expression": {
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1978,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1930,
																			"src": "10571:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1981,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1984,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "10615:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2000,
														"nodeType": "IfStatement",
														"src": "10611:100:10",
														"trueBody": {
															"id": 1999,
															"nodeType": "Block",
															"src": "10633:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 1993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1989,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1924,
																			"src": "10651:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1990,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1991,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1994,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:10"
																},
																{
																	"expression": {
																		"id": 1997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1995,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1930,
																			"src": "10685:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1998,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2001,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "10728:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2017,
														"nodeType": "IfStatement",
														"src": "10724:100:10",
														"trueBody": {
															"id": 2016,
															"nodeType": "Block",
															"src": "10746:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2006,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1924,
																			"src": "10764:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2011,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:10"
																},
																{
																	"expression": {
																		"id": 2014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2012,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1930,
																			"src": "10798:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2015,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2018,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "10841:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2034,
														"nodeType": "IfStatement",
														"src": "10837:100:10",
														"trueBody": {
															"id": 2033,
															"nodeType": "Block",
															"src": "10859:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2023,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1924,
																			"src": "10877:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2024,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2028,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:10"
																},
																{
																	"expression": {
																		"id": 2031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2029,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1930,
																			"src": "10911:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2032,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2035,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "10954:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2045,
														"nodeType": "IfStatement",
														"src": "10950:66:10",
														"trueBody": {
															"id": 2044,
															"nodeType": "Block",
															"src": "10972:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2040,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1930,
																			"src": "10990:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2043,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2047,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1930,
													"src": "11042:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1928,
												"id": 2048,
												"nodeType": "Return",
												"src": "11035:13:10"
											}
										]
									},
									"documentation": {
										"id": 1922,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:10",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "10154:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:10"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "10192:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:10"
									},
									"scope": 2213,
									"src": "10139:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2085,
										"nodeType": "Block",
										"src": "11290:167:10",
										"statements": [
											{
												"id": 2084,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:10",
												"statements": [
													{
														"assignments": [
															2062
														],
														"declarations": [
															{
																"constant": false,
																"id": 2062,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2084,
																"src": "11324:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2061,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2066,
														"initialValue": {
															"arguments": [
																{
																	"id": 2064,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2053,
																	"src": "11347:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2063,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2050,
																	2086
																],
																"referencedDeclaration": 2050,
																"src": "11341:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2067,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2062,
																"src": "11374:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1354",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2068,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2056,
																					"src": "11384:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1354",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2069,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1354,
																						"src": "11396:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1354_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2070,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1352,
																					"src": "11396:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1354",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2074,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2072,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2073,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2062,
																						"src": "11417:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2075,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2053,
																					"src": "11426:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2081,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2060,
														"id": 2083,
														"nodeType": "Return",
														"src": "11367:73:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2051,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "11224:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "11239:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1354",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2054,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1354,
														"src": "11239:8:10"
													},
													"referencedDeclaration": 1354,
													"src": "11239:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1354",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:10"
									},
									"returnParameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "11281:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:10"
									},
									"scope": 2213,
									"src": "11209:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2172,
										"nodeType": "Block",
										"src": "11771:600:10",
										"statements": [
											{
												"assignments": [
													2095
												],
												"declarations": [
													{
														"constant": false,
														"id": 2095,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2172,
														"src": "11781:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2094,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2097,
												"initialValue": {
													"hexValue": "30",
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:10"
											},
											{
												"id": 2169,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2098,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2089,
																	"src": "11837:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2112,
														"nodeType": "IfStatement",
														"src": "11833:98:10",
														"trueBody": {
															"id": 2111,
															"nodeType": "Block",
															"src": "11855:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2103,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "11873:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2106,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:10"
																},
																{
																	"expression": {
																		"id": 2109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2107,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2095,
																			"src": "11904:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2110,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2113,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2089,
																	"src": "11948:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2127,
														"nodeType": "IfStatement",
														"src": "11944:95:10",
														"trueBody": {
															"id": 2126,
															"nodeType": "Block",
															"src": "11965:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2118,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "11983:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2121,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:10"
																},
																{
																	"expression": {
																		"id": 2124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2122,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2095,
																			"src": "12013:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2125,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2128,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2089,
																	"src": "12056:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2142,
														"nodeType": "IfStatement",
														"src": "12052:95:10",
														"trueBody": {
															"id": 2141,
															"nodeType": "Block",
															"src": "12073:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2133,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "12091:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2136,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:10"
																},
																{
																	"expression": {
																		"id": 2139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2137,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2095,
																			"src": "12121:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2140,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2143,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2089,
																	"src": "12164:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2157,
														"nodeType": "IfStatement",
														"src": "12160:95:10",
														"trueBody": {
															"id": 2156,
															"nodeType": "Block",
															"src": "12181:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2148,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "12199:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2151,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:10"
																},
																{
																	"expression": {
																		"id": 2154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2152,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2095,
																			"src": "12229:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2155,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2158,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2089,
																	"src": "12272:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2168,
														"nodeType": "IfStatement",
														"src": "12268:64:10",
														"trueBody": {
															"id": 2167,
															"nodeType": "Block",
															"src": "12288:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2163,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2095,
																			"src": "12306:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2166,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2170,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2095,
													"src": "12358:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2093,
												"id": 2171,
												"nodeType": "Return",
												"src": "12351:13:10"
											}
										]
									},
									"documentation": {
										"id": 2087,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:10",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "11724:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:10"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "11762:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:10"
									},
									"scope": 2213,
									"src": "11708:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2211,
										"nodeType": "Block",
										"src": "12608:174:10",
										"statements": [
											{
												"id": 2210,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:10",
												"statements": [
													{
														"assignments": [
															2185
														],
														"declarations": [
															{
																"constant": false,
																"id": 2185,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2210,
																"src": "12642:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2184,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2189,
														"initialValue": {
															"arguments": [
																{
																	"id": 2187,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "12666:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2186,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2173,
																	2212
																],
																"referencedDeclaration": 2173,
																"src": "12659:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2190,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2185,
																"src": "12693:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1354",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2191,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2179,
																					"src": "12703:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1354",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2192,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1354,
																						"src": "12715:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1354_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2193,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1352,
																					"src": "12715:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1354",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2202,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2200,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2195,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2198,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2196,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2185,
																									"src": "12736:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2197,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2199,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2201,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2176,
																					"src": "12751:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2207,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2183,
														"id": 2209,
														"nodeType": "Return",
														"src": "12686:79:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2174,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "12542:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "12557:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1354",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2178,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2177,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1354,
														"src": "12557:8:10"
													},
													"referencedDeclaration": 1354,
													"src": "12557:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1354",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:10"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "12599:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:10"
									},
									"scope": 2213,
									"src": "12526:256:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2214,
							"src": "202:12582:10",
							"usedErrors": []
						}
					],
					"src": "103:12682:10"
				},
				"id": 10
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.3/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2318
						]
					},
					"id": 2319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2215,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2216,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:11",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2318,
							"linearizedBaseContracts": [
								2318
							],
							"name": "SignedMath",
							"nameLocation": "223:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2233,
										"nodeType": "Block",
										"src": "375:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2226,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2219,
															"src": "392:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2227,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "396:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2230,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "404:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:11",
													"trueExpression": {
														"id": 2229,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "400:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2225,
												"id": 2232,
												"nodeType": "Return",
												"src": "385:20:11"
											}
										]
									},
									"documentation": {
										"id": 2217,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:11",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "324:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2218,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "334:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2220,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:11"
									},
									"returnParameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "367:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2223,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:11"
									},
									"scope": 2318,
									"src": "311:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2251,
										"nodeType": "Block",
										"src": "554:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2244,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "571:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2245,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "575:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2248,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2239,
														"src": "583:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:11",
													"trueExpression": {
														"id": 2247,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2237,
														"src": "579:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2243,
												"id": 2250,
												"nodeType": "Return",
												"src": "564:20:11"
											}
										]
									},
									"documentation": {
										"id": 2235,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:11",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "503:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2236,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "513:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2238,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:11"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "546:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2241,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:11"
									},
									"scope": 2318,
									"src": "490:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2295,
										"nodeType": "Block",
										"src": "796:162:11",
										"statements": [
											{
												"assignments": [
													2263
												],
												"declarations": [
													{
														"constant": false,
														"id": 2263,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 2295,
														"src": "858:8:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2262,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2276,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2264,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2255,
																	"src": "870:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2265,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2257,
																	"src": "874:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2267,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2268,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2255,
																				"src": "881:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2269,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2257,
																				"src": "885:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2271,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2274,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2277,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2263,
														"src": "910:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2282,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2263,
																						"src": "930:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2281,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2280,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2283,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2278,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2287,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2255,
																				"src": "944:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2288,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2257,
																				"src": "948:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2290,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2292,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2261,
												"id": 2294,
												"nodeType": "Return",
												"src": "903:48:11"
											}
										]
									},
									"documentation": {
										"id": 2253,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:11",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "745:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2254,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "755:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2256,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:11"
									},
									"returnParameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "788:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2259,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:11"
									},
									"scope": 2318,
									"src": "728:230:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2316,
										"nodeType": "Block",
										"src": "1102:158:11",
										"statements": [
											{
												"id": 2315,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2306,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2299,
																			"src": "1227:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:11",
																		"subExpression": {
																			"id": 2310,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2299,
																			"src": "1241:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:11",
																	"trueExpression": {
																		"id": 2309,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2299,
																		"src": "1236:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2304,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2303,
														"id": 2314,
														"nodeType": "Return",
														"src": "1212:31:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2297,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:11",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "1060:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2298,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:11"
									},
									"returnParameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "1093:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:11"
									},
									"scope": 2318,
									"src": "1047:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2319,
							"src": "215:1047:11",
							"usedErrors": []
						}
					],
					"src": "109:1154:11"
				},
				"id": 11
			}
		}
	}
}